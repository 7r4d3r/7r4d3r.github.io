{"version":3,"sources":["wallet-adapters/ledger/core.ts","assets/logo.svg","utils/utils.tsx","utils/fetch-loop.tsx","utils/connection.tsx","components/Link.js","utils/notifications.tsx","wallet-adapters/types.ts","wallet-adapters/ledger/index.tsx","wallet-adapters/phantom/index.tsx","wallet-adapters/math/index.tsx","wallet-adapters/solflare-extension/index.tsx","utils/wallet.tsx","wallet-adapters/sollet-extension/index.tsx","global_style.ts","components/ErrorBoundary.jsx","utils/send.tsx","utils/tokens.tsx","utils/raydiumConnector.tsx","utils/markets.tsx","components/CustomMarketDialog.jsx","components/layout/FloatingElement.jsx","components/UserInfoTable/BalancesTable.jsx","components/UserInfoTable/OpenOrderTable.tsx","components/DeprecatedMarketsInstructions.js","components/LinkAddress.tsx","components/Orderbook.jsx","utils/useInterval.tsx","utils/usePrevious.tsx","components/DepositDialog.jsx","components/StandaloneTokenAccountSelect.tsx","components/StandaloneBalancesDisplay.tsx","components/TradingView/saveLoadAdapter.tsx","charting_library/charting_library.esm.js","utils/Datafeed.tsx","components/TradingView/index.tsx","components/TradeForm.tsx","components/TradesTable.tsx","components/UserInfoTable/FillsTable.jsx","components/UserInfoTable/FeesTable.js","components/UserInfoTable/index.jsx","pages/TradePage.tsx","components/WalletConnect.tsx","pages/OpenOrdersPage.tsx","components/layout/DataTable.jsx","components/UserInfoTable/WalletBalancesTable.tsx","pages/BalancesPage.tsx","components/ConvertForm.tsx","pages/ConvertPage.tsx","components/CustomClusterEndpointDialog.tsx","components/TopBar.tsx","components/Footer.tsx","components/BasicLayout.js","components/useMintInput.tsx","pages/ListNewMarketPage.jsx","pages/pools/NewPoolPage.tsx","components/MintName.tsx","pages/pools/PoolPage/PoolBasketDisplay.tsx","pages/pools/PoolPage/PoolInfoPanel.tsx","pages/pools/PoolPage/PoolCreateRedeemPanel.tsx","pages/pools/PoolPage/PoolBalancesPanel.tsx","pages/pools/PoolPage/PoolAdminPanel.tsx","pages/pools/PoolPage/index.tsx","pages/pools/PoolListPage.tsx","routes.tsx","utils/referrer.tsx","App.tsx","serviceWorker.js","index.js"],"names":["ledgerSend","transport","instruction","p1","payload","a","p2","payloadOffset","length","chunk","slice","console","log","toString","send","Error","reply","harden","n","getSolanaDerivationPath","account","change","undefined","derivationPath","Buffer","alloc","offset","writeUInt8","writeUInt32BE","signTransaction","transaction","messageBytes","serializeMessage","signBytes","bytes","numPaths","concat","getPublicKey","publicKeyBytes","PublicKey","module","exports","isValidPublicKey","key","sleep","ms","Promise","resolve","setTimeout","percentFormat","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","floorToDecimal","value","decimals","Math","floor","roundToDecimal","round","getDecimalCount","isNaN","includes","split","parseInt","divideBnToNumber","numerator","denominator","quotient","div","toNumber","rem","umod","gcd","getTokenMultiplierFromDecimals","BN","pow","localStorageListeners","useLocalStorageStringState","defaultState","state","localStorage","getItem","useState","notify","useEffect","push","filter","listener","setState","useCallback","newState","removeItem","setItem","forEach","useLocalStorageState","JSON","stringify","stringState","setStringState","useMemo","parse","abbreviateAddress","address","size","base58","toBase58","isEqual","obj1","obj2","keys","Object","k","pageLoadTime","Date","globalCache","Map","FetchLoopListener","cacheKey","fn","refreshInterval","refreshIntervalOnError","callback","cacheNullValues","this","FetchLoopInternal","timeoutId","listeners","errors","refresh","clearTimeout","stopped","errored","data","set","notifyListeners","warn","waitTime","min","timeSincePageLoad","document","visibilityState","hasFocus","random","Set","map","refreshIntervalsOnError","x","previousRefreshInterval","add","assert","delete","globalLoops","loops","has","get","addListener","loop","removeListener","all","values","useAsyncData","asyncFn","useReducer","i","rerender","loaded","refreshCache","clearCache","refreshAllCaches","setCache","initializeOnly","endpoints","url","weight","ENDPOINTS","name","endpoint","pointer","api","getRandomEndpoint","custom","accountListenerCount","ConnectionContext","React","createContext","ConnectionProvider","children","setEndpoint","customEndpoints","setCustomEndpoints","availableEndpoints","connection","Connection","sendConnection","id","onAccountChange","Account","publicKey","removeAccountChangeListener","onSlotChange","removeSlotChangeListener","Provider","useConnection","context","useContext","useSendConnection","useConnectionConfig","endpointInfo","find","info","useAccountInfo","tuple","getAccountInfo","accountInfo","count","previousInfo","subscriptionId","equals","lamports","currentItem","previousInfoRef","useRef","current","useAccountData","Link","external","props","to","rest","href","target","rel","message","description","txid","type","placement","color","notification","opacity","backgroundColor","DEFAULT_PUBLIC_KEY","LedgerWalletAdapter","_connecting","_publicKey","_transport","transactions","result","signed","signature","addSignature","TransportWebUSB","create","emit","disconnect","close","EventEmitter","PhantomWalletAdapter","_handleConnect","args","_handleDisconnect","connect","bind","window","solana","isPhantom","_provider","isConnected","autoApprove","signAllTransactions","open","on","MathWalletAdapter","_onProcess","_connected","isMathWallet","getAccount","then","catch","finally","SolflareExtensionWalletAdapter","off","solflare","isSolflare","ASSET_URL","WALLET_PROVIDERS","icon","adapter","_","network","sollet","Wallet","WalletContext","WalletProvider","autoConnect","setAutoConnect","providerUrl","setProviderUrl","provider","wallet","setWallet","updateWallet","readyState","removeEventListener","addEventListener","connected","setConnected","walletPublicKey","substring","isModalVisible","setIsModalVisible","select","providerName","title","okText","visible","okButtonProps","display","onCancel","width","onClick","alt","height","src","marginRight","textAlign","marginBottom","useWallet","setProvider","GlobalStyle","createGlobalStyle","Title","Typography","ErrorBoundary","hasError","level","error","Component","createTokenAccountTransaction","mintPublicKey","Token","getAssociatedTokenAddress","ASSOCIATED_TOKEN_PROGRAM_ID","TOKEN_PROGRAM_ID","ata","Transaction","createAssociatedTokenAccountInstruction","newAccountPubkey","settleFunds","market","openOrders","baseCurrencyAccount","quoteCurrencyAccount","sendNotification","usdcRef","usdtRef","baseCurrencyAccountPubkey","pubkey","quoteCurrencyAccountPubkey","baseMintAddress","createAccountTransaction","quoteMintAddress","referrerQuoteWallet","supportsReferralFees","quoteToken","getTokenByMintAddress","referrer","makeSettleFundsTransaction","settleFundsTransaction","settleFundsSigners","signers","mergeTransactions","sendTransaction","sendingMessage","settleAllFunds","tokenAccounts","markets","selectedTokenAccounts","programIds","reduce","cumulative","m","_programId","programId","p","getOpenOrdersAccountsForProgramId","OpenOrders","findForOwner","openOrdersAccounts","baseTokenFree","quoteTokenFree","openOrdersAccountsForProgramIds","accounts","openOrdersAccount","_decoded","ownAddress","isZero","baseMint","quoteMint","selectedBaseTokenAccount","getSelectedTokenAccountForMint","selectedQuoteTokenAccount","settleTransactions","t","signer","s","cancelOrder","params","cancelOrders","orders","order","makeMatchOrdersTransaction","makeCancelOrderInstruction","placeOrder","side","price","orderType","feeDiscountPubkey","formattedMinOrderSize","minOrderSize","toFixed","formattedTickSize","tickSize","isIncrement","num","step","abs","owner","payer","matchOrderstransaction","startTime","getUnixTs","makePlaceOrderTransaction","placeOrderTx","placeOrderSigners","endTime","listMarket","getVaultOwnerAndNonce","nonce","createProgramAddress","toBuffer","toArrayLike","dexProgramId","vaultOwner","iaddn","baseLotSize","quoteLotSize","requestQueue","eventQueue","bids","asks","baseVault","quoteVault","feeRateBps","quoteDustThreshold","vaultSignerNonce","tx1","SystemProgram","getMinimumBalanceForRentExemption","TokenInstructions","fromPubkey","space","createAccount","initializeAccount","mint","tx2","Market","getLayout","span","DexInstructions","initializeMarket","authority","signTransactions","transactionsAndSigners","signedTransactions","signedTransaction","sendSignedTransaction","getTime","sentMessage","successMessage","timeout","getRecentBlockhash","recentBlockhash","blockhash","setSigners","partialSign","rawTransaction","serialize","sendRawTransaction","skipPreflight","done","awaitTransactionSignatureConfirmation","simulateResult","simulateTransaction","err","logs","line","startsWith","parsedErrorInfo","parseInstructionErrorResponse","parsedError","reject","onSignature","e","getSignatureStatuses","signatureStatuses","confirmations","resultDescription","AccountInfoResult","struct","executable","rentEpoch","GetMultipleAccountsAndContextRpcResult","array","union","jsonRpcVersion","literal","jsonrpc","jsonRpcResult","slot","getMultipleSolanaAccounts","publicKeys","commitment","_rpcRequest","unsafeRes","res","join","from","fromEntries","_recentBlockhash","_disableBlockhashCaching","signData","wireTransaction","_serialize","encodedTransaction","encoding","ACCOUNT_LAYOUT","BufferLayout","MINT_LAYOUT","parseTokenAccountData","decode","amount","parseTokenMintData","initialized","supply","getOwnedAccountsFilters","memcmp","offsetOf","dataSize","getOwnedTokenAccounts","filters","getProgramAccounts","resp","getTokenAccountInfo","ownerAddress","splAccounts","parsedSplAccounts","effectiveMint","WRAPPED_SOL_MINT","useMintToTickers","customMarkets","useCustomMarkets","useAllMarkets","mintsToTickers","TOKEN_MINTS","customMarketInfo","customMarket","baseLabel","quoteLabel","useMintInfos","useTokenAccounts","allMarkets","allMints","marketInfo","uniqueMints","stringMint","mintInfos","entries","mintAddress","NATIVE_SOL","cloneDeep","token","TOKENS","symbol","WSOL","BTC","soETH","USDT","soUSDT","USDC","GEMS","RaydiumApi","path","fetch","URL","response","ok","json","responseJson","success","reverse","marketAddress","_MARKETS","deprecated","USE_MARKETS","getMarketInfos","load","marketName","_VERY_SLOW_REFRESH_INTERVAL","useUnmigratedOpenOrdersAccounts","deprecatedOpenOrdersAccounts","deprecatedProgramIds","Array","publicKeyStr","baseTokenTotal","quoteTokenTotal","some","MarketContext","DEFAULT_MARKET","getMarketDetails","otherMarket","indexItem","itemToken","item","baseCurrency","quoteCurrency","setCustomMarkets","MarketProvider","setMarketAddress","marketInfos","setMarket","setMarketName","localToken","setLocalToken","localMarket","setLocalMarket","fetchMarket","marketData","marketDict","itemMarket","fetchToken","tokenData","getTradePageUrl","saved","useSelectedTokenAccounts","useMarket","useMarkPrice","markPrice","setMarkPrice","useOrderbook","orderbook","trades","limit","_useUnfilteredTrades","eventFlags","maker","trade","useTrades","bb","Number","ba","last","sort","b","getUnfilteredTrades","loadFills","useOrderbookAccounts","bidData","askData","bidOrderbook","Orderbook","askOrderbook","depth","getL2","useOpenOrdersAccounts","fast","getOpenOrdersAccounts","findOpenOrdersAccountsForOwner","useSelectedOpenOrdersAccount","selectedPubKey","filtered","useSelectedQuoteCurrencyAccount","useSelectedBaseCurrencyAccount","useSelectedQuoteCurrencyBalances","quoteSplSizeToNumber","useSelectedBaseCurrencyBalances","baseSplSizeToNumber","useLocallyStoredFeeDiscountKey","storedFeeDiscountKey","setStoredFeeDiscountKey","useFeeDiscountKeys","findFeeDiscountKeys","feeDiscountKey","useAllOpenOrdersBalances","useMarketInfos","stringProgramId","flat","useAllOpenOrdersAccounts","loadedOpenOrdersAccounts","mintInfosConnected","marketsByAddress","openOrdersBalances","baseMintInfo","baseFree","baseTotal","quoteMintInfo","quoteFree","quoteTotal","free","total","useBalances","baseCurrencyBalances","quoteCurrencyBalances","baseExists","quoteExists","coin","sub","unsettled","useUnmigratedDeprecatedMarkets","marketsList","deps","getMarket","openOrdersList","customMarketsInfo","itemNew","getMarketOrderPrice","cost","tickSizeDecimals","isBids","costAtLevel","spentCost","sendPrice","getExpectedFillPrice","sizeAtLevel","avgPrice","totalAvgPrice","Text","CustomMarketDialog","onAddCustomMarket","onClose","marketId","setMarketId","marketLabel","setMarketLabel","setBaseLabel","setQuoteLabel","loadingMarket","setLoadingMarket","wellFormedMarketId","marketAccountInfo","MARKETS","resetLabels","knownMarket","knownProgram","knownBaseCurrency","knownQuoteCurrency","canSubmit","onDoClose","onOk","disabled","placeholder","onChange","suffix","LoadingOutlined","marginTop","gutter","Wrapper","styled","FloatingElement","stretchVertical","BalancesTable","balances","showMarket","hideWalletBalance","onSettleSuccess","rowItem","setRowItem","fontSize","paddingBottom","overflowX","ghost","onSettleFunds","CancelButton","Button","OpenOrderTable","onCancelSuccess","pageSize","loading","marketFilter","cancelId","setCancelId","orderId","dataSource","cancel","DeprecatedMarketsInstructions","switchToLiveMarkets","openOrderAccountBalances","inOrdersBase","inOrdersQuote","unsettledBase","unsettledQuote","useBalancesForDeprecatedMarkets","marketsAndOrders","getOrders","loadOrdersForOwner","refreshOpenOrders","useGetOpenOrdersForDeprecatedMarkets","needToCancelOrders","filteredBalances","needToSettleFunds","justifyContent","LinkAddress","shorten","LinkOutlined","cursor","SizeTitle","Row","MarkPriceTitle","Line","css","Price","smallScreen","onPrice","onSize","currentOrderbookData","lastOrderbookData","orderbookData","setOrderbookData","getCumulativeOrderbookSide","totalSize","backwards","cumulativeSize","sizePercent","delay","savedCallback","setInterval","clearInterval","useInterval","sum","index","bidsToDisplay","asksToDisplay","flex","overflow","borderTop","borderBottom","padding","paddingRight","OrderbookRow","onPriceClick","onSizeClick","MarkPriceComponent","memo","element","classList","contains","remove","formattedSize","formattedPrice","ref","data-width","data-bgcolor","prevProps","nextProps","previousMarkPrice","usePrevious","markPriceColor","formattedMarkPrice","justify","ArrowUpOutlined","ArrowDownOutlined","DepositDialog","coinMint","depositCoin","baseOrQuote","paddingTop","StandaloneTokenAccountsSelect","selectedValue","label","setSelectedTokenAccounts","Fragment","onSelect","newSelectedTokenAccounts","Option","code","shape","CopyOutlined","navigator","clipboard","writeText","RowBox","ActionButton","StandaloneBalancesDisplay","setBaseOrQuote","formattedBalances","currency","align","CHARTS_KEY","STUDIES_KEY","getAllCharts","charts","removeChart","chartId","chart","saveChart","chartData","content","timestamp","splice","getChartContent","getAllStudyTemplates","studies","removeStudyTemplate","study","saveStudyTemplate","getStudyTemplateContent","assign","o","arguments","r","prototype","hasOwnProperty","call","apply","isArray","mobile","disabled_features","enabled_features","interval","timezone","container_id","library_path","locale","widgetbar","details","watchlist","watchlist_settings","default_symbols","overrides","studies_overrides","trading_customization","position","brokerConfig","configFlags","fullscreen","autosize","debug","logo","time_frames","text","resolution","client_id","user_id","charts_storage_api_version","favorites","intervals","chartTypes","_id","_ready","_readyHandlers","_onWindowResize","_autoResizeChart","datafeed","_options","preset","theme","loading_screen","_create","onChartReady","headerReady","_innerWindowLoaded","_innerWindow","onGrayedObjectClicked","_innerAPI","onShortcut","createShortcutAction","subscribe","unsubscribe","getLanguage","setSymbol","changeSymbol","_iFrame","parentNode","removeChild","closePopupsAndDialogs","selectLineTool","selectedLineTool","save","loadChart","extendedData","getSavedCharts","loadChartFromServer","saveChartToServer","removeChartFromServer","onContextMenu","createButton","showNoticeDialog","showConfirmDialog","showLoadChartDialog","showSaveAsChartDialog","symbolInterval","getSymbolInterval","mainSeriesPriceFormatter","getIntervals","getStudiesList","addCustomCSSFile","applyOverrides","applyStudiesOverrides","watchList","activeChart","chartsCount","layout","setLayout","layoutName","changeTheme","getTheme","takeScreenshot","lockAllDrawingTools","hideAllDrawingTools","drawOnAllCharts","magnetEnabled","magnetMode","undoRedoState","setIntervalLinkingEnabled","setTimeFrame","symbolSync","intervalSync","crosshairSync","timeSync","getAllFeatures","takeClientScreenshot","tradingViewApi","contentWindow","innerHeight","_render","getElementById","innerHTML","querySelector","widgetReady","initializationFinished","customFormatters","custom_formatters","brokerFactory","broker_factory","studiesOverrides","tradingCustomization","disabledFeatures","enabledFeatures","broker_config","restConfig","numeric_formatting","rss_news_feed","newsProvider","news_provider","loadLastChart","load_last_chart","saveLoadAdapter","save_load_adapter","settingsAdapter","settings_adapter","getCustomIndicators","custom_indicators_getter","saved_data","chartContent","encodeURIComponent","timeframe","toolbar_bg","replace","studies_access","drawings_access","String","charts_storage_url","custom_css_url","auto_save_delay","snapshot_url","study_count_limit","symbol_search_request_delay","compare_symbols","TradingView","version","URL_SERVER","makeDataFeed","subscriptions","overTime","lastReqTime","getApi","onReady","supported_resolutions","supports_group_request","supports_marks","supports_search","supports_timescale_marks","searchSymbol","userInput","exchange","symbolType","onResult","resolveSymbol","symbolName","onSymboleResolvedCallback","onResolveErrorCallback","extension","fromCustomMarket","customMarketStr","userName","ticker","getBars","symbolInfo","onHistoryCallback","onErrorCallback","firstDataRequest","ceil","convertResolutionToApi","minTs","out_count","nodeData","c","parseCandles","subscribeBars","onRealtimeCallback","subscriberUID","onResetCacheNeededCallback","stop","reduceTs","resolutionApi","candle","unsubscribeBars","searchSymbols","marketList","reList","full_name","minCount","resolutionTv","ts","candles","time","high","h","low","l","volume","v","TVChartContainer","defaultProps","containerId","libraryPath","chartsStorageUrl","chartsStorageApiVersion","clientId","userId","tvWidgetRef","chartProperties","savedProperties","obj","prefix","restrict","restrictTo","recurse","newKey","flatten","widgetOptions","initialSettings","showRelativePriceControl","showCurrencyRiskInQty","showPercentRiskInQty","showBracketsInCurrency","showBracketsInPercent","hideFloatingPanel","setValue","removeValue","tvWidget","widget","innerWidth","className","BuyButton","sliderMarks","0","25","50","75","100","TradeForm","setChangeOrderRef","setSide","postOnly","setPostOnly","ioc","setIoc","baseSize","setBaseSize","quoteSize","setQuoteSize","setPrice","submitting","setSubmitting","sizeFraction","setSizeFraction","quoteBalance","baseBalance","sizeDecimalCount","priceDecimalCount","doChangeOrder","onSliderChange","updateSizeFraction","walletPubkey","warmUpCache","findBestFeeDiscountKey","onSetBaseSize","usePrice","maxSize","parseFloat","newSize","formatted","flexDirection","border","background","fontStyle","fontWeight","defaultValue","bordered","left","top","borderRadius","onSetQuoteSize","tipFormatter","marks","paddingLeft","checked","block","toUpperCase","PublicTrades","getRecentTrades","useRaydiumTrades","minHeight","maxHeight","overflowY","toLocaleTimeString","FillsTable","fills","fill","useFills","liquidity","feeCost","getFeeRates","feeTier","taker","FeesTable","balance","format","SRM_MINT","MSRM_MINT","Index","activeKeyStr","setActiveKeyStr","supportsSrmFeeDiscounts","OpenOrdersTab","filterForOpenOrders","useOpenOrders","BalancesTab","Select","OptGroup","TradePage","useParams","history","useHistory","TradePageInner","handleDeprecated","setHandleDeprecated","addMarketVisible","setAddMarketVisible","deprecatedMarkets","dimensions","changeOrderRef","componentProps","onChangeOrderRef","component","newCustomMarkets","MarketSelector","onDeleteCustomMarket","trigger","InfoCircleOutlined","PlusCircleOutlined","selectedMarket","proposedMarket","showSearch","optionFilterProp","listHeight","filterOption","input","option","toLowerCase","indexOf","nanoid","DeleteOutlined","stopPropagation","nativeEvent","stopImmediatePropagation","arr","addList","uniqueArray","DeprecatedMarketsPage","RenderNormal","flexWrap","minWidth","RenderSmaller","xs","sm","WalletConnect","menu","Item","overlay","OpenOrdersPage","setLoaded","setRefresh","setOpenOrders","lastRefresh","setLastRefresh","_openOrders","getOpenOrdersForMarket","getAllOpenOrders","prev","useAllOpenOrders","marketAddressesToNames","orderInfos","DataTable","columns","emptyLabel","pagination","renderEmpty","alignItems","WalletBalancesTable","walletBalances","tokenAccountsConnected","allMarketsConnected","settlingFunds","setSettlingFunds","render","walletBalance","dataIndex","TabPane","Tabs","BalancesPage","parsedAccount","mintInfo","additionalAmount","useWalletBalancesForAllMarkets","mintToTickers","openOrdersFree","openOrdersTotal","defaultActiveKey","tab","ConvertButton","ConvertForm","fromToken","setFromToken","toToken","setToToken","setSize","marketInfosbyName","tokenConvertMap","base","quote","maxWidth","ConvertFormSubmit","fromAmount","setFromAmount","toAmount","setToAmount","isConverting","setIsConverting","isFromTokenBaseOfMarket","onConvert","sidedOrderbookAccount","decodedOrderbookData","parsedPrice","parsedSize","getPrice","expectedPrice","canConvert","coinBalance","availableBalance","addonBefore","SwapOutlined","ConvertPage","CustomClusterEndpointDialog","testingConnection","onAddCustomEndpoint","customEndpoint","setCustomEndpoint","customEndpointName","setCustomEndpointName","LogoWrapper","MENU","link","child","TopBar","addEndpointVisible","setAddEndpointVisible","setTestingConnection","location","useLocation","endpointInfoCustom","handler","tradePageUrl","pathname","menuDiv","Menu","SubMenu","mode","defaultSelectedKeys","selectable","handleError","getEpochInfo","newCustomEndpoints","wrap","Footer","Layout","useBreakpoint","Grid","footerElements","CustomFooter","lg","elem","Header","Content","BasicLayout","useMintInput","tooltip","setAddress","options","validateStatus","hasFeedback","help","parsed","ListNewMarketPage","baseMintInput","quoteMintInput","lotSize","setLotSize","setTickSize","listedMarket","setListedMarket","labelCol","wrapperCol","onFinish","initialValue","trim","colon","htmlType","AddRemoveTokenButtons","SIMPLE_POOL_PROGRAM_ID","DEFAULT_PROGRAM_ID","PROGRAM_ID_OPTIONS","NewPoolPage","poolName","setPoolName","setProgramId","initialSupply","setInitialSupply","valid","initialAssets","setInitialAssets","adminControlled","setAdminControlled","adminAddress","setAdminAddress","newPoolAddress","setNewPoolAddress","every","asset","assets","PoolTransactions","initializeSimplePool","poolStateSpace","poolMintDecimals","initialPoolMintSupply","assetMints","initialAssetQuantities","quantity","creator","creatorAssets","found","tokenAccount","additionalAccounts","isSigner","isWritable","poolAddress","AssetInput","mintInput","setQuantity","parsedQuantity","old","MintName","showAddress","mintKey","PoolBasketDisplay","poolInfo","basket","BasketItem","quantities","mintAccountInfo","quantityDisplay","Paragraph","feeFormat","PoolInfoPanel","getPoolBasket","redeem","totalBasket","copyable","poolTokenMint","adminKey","feeRate","PoolCreateRedeemPanel","CreateRedeemTab","action","basketLoaded","findTokenAccount","preventDefault","execute","poolTokenAccount","assetAccounts","onSubmit","PoolBalancesPanel","WalletBalancesTab","PoolBalancesTab","BalanceItem","isPoolToken","vaultAddress","balanceAccountInfo","PoolAdminPanel","PauseUnpauseTab","AddAssetTab","RemoveAssetTab","DepositTab","WithdrawTab","UpdateFeeTab","AdminControlledPoolInstructions","pause","unpause","useOnSubmitHandler","vaultSigner","createAssociatedTokenAccount","addAsset","MintSelector","SubmitButton","removeAsset","MintInPoolSelector","walletTokenAccount","mintDecimals","wrappedSolAccount","transfer","source","destination","closeAccount","approveDelegate","setFeeRate","updateFee","makeTransaction","Group","PoolPage","isPublicKey","poolAccountInfo","poolAccountLoaded","decodePoolState","program","mintAccountInfoLoaded","onBack","subTitle","isAdminControlledPool","Form","form","PoolListPage","setPoolAddress","Routes","basename","exact","ReferrerContext","USDC_MINT","USDT_MINT","findAssociatedTokenAddress","walletAddress","tokenMintAddress","findProgramAddress","SOL_TLD_AUTHORITY","getInputKey","getHashedName","hashed_input_name","getNameAccountKey","inputDomainKey","hashedInputName","ReferrerProvider","allowRefLink","process","REACT_APP_ALLOW_REF_LINK","refCode","setRefCode","usdc","setUsdc","usdt","setUsdt","usdcAddress","usdtAddress","REACT_APP_USDC_REFERRAL_FEES_ADDRESS","REACT_APP_USDT_REFERRAL_FEES_ADDRESS","NameRegistryState","retrieve","nameRegistryState","getTwitterRegistry","usdcAccountInfo","usdtAccountInfo","useFeesAccountsFromRefCode","App","fallback","Boolean","hostname","match","ReactDOM","StrictMode","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.50c9710d.chunk.js","sourcesContent":["import type Transport from '@ledgerhq/hw-transport';\nimport type { Transaction } from '@solana/web3.js';\n\nimport { PublicKey } from '@solana/web3.js';\n\nconst INS_GET_PUBKEY = 0x05;\nconst INS_SIGN_MESSAGE = 0x06;\n\nconst P1_NON_CONFIRM = 0x00;\nconst P1_CONFIRM = 0x01;\n\nconst P2_EXTEND = 0x01;\nconst P2_MORE = 0x02;\n\nconst MAX_PAYLOAD = 255;\n\nconst LEDGER_CLA = 0xe0;\n\n/*\n * Helper for chunked send of large payloads\n */\nasync function ledgerSend(\n  transport: Transport,\n  instruction: number,\n  p1: number,\n  payload: Buffer,\n) {\n  let p2 = 0;\n  let payloadOffset = 0;\n\n  if (payload.length > MAX_PAYLOAD) {\n    while (payload.length - payloadOffset > MAX_PAYLOAD) {\n      const chunk = payload.slice(payloadOffset, payloadOffset + MAX_PAYLOAD);\n      payloadOffset += MAX_PAYLOAD;\n      console.log(\n        'send',\n        (p2 | P2_MORE).toString(16),\n        chunk.length.toString(16),\n        chunk,\n      );\n      const reply = await transport.send(\n        LEDGER_CLA,\n        instruction,\n        p1,\n        p2 | P2_MORE,\n        chunk,\n      );\n      if (reply.length !== 2) {\n        throw new Error('Received unexpected reply payload');\n      }\n      p2 |= P2_EXTEND;\n    }\n  }\n\n  const chunk = payload.slice(payloadOffset);\n  console.log('send', p2.toString(16), chunk.length.toString(16), chunk);\n  const reply = await transport.send(LEDGER_CLA, instruction, p1, p2, chunk);\n\n  return reply.slice(0, reply.length - 2);\n}\n\nconst BIP32_HARDENED_BIT = (1 << 31) >>> 0;\nfunction harden(n: number = 0) {\n  return (n | BIP32_HARDENED_BIT) >>> 0;\n}\n\nexport function getSolanaDerivationPath(account?: number, change?: number) {\n  var length;\n  if (account !== undefined) {\n    if (change !== undefined) {\n      length = 4;\n    } else {\n      length = 3;\n    }\n  } else {\n    length = 2;\n  }\n\n  var derivationPath = Buffer.alloc(1 + length * 4);\n  // eslint-disable-next-line\n  var offset = 0;\n  offset = derivationPath.writeUInt8(length, offset);\n  offset = derivationPath.writeUInt32BE(harden(44), offset); // Using BIP44\n  offset = derivationPath.writeUInt32BE(harden(501), offset); // Solana's BIP44 path\n\n  if (length > 2) {\n    offset = derivationPath.writeUInt32BE(harden(account), offset);\n    if (length === 4) {\n      // @FIXME: https://github.com/project-serum/spl-token-wallet/issues/59\n      offset = derivationPath.writeUInt32BE(harden(change), offset);\n    }\n  }\n\n  return derivationPath;\n}\n\nexport async function signTransaction(\n  transport: Transport,\n  transaction: Transaction,\n  derivationPath: Buffer = getSolanaDerivationPath(),\n) {\n  const messageBytes = transaction.serializeMessage();\n  return signBytes(transport, messageBytes, derivationPath);\n}\n\nexport async function signBytes(\n  transport: Transport,\n  bytes: Buffer,\n  derivationPath: Buffer = getSolanaDerivationPath(),\n) {\n  const numPaths = Buffer.alloc(1);\n  numPaths.writeUInt8(1, 0);\n\n  const payload = Buffer.concat([numPaths, derivationPath, bytes]);\n\n  // @FIXME: must enable blind signing in Solana Ledger App per https://github.com/project-serum/spl-token-wallet/issues/71\n  // See also https://github.com/project-serum/spl-token-wallet/pull/23#issuecomment-712317053\n  return ledgerSend(transport, INS_SIGN_MESSAGE, P1_CONFIRM, payload);\n}\n\nexport async function getPublicKey(\n  transport: Transport,\n  derivationPath: Buffer = getSolanaDerivationPath(),\n) {\n  const publicKeyBytes = await ledgerSend(\n    transport,\n    INS_GET_PUBKEY,\n    P1_NON_CONFIRM,\n    derivationPath,\n  );\n\n  return new PublicKey(publicKeyBytes);\n}\n","module.exports = __webpack_public_path__ + \"static/media/logo.e422bd20.svg\";","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { PublicKey } from '@solana/web3.js';\nimport BN from 'bn.js';\n\nexport function isValidPublicKey(key) {\n  if (!key) {\n    return false;\n  }\n  try {\n    new PublicKey(key);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nexport async function sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport const percentFormat = new Intl.NumberFormat(undefined, {\n  style: 'percent',\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n});\n\nexport function floorToDecimal(\n  value: number,\n  decimals: number | undefined | null,\n) {\n  return decimals\n    ? Math.floor(value * 10 ** decimals) / 10 ** decimals\n    : Math.floor(value);\n}\n\nexport function roundToDecimal(\n  value: number,\n  decimals: number | undefined | null,\n) {\n  return decimals ? Math.round(value * 10 ** decimals) / 10 ** decimals : value;\n}\n\nexport function getDecimalCount(value): number {\n  if (\n    !isNaN(value) &&\n    Math.floor(value) !== value &&\n    value.toString().includes('.')\n  )\n    return value.toString().split('.')[1].length || 0;\n  if (\n    !isNaN(value) &&\n    Math.floor(value) !== value &&\n    value.toString().includes('e')\n  )\n    return parseInt(value.toString().split('e-')[1] || '0');\n  return 0;\n}\n\nexport function divideBnToNumber(numerator: BN, denominator: BN): number {\n  const quotient = numerator.div(denominator).toNumber();\n  const rem = numerator.umod(denominator);\n  const gcd = rem.gcd(denominator);\n  return quotient + rem.div(gcd).toNumber() / denominator.div(gcd).toNumber();\n}\n\nexport function getTokenMultiplierFromDecimals(decimals: number): BN {\n  return new BN(10).pow(new BN(decimals));\n}\n\nconst localStorageListeners = {};\n\nexport function useLocalStorageStringState(\n  key: string,\n  defaultState: string | null = null,\n): [string | null, (newState: string | null) => void] {\n  const state = localStorage.getItem(key) || defaultState;\n\n  const [, notify] = useState(key + '\\n' + state);\n\n  useEffect(() => {\n    if (!localStorageListeners[key]) {\n      localStorageListeners[key] = [];\n    }\n    localStorageListeners[key].push(notify);\n    return () => {\n      localStorageListeners[key] = localStorageListeners[key].filter(\n        (listener) => listener !== notify,\n      );\n      if (localStorageListeners[key].length === 0) {\n        delete localStorageListeners[key];\n      }\n    };\n  }, [key]);\n\n  const setState = useCallback<(newState: string | null) => void>(\n    (newState) => {\n      const changed = state !== newState;\n      if (!changed) {\n        return;\n      }\n\n      if (newState === null) {\n        localStorage.removeItem(key);\n      } else {\n        localStorage.setItem(key, newState);\n      }\n      localStorageListeners[key]?.forEach((listener) =>\n        listener(key + '\\n' + newState),\n      );\n    },\n    [state, key],\n  );\n\n  return [state, setState];\n}\n\nexport function useLocalStorageState<T = any>(\n  key: string,\n  defaultState: T | null = null,\n): [T, (newState: T) => void] {\n  let [stringState, setStringState] = useLocalStorageStringState(\n    key,\n    JSON.stringify(defaultState),\n  );\n  return [\n    useMemo(() => stringState && JSON.parse(stringState), [stringState]),\n    (newState) => setStringState(JSON.stringify(newState)),\n  ];\n}\n\nexport function useEffectAfterTimeout(effect, timeout) {\n  useEffect(() => {\n    const handle = setTimeout(effect, timeout);\n    return () => clearTimeout(handle);\n  });\n}\n\nexport function useListener(emitter, eventName) {\n  const [, forceUpdate] = useState(0);\n  useEffect(() => {\n    const listener = () => forceUpdate((i) => i + 1);\n    emitter.on(eventName, listener);\n    return () => emitter.removeListener(eventName, listener);\n  }, [emitter, eventName]);\n}\n\nexport function abbreviateAddress(address: PublicKey, size = 4) {\n  const base58 = address.toBase58();\n  return base58.slice(0, size) + '…' + base58.slice(-size);\n}\n\nexport function isEqual(obj1, obj2, keys) {\n  if (!keys && Object.keys(obj1).length !== Object.keys(obj2).length) {\n    return false;\n  }\n  keys = keys || Object.keys(obj1);\n  for (const k of keys) {\n    if (obj1[k] !== obj2[k]) {\n      // shallow comparison\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function flatten(obj, { prefix = '', restrictTo }) {\n  let restrict = restrictTo;\n  if (restrict) {\n    restrict = restrict.filter((k) => obj.hasOwnProperty(k));\n  }\n  const result = {};\n  (function recurse(obj, current, keys) {\n    (keys || Object.keys(obj)).forEach((key) => {\n      const value = obj[key];\n      const newKey = current ? current + '.' + key : key; // joined key with dot\n      if (value && typeof value === 'object') {\n        // @ts-ignore\n        recurse(value, newKey); // nested object\n      } else {\n        result[newKey] = value;\n      }\n    });\n  })(obj, prefix, restrict);\n  return result;\n}\n","import { useEffect, useReducer } from 'react';\n\nimport assert from 'assert';\n\nconst pageLoadTime = new Date();\n\nconst globalCache: Map<any, any> = new Map();\n\nclass FetchLoopListener<T = any> {\n  cacheKey: any;\n  fn: () => Promise<T>;\n  refreshInterval: number;\n  refreshIntervalOnError: number | null;\n  callback: () => void;\n  cacheNullValues: Boolean = true;\n\n  constructor(\n    cacheKey: any,\n    fn: () => Promise<T>,\n    refreshInterval: number,\n    refreshIntervalOnError: number | null,\n    callback: () => void,\n    cacheNullValues: Boolean,\n  ) {\n    this.cacheKey = cacheKey;\n    this.fn = fn;\n    this.refreshInterval = refreshInterval;\n    this.refreshIntervalOnError = refreshIntervalOnError;\n    this.callback = callback;\n    this.cacheNullValues = cacheNullValues;\n  }\n}\n\nclass FetchLoopInternal<T = any> {\n  cacheKey: any;\n  fn: () => Promise<T>;\n  timeoutId: null | any;\n  listeners: Set<FetchLoopListener<T>>;\n  errors: number;\n  cacheNullValues: Boolean = true;\n\n  constructor(cacheKey: any, fn: () => Promise<T>, cacheNullValues: Boolean) {\n    this.cacheKey = cacheKey;\n    this.fn = fn;\n    this.timeoutId = null;\n    this.listeners = new Set();\n    this.errors = 0;\n    this.cacheNullValues = cacheNullValues;\n  }\n\n  get refreshInterval(): number {\n    return Math.min(\n      ...[...this.listeners].map((listener) => listener.refreshInterval),\n    );\n  }\n\n  get refreshIntervalOnError(): number | null {\n    const refreshIntervalsOnError: number[] = [...this.listeners]\n      .map((listener) => listener.refreshIntervalOnError)\n      .filter((x): x is number => x !== null);\n    if (refreshIntervalsOnError.length === 0) {\n      return null;\n    }\n    return Math.min(...refreshIntervalsOnError);\n  }\n\n  get stopped(): boolean {\n    return this.listeners.size === 0;\n  }\n\n  addListener(listener: FetchLoopListener<T>): void {\n    const previousRefreshInterval = this.refreshInterval;\n    this.listeners.add(listener);\n    if (this.refreshInterval < previousRefreshInterval) {\n      this.refresh();\n    }\n  }\n\n  removeListener(listener: FetchLoopListener<T>): void {\n    assert(this.listeners.delete(listener));\n    if (this.stopped) {\n      if (this.timeoutId) {\n        clearTimeout(this.timeoutId);\n        this.timeoutId = null;\n      }\n    }\n  }\n\n  notifyListeners(): void {\n    this.listeners.forEach((listener) => listener.callback());\n  }\n\n  refresh = async () => {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId);\n      this.timeoutId = null;\n    }\n    if (this.stopped) {\n      return;\n    }\n\n    let errored = false;\n    try {\n      const data = await this.fn();\n      if (!this.cacheNullValues && data === null) {\n        console.log(`Not caching null value for ${this.cacheKey}`);\n        // cached data has not changed so no need to re-render\n        this.errors = 0;\n        return data;\n      } else {\n        globalCache.set(this.cacheKey, data);\n        this.errors = 0;\n        this.notifyListeners();\n        return data;\n      }\n    } catch (error) {\n      ++this.errors;\n      console.warn(error);\n      errored = true;\n    } finally {\n      if (!this.timeoutId && !this.stopped) {\n        let waitTime = this.refreshInterval;\n        if (\n          errored &&\n          this.refreshIntervalOnError &&\n          this.refreshIntervalOnError > 0\n        ) {\n          waitTime = this.refreshIntervalOnError;\n        }\n\n        // Back off on errors.\n        if (this.errors > 0) {\n          waitTime = Math.min(1000 * 2 ** (this.errors - 1), 60000);\n        }\n\n        // Don't do any refreshing for the first five seconds, to make way for other things to load.\n        const timeSincePageLoad = +new Date() - +pageLoadTime;\n        if (timeSincePageLoad < 5000) {\n          waitTime += 5000 - timeSincePageLoad / 2;\n        }\n\n        // Refresh background pages slowly.\n        if (document.visibilityState === 'hidden') {\n          waitTime = 60000;\n        } else if (!document.hasFocus()) {\n          waitTime *= 1.5;\n        }\n\n        // Add jitter so we don't send all requests at the same time.\n        waitTime *= 0.8 + 0.4 * Math.random();\n\n        this.timeoutId = setTimeout(this.refresh, waitTime);\n      }\n    }\n  };\n}\n\nclass FetchLoops {\n  loops = new Map();\n\n  addListener<T>(listener: FetchLoopListener<T>) {\n    if (!this.loops.has(listener.cacheKey)) {\n      this.loops.set(\n        listener.cacheKey,\n        new FetchLoopInternal<T>(\n          listener.cacheKey,\n          listener.fn,\n          listener.cacheNullValues,\n        ),\n      );\n    }\n    this.loops.get(listener.cacheKey).addListener(listener);\n  }\n\n  removeListener<T>(listener: FetchLoopListener<T>) {\n    const loop = this.loops.get(listener.cacheKey);\n    loop.removeListener(listener);\n    if (loop.stopped) {\n      this.loops.delete(listener.cacheKey);\n      globalCache.delete(listener.cacheKey);\n    }\n  }\n\n  refresh(cacheKey) {\n    if (this.loops.has(cacheKey)) {\n      this.loops.get(cacheKey).refresh();\n    }\n  }\n\n  refreshAll() {\n    return Promise.all([...this.loops.values()].map((loop) => loop.refresh()));\n  }\n}\nconst globalLoops = new FetchLoops();\n\nexport function useAsyncData<T = any>(\n  asyncFn: () => Promise<T>,\n  cacheKey: any,\n  { refreshInterval = 60000, refreshIntervalOnError = null } = {},\n  cacheNullValues: Boolean = true,\n): [null | undefined | T, boolean] {\n  const [, rerender] = useReducer((i) => i + 1, 0);\n\n  useEffect(() => {\n    if (!cacheKey) {\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n      return () => {};\n    }\n    const listener = new FetchLoopListener<T>(\n      cacheKey,\n      asyncFn,\n      refreshInterval,\n      refreshIntervalOnError,\n      rerender,\n      cacheNullValues,\n    );\n    globalLoops.addListener(listener);\n    return () => globalLoops.removeListener(listener);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cacheKey, refreshInterval]);\n\n  if (!cacheKey) {\n    return [null, false];\n  }\n\n  const loaded = globalCache.has(cacheKey);\n  const data = loaded ? globalCache.get(cacheKey) : undefined;\n  return [data, loaded];\n}\n\nexport function refreshCache(cacheKey: any, clearCache = false): void {\n  if (clearCache) {\n    globalCache.delete(cacheKey);\n  }\n  const loop = globalLoops.loops.get(cacheKey);\n  if (loop) {\n    loop.refresh();\n    if (clearCache) {\n      loop.notifyListeners();\n    }\n  }\n}\n\nexport function refreshAllCaches(): void {\n  for (const loop of globalLoops.loops.values()) {\n    loop.refresh();\n  }\n}\n\nexport function setCache(\n  cacheKey: any,\n  value: any,\n  { initializeOnly = false } = {},\n): void {\n  if (initializeOnly && globalCache.has(cacheKey)) {\n    return;\n  }\n  globalCache.set(cacheKey, value);\n  const loop = globalLoops.loops.get(cacheKey);\n  if (loop) {\n    loop.notifyListeners();\n  }\n}\n\nexport function getCache(\n  cacheKey: any\n) {\n  return globalCache.get(cacheKey);\n}\n","import { useLocalStorageState } from './utils';\nimport { Account, AccountInfo, Connection, PublicKey } from '@solana/web3.js';\nimport React, { useContext, useEffect, useMemo, useRef } from 'react';\nimport { setCache, useAsyncData } from './fetch-loop';\nimport tuple from 'immutable-tuple';\nimport { ConnectionContextValues, EndpointInfo } from './types';\n\nexport const endpoints = [\n  { url: 'https://still-weathered-pond.solana-mainnet.quiknode.pro', weight: 100 },\n  // { url: 'https://solana-api.tt-prod.net', weight: 100 }\n  // { url: 'https://solana-api.projectserum.com', weight: 100 }\n  // { url: 'https://raydium.genesysgo.net', weight: 100 }\n];\n\nexport function getRandomEndpoint() {\n  let pointer = 0;\n  const random = Math.random() * 100;\n  let api = endpoints[0].url;\n\n  for (const endpoint of endpoints) {\n    if (random > pointer + endpoint.weight) {\n      pointer += pointer + endpoint.weight;\n    } else if (random >= pointer && random < pointer + endpoint.weight) {\n      api = endpoint.url;\n      break;\n    } else {\n      api = endpoint.url;\n      break;\n    }\n  }\n\n  return api;\n}\n\nexport const ENDPOINTS: EndpointInfo[] = [\n  {\n    name: 'mainnet-beta',\n    // endpoint: 'https://solana-api.projectserum.com',\n    endpoint: getRandomEndpoint(),\n    custom: false,\n  },\n  { name: 'localnet', endpoint: 'http://127.0.0.1:8899', custom: false },\n];\n\nconst accountListenerCount = new Map();\n\nconst ConnectionContext: React.Context<null | ConnectionContextValues> =\n  React.createContext<null | ConnectionContextValues>(null);\n\nexport function ConnectionProvider({ children }) {\n  const [endpoint, setEndpoint] = useLocalStorageState<string>(\n    'connectionEndpts',\n    ENDPOINTS[0].endpoint,\n  );\n  const [customEndpoints, setCustomEndpoints] = useLocalStorageState<\n    EndpointInfo[]\n  >('customConnectionEndpoints', []);\n  const availableEndpoints = ENDPOINTS.concat(customEndpoints);\n\n  const connection = useMemo(\n    () => new Connection(endpoint, 'recent'),\n    [endpoint],\n  );\n  const sendConnection = useMemo(\n    () => new Connection(endpoint, 'recent'),\n    [endpoint],\n  );\n\n  // The websocket library solana/web3.js uses closes its websocket connection when the subscription list\n  // is empty after opening its first time, preventing subsequent subscriptions from receiving responses.\n  // This is a hack to prevent the list from every getting empty\n  useEffect(() => {\n    const id = connection.onAccountChange(new Account().publicKey, () => {});\n    return () => {\n      connection.removeAccountChangeListener(id);\n    };\n  }, [connection]);\n\n  useEffect(() => {\n    const id = connection.onSlotChange(() => null);\n    return () => {\n      connection.removeSlotChangeListener(id);\n    };\n  }, [connection]);\n\n  useEffect(() => {\n    const id = sendConnection.onAccountChange(\n      new Account().publicKey,\n      () => {},\n    );\n    return () => {\n      sendConnection.removeAccountChangeListener(id);\n    };\n  }, [sendConnection]);\n\n  useEffect(() => {\n    const id = sendConnection.onSlotChange(() => null);\n    return () => {\n      sendConnection.removeSlotChangeListener(id);\n    };\n  }, [sendConnection]);\n\n  return (\n    <ConnectionContext.Provider\n      value={{\n        endpoint,\n        setEndpoint,\n        connection,\n        sendConnection,\n        availableEndpoints,\n        setCustomEndpoints,\n      }}\n    >\n      {children}\n    </ConnectionContext.Provider>\n  );\n}\n\nexport function useConnection() {\n  const context = useContext(ConnectionContext);\n  if (!context) {\n    throw new Error('Missing connection context');\n  }\n  return context.connection;\n}\n\nexport function useSendConnection() {\n  const context = useContext(ConnectionContext);\n  if (!context) {\n    throw new Error('Missing connection context');\n  }\n  return context.sendConnection;\n}\n\nexport function useConnectionConfig() {\n  const context = useContext(ConnectionContext);\n  if (!context) {\n    throw new Error('Missing connection context');\n  }\n  return {\n    endpoint: context.endpoint,\n    endpointInfo: context.availableEndpoints.find(\n      (info) => info.endpoint === context.endpoint,\n    ),\n    setEndpoint: context.setEndpoint,\n    availableEndpoints: context.availableEndpoints,\n    setCustomEndpoints: context.setCustomEndpoints,\n  };\n}\n\nexport function useAccountInfo(\n  publicKey: PublicKey | undefined | null,\n): [AccountInfo<Buffer> | null | undefined, boolean] {\n  const connection = useConnection();\n  const cacheKey = tuple(connection, publicKey?.toBase58());\n  const [accountInfo, loaded] = useAsyncData<AccountInfo<Buffer> | null>(\n    async () => (publicKey ? connection.getAccountInfo(publicKey) : null),\n    cacheKey,\n    { refreshInterval: 60_000 },\n  );\n  useEffect(() => {\n    if (!publicKey) {\n      return;\n    }\n    if (accountListenerCount.has(cacheKey)) {\n      let currentItem = accountListenerCount.get(cacheKey);\n      ++currentItem.count;\n    } else {\n      let previousInfo: AccountInfo<Buffer> | null = null;\n      const subscriptionId = connection.onAccountChange(publicKey, (info) => {\n        if (\n          !previousInfo ||\n          !previousInfo.data.equals(info.data) ||\n          previousInfo.lamports !== info.lamports\n        ) {\n          previousInfo = info;\n          setCache(cacheKey, info);\n        }\n      });\n      accountListenerCount.set(cacheKey, { count: 1, subscriptionId });\n    }\n    return () => {\n      let currentItem = accountListenerCount.get(cacheKey);\n      let nextCount = currentItem.count - 1;\n      if (nextCount <= 0) {\n        connection.removeAccountChangeListener(currentItem.subscriptionId);\n        accountListenerCount.delete(cacheKey);\n      } else {\n        --currentItem.count;\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cacheKey]);\n  const previousInfoRef = useRef<AccountInfo<Buffer> | null | undefined>(null);\n  if (\n    !accountInfo ||\n    !previousInfoRef.current ||\n    !previousInfoRef.current.data.equals(accountInfo.data) ||\n    previousInfoRef.current.lamports !== accountInfo.lamports\n  ) {\n    previousInfoRef.current = accountInfo;\n  }\n  return [previousInfoRef.current, loaded];\n}\n\nexport function useAccountData(publicKey) {\n  const [accountInfo] = useAccountInfo(publicKey);\n  return accountInfo && accountInfo.data;\n}\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\nexport default function Link({ external = false, ...props }) {\n  let { to, children, ...rest } = props;\n  if (external) {\n    return (\n      <a href={to} target=\"_blank\" rel=\"noopener noreferrer\" {...rest}>\n        {children}\n      </a>\n    );\n  }\n  return (\n    <RouterLink to={to} {...rest}>\n      {children}\n    </RouterLink>\n  );\n}\n","import React from 'react';\nimport { notification } from 'antd';\nimport Link from '../components/Link';\n\nexport function notify({\n  message,\n  description,\n  txid,\n  type = 'info',\n  placement = 'bottomRight',\n}: {\n  message: string;\n  description?: string | JSX.Element;\n  txid?: string;\n  type?: string;\n  placement?: string;\n}) {\n  if (txid) {\n    description = (\n      <Link\n        external\n        to={'https://solscan.io/tx/' + txid}\n        style={{ color: '#0000ff' }}\n      >\n        View transaction {txid.slice(0, 8)}...{txid.slice(txid.length - 8)}\n      </Link>\n    );\n  }\n  notification[type]({\n    message: <span style={{ color: 'black' }}>{message}</span>,\n    description: (\n      <span style={{ color: 'black', opacity: 0.5 }}>{description}</span>\n    ),\n    placement,\n    style: {\n      backgroundColor: 'white',\n    },\n  });\n}\n","import { PublicKey, Transaction } from '@solana/web3.js';\n\nexport const DEFAULT_PUBLIC_KEY = new PublicKey(\n  '11111111111111111111111111111111',\n);\n\nexport interface WalletAdapter {\n  publicKey: PublicKey;\n  autoApprove: boolean;\n  connected: boolean;\n  signTransaction: (transaction: Transaction) => Promise<Transaction>;\n  signAllTransactions: (transaction: Transaction[]) => Promise<Transaction[]>;\n  connect: () => any;\n  disconnect: () => any;\n  on<T>(event: string, fn: () => void): this;\n}\n","import type Transport from '@ledgerhq/hw-transport';\nimport type { Transaction } from '@solana/web3.js';\n\nimport EventEmitter from 'eventemitter3';\nimport { PublicKey } from '@solana/web3.js';\nimport TransportWebUSB from '@ledgerhq/hw-transport-webusb';\nimport { notify } from '../../utils/notifications';\nimport { getPublicKey, signTransaction } from './core';\nimport { DEFAULT_PUBLIC_KEY, WalletAdapter } from '../types';\n\nexport class LedgerWalletAdapter extends EventEmitter implements WalletAdapter {\n  _connecting: boolean;\n  _publicKey: PublicKey | null;\n  _transport: Transport | null;\n\n  constructor() {\n    super();\n    this._connecting = false;\n    this._publicKey = null;\n    this._transport = null;\n  }\n\n  get publicKey() {\n    return this._publicKey || DEFAULT_PUBLIC_KEY;\n  }\n\n  get connected() {\n    return this._publicKey !== null;\n  }\n\n  get autoApprove() {\n    return false;\n  }\n\n  public async signAllTransactions(\n    transactions: Transaction[],\n  ): Promise<Transaction[]> {\n    const result: Transaction[] = [];\n    for (let i = 0; i < transactions.length; i++) {\n      const transaction = transactions[i];\n      const signed = await this.signTransaction(transaction);\n      result.push(signed);\n    }\n\n    return result;\n  }\n\n  async signTransaction(transaction: Transaction) {\n    if (!this._transport || !this._publicKey) {\n      throw new Error('Not connected to Ledger');\n    }\n\n    // @TODO: account selection (derivation path changes with account)\n    const signature = await signTransaction(this._transport, transaction);\n\n    transaction.addSignature(this._publicKey, signature);\n\n    return transaction;\n  }\n\n  async connect() {\n    if (this._connecting) {\n      return;\n    }\n\n    this._connecting = true;\n\n    try {\n      // @TODO: transport selection (WebUSB, WebHID, bluetooth, ...)\n      this._transport = await TransportWebUSB.create();\n      // @TODO: account selection\n      this._publicKey = await getPublicKey(this._transport);\n      this.emit('connect', this._publicKey);\n    } catch (error) {\n      notify({\n        message: 'Ledger Error',\n        description: error.message,\n      });\n      await this.disconnect();\n    } finally {\n      this._connecting = false;\n    }\n  }\n\n  async disconnect() {\n    let emit = false;\n    if (this._transport) {\n      await this._transport.close();\n      this._transport = null;\n      emit = true;\n    }\n\n    this._connecting = false;\n    this._publicKey = null;\n\n    if (emit) {\n      this.emit('disconnect');\n    }\n  }\n}\n","import EventEmitter from 'eventemitter3';\nimport { PublicKey, Transaction } from '@solana/web3.js';\nimport { notify } from '../../utils/notifications';\nimport { DEFAULT_PUBLIC_KEY, WalletAdapter } from '../types';\n\ntype PhantomEvent = 'disconnect' | 'connect';\ntype PhantomRequestMethod =\n  | 'connect'\n  | 'disconnect'\n  | 'signTransaction'\n  | 'signAllTransactions';\n\ninterface PhantomProvider {\n  publicKey?: PublicKey;\n  isConnected?: boolean;\n  autoApprove?: boolean;\n  signTransaction: (transaction: Transaction) => Promise<Transaction>;\n  signAllTransactions: (transactions: Transaction[]) => Promise<Transaction[]>;\n  connect: () => Promise<void>;\n  disconnect: () => Promise<void>;\n  on: (event: PhantomEvent, handler: (args: any) => void) => void;\n  request: (method: PhantomRequestMethod, params: any) => Promise<any>;\n  listeners: (event: PhantomEvent) => (() => void)[];\n}\n\nexport class PhantomWalletAdapter\n  extends EventEmitter\n  implements WalletAdapter {\n  constructor() {\n    super();\n    this.connect = this.connect.bind(this);\n  }\n\n  private get _provider(): PhantomProvider | undefined {\n    if ((window as any)?.solana?.isPhantom) {\n      return (window as any).solana;\n    }\n    return undefined;\n  }\n\n  private _handleConnect = (...args) => {\n    this.emit('connect', ...args);\n  }\n\n  private _handleDisconnect = (...args) => {\n    this.emit('disconnect', ...args);\n  }\n\n  get connected() {\n    return this._provider?.isConnected || false;\n  }\n\n  get autoApprove() {\n    return this._provider?.autoApprove || false;\n  }\n\n  async signAllTransactions(\n    transactions: Transaction[],\n  ): Promise<Transaction[]> {\n    if (!this._provider) {\n      return transactions;\n    }\n\n    return this._provider.signAllTransactions(transactions);\n  }\n\n  get publicKey() {\n    return this._provider?.publicKey || DEFAULT_PUBLIC_KEY;\n  }\n\n  async signTransaction(transaction: Transaction) {\n    if (!this._provider) {\n      return transaction;\n    }\n\n    return this._provider.signTransaction(transaction);\n  }\n\n  connect() {\n    if (!this._provider) {\n      window.open('https://phantom.app/', '_blank');\n      notify({\n        message: 'Connection Error',\n        description: 'Please install Phantom wallet',\n      });\n      return;\n    }\n    if (!this._provider.listeners('connect').length) {\n      this._provider?.on('connect', this._handleConnect);\n    }\n    if (!this._provider.listeners('disconnect').length) {\n      this._provider?.on('disconnect', this._handleDisconnect);\n    }\n    return this._provider?.connect();\n  }\n\n  disconnect() {\n    if (this._provider) {\n      this._provider.disconnect();\n    }\n  }\n}\n","import EventEmitter from 'eventemitter3';\nimport { PublicKey, Transaction } from '@solana/web3.js';\nimport { notify } from '../../utils/notifications';\nimport { DEFAULT_PUBLIC_KEY, WalletAdapter } from '../types';\n\nexport class MathWalletAdapter extends EventEmitter implements WalletAdapter {\n  _publicKey?: PublicKey;\n  _onProcess: boolean;\n  _connected: boolean;\n  constructor() {\n    super();\n    this._onProcess = false;\n    this._connected = false;\n    this.connect = this.connect.bind(this);\n  }\n\n  get connected() {\n    return this._connected;\n  }\n\n  get autoApprove() {\n    return false;\n  }\n\n  public async signAllTransactions(\n    transactions: Transaction[],\n  ): Promise<Transaction[]> {\n    if (!this._provider) {\n      return transactions;\n    }\n\n    return this._provider.signAllTransactions(transactions);\n  }\n\n  private get _provider() {\n    if ((window as any)?.solana?.isMathWallet) {\n      return (window as any).solana;\n    }\n    return undefined;\n  }\n\n  get publicKey() {\n    return this._publicKey || DEFAULT_PUBLIC_KEY;\n  }\n\n  async signTransaction(transaction: Transaction) {\n    if (!this._provider) {\n      return transaction;\n    }\n\n    return this._provider.signTransaction(transaction);\n  }\n\n  connect() {\n    if (this._onProcess) {\n      return;\n    }\n\n    if (!this._provider) {\n      window.open('https://mathwallet.org/', '_blank');\n      notify({\n        message: 'Math Wallet Error',\n        description: 'Please install mathwallet',\n      });\n      return;\n    }\n\n    this._onProcess = true;\n    this._provider\n      .getAccount()\n      .then((account: any) => {\n        this._publicKey = new PublicKey(account);\n        this._connected = true;\n        this.emit('connect', this._publicKey);\n      })\n      .catch(() => {\n        this.disconnect();\n      })\n      .finally(() => {\n        this._onProcess = false;\n      });\n  }\n\n  disconnect() {\n    if (this._publicKey) {\n      this._publicKey = undefined;\n      this._connected = false;\n      this.emit('disconnect');\n    }\n  }\n}\n","import EventEmitter from 'eventemitter3';\nimport { PublicKey, Transaction } from '@solana/web3.js';\nimport { notify } from '../../utils/notifications';\nimport { DEFAULT_PUBLIC_KEY, WalletAdapter } from '../types';\n\ntype SolflareExtensionEvent = 'disconnect' | 'connect';\ntype SolflareExtensionRequestMethod =\n  | 'connect'\n  | 'disconnect'\n  | 'signTransaction'\n  | 'signAllTransactions';\n\ninterface SolflareExtensionProvider {\n  publicKey?: PublicKey;\n  isConnected?: boolean;\n  autoApprove?: boolean;\n  signTransaction: (transaction: Transaction) => Promise<Transaction>;\n  signAllTransactions: (transactions: Transaction[]) => Promise<Transaction[]>;\n  connect: () => Promise<void>;\n  disconnect: () => Promise<void>;\n  on: (event: SolflareExtensionEvent, handler: (args: any) => void) => void;\n  off: (event: SolflareExtensionEvent, handler: (args: any) => void) => void;\n  request: (method: SolflareExtensionRequestMethod, params: any) => Promise<any>;\n}\n\nexport class SolflareExtensionWalletAdapter\n  extends EventEmitter\n  implements WalletAdapter {\n  constructor() {\n    super();\n    this.connect = this.connect.bind(this);\n  }\n\n  private get _provider(): SolflareExtensionProvider | undefined {\n    if ((window as any)?.solflare?.isSolflare) {\n      return (window as any).solflare;\n    }\n    return undefined;\n  }\n\n  private _handleConnect = (...args) => {\n    this.emit('connect', ...args);\n  }\n\n  private _handleDisconnect = (...args) => {\n    this._provider?.off('connect', this._handleConnect);\n    this._provider?.off('disconnect', this._handleDisconnect);\n    this.emit('disconnect', ...args);\n  }\n\n  get connected() {\n    return this._provider?.isConnected || false;\n  }\n\n  get autoApprove() {\n    return this._provider?.autoApprove || false;\n  }\n\n  async signAllTransactions(\n    transactions: Transaction[],\n  ): Promise<Transaction[]> {\n    if (!this._provider) {\n      return transactions;\n    }\n\n    return this._provider.signAllTransactions(transactions);\n  }\n\n  get publicKey() {\n    return this._provider?.publicKey || DEFAULT_PUBLIC_KEY;\n  }\n\n  async signTransaction(transaction: Transaction) {\n    if (!this._provider) {\n      return transaction;\n    }\n\n    return this._provider.signTransaction(transaction);\n  }\n\n  async connect() {\n    if (!this._provider) {\n      window.open('https://solflare.com/', '_blank');\n      notify({\n        message: 'Connection Error',\n        description: 'Please install Solflare extension',\n      });\n      return;\n    }\n    this._provider?.on('connect', this._handleConnect);\n    this._provider?.on('disconnect', this._handleDisconnect);\n    return this._provider?.connect();\n  }\n\n  async disconnect() {\n    if (this._provider) {\n      this._provider.disconnect();\n    }\n  }\n}\n","import React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport Wallet from '@project-serum/sol-wallet-adapter';\nimport { notify } from './notifications';\nimport { useConnectionConfig } from './connection';\nimport { useLocalStorageState } from './utils';\nimport { WalletContextValues } from './types';\nimport { Button, Modal } from 'antd';\nimport {\n  WalletAdapter,\n  LedgerWalletAdapter,\n  PhantomWalletAdapter,\n  SolletExtensionAdapter,\n  MathWalletAdapter,\n  SolflareExtensionWalletAdapter,\n} from '../wallet-adapters';\n\nconst ASSET_URL =\n  'https://cdn.jsdelivr.net/gh/solana-labs/oyster@main/assets/wallets';\nexport const WALLET_PROVIDERS = [\n  {\n    name: 'sollet.io',\n    url: 'https://www.sollet.io',\n    icon: `${ASSET_URL}/sollet.svg`,\n  },\n  {\n    name: 'Sollet Extension',\n    url: 'https://www.sollet.io/extension',\n    icon: `${ASSET_URL}/sollet.svg`,\n    adapter: SolletExtensionAdapter as any,\n  },\n  {\n    name: 'Ledger',\n    url: 'https://www.ledger.com',\n    icon: `${ASSET_URL}/ledger.svg`,\n    adapter: LedgerWalletAdapter,\n  },\n  {\n    name: 'Solflare',\n    url: 'https://solflare.com/access-wallet',\n    icon: `${ASSET_URL}/solflare.svg`,\n  },\n  {\n    name: 'Solflare Extension',\n    url: 'https://solflare.com',\n    icon: `${ASSET_URL}/solflare.svg`,\n    adapter: SolflareExtensionWalletAdapter,\n  },\n  {\n    name: 'Phantom',\n    url: 'https://www.phantom.app',\n    icon: `https://www.phantom.app/img/logo.png`,\n    adapter: PhantomWalletAdapter,\n  },\n  {\n    name: 'MathWallet',\n    url: 'https://www.mathwallet.org',\n    icon: `${ASSET_URL}/mathwallet.svg`,\n    adapter: MathWalletAdapter,\n  },\n];\n\nconst WalletContext = React.createContext<null | WalletContextValues>(null);\n\nexport function WalletProvider({ children }) {\n  const { endpoint } = useConnectionConfig();\n\n  const [autoConnect, setAutoConnect] = useState(false);\n  const [providerUrl, setProviderUrl] = useLocalStorageState('walletProvider');\n\n  const provider = useMemo(\n    () => WALLET_PROVIDERS.find(({ url }) => url === providerUrl),\n    [providerUrl],\n  );\n\n  let [wallet, setWallet] = useState<WalletAdapter | undefined>(undefined);\n\n  useEffect(() => {\n    if (provider) {\n      const updateWallet = () => {\n        // hack to also update wallet synchronously in case it disconnects\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        wallet = new (provider.adapter || Wallet)(\n          providerUrl,\n          endpoint,\n        ) as WalletAdapter;\n        setWallet(wallet);\n      };\n\n      if (document.readyState !== 'complete') {\n        // wait to ensure that browser extensions are loaded\n        const listener = () => {\n          updateWallet();\n          window.removeEventListener('load', listener);\n        };\n        window.addEventListener('load', listener);\n        return () => window.removeEventListener('load', listener);\n      } else {\n        updateWallet();\n      }\n    }\n  }, [provider, providerUrl, endpoint]);\n\n  const [connected, setConnected] = useState(false);\n\n  useEffect(() => {\n    if (wallet) {\n      wallet.on('connect', () => {\n        if (wallet?.publicKey) {\n          console.log('connected');\n          localStorage.removeItem('feeDiscountKey');\n          setConnected(true);\n          const walletPublicKey = wallet.publicKey.toBase58();\n          const keyToDisplay =\n            walletPublicKey.length > 20\n              ? `${walletPublicKey.substring(\n                  0,\n                  7,\n                )}.....${walletPublicKey.substring(\n                  walletPublicKey.length - 7,\n                  walletPublicKey.length,\n                )}`\n              : walletPublicKey;\n\n          notify({\n            message: 'Wallet update',\n            description: 'Connected to wallet ' + keyToDisplay,\n          });\n        }\n      });\n\n      wallet.on('disconnect', () => {\n        setConnected(false);\n        notify({\n          message: 'Wallet update',\n          description: 'Disconnected from wallet',\n        });\n        localStorage.removeItem('feeDiscountKey');\n      });\n    }\n\n    return () => {\n      setConnected(false);\n      if (wallet && wallet.connected) {\n        wallet.disconnect();\n        setConnected(false);\n      }\n    };\n  }, [wallet]);\n\n  useEffect(() => {\n    if (wallet && autoConnect) {\n      wallet.connect();\n      setAutoConnect(false);\n    }\n\n    return () => {};\n  }, [wallet, autoConnect]);\n\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const select = useCallback(() => setIsModalVisible(true), []);\n  const close = useCallback(() => setIsModalVisible(false), []);\n\n  return (\n    <WalletContext.Provider\n      value={{\n        wallet,\n        connected,\n        select,\n        providerUrl,\n        setProviderUrl,\n        providerName:\n          WALLET_PROVIDERS.find(({ url }) => url === providerUrl)?.name ??\n          providerUrl,\n      }}\n    >\n      {children}\n      <Modal\n        title=\"Select Wallet\"\n        okText=\"Connect\"\n        visible={isModalVisible}\n        okButtonProps={{ style: { display: 'none' } }}\n        onCancel={close}\n        width={400}\n      >\n        {WALLET_PROVIDERS.map((provider) => {\n          const onClick = function () {\n            setProviderUrl(provider.url);\n            setAutoConnect(true);\n            close();\n          };\n\n          return (\n            <Button\n              key={provider.name}\n              size=\"large\"\n              type={providerUrl === provider.url ? 'primary' : 'ghost'}\n              onClick={onClick}\n              icon={\n                <img\n                  alt={`${provider.name}`}\n                  width={20}\n                  height={20}\n                  src={provider.icon}\n                  style={{ marginRight: 8 }}\n                />\n              }\n              style={{\n                display: 'block',\n                width: '100%',\n                textAlign: 'left',\n                marginBottom: 8,\n              }}\n            >\n              {provider.name}\n            </Button>\n          );\n        })}\n      </Modal>\n    </WalletContext.Provider>\n  );\n}\n\nexport function useWallet() {\n  const context = useContext(WalletContext);\n  if (!context) {\n    throw new Error('Missing wallet context');\n  }\n\n  const wallet = context.wallet;\n  return {\n    connected: context.connected,\n    wallet: wallet,\n    providerUrl: context.providerUrl,\n    setProvider: context.setProviderUrl,\n    providerName: context.providerName,\n    select: context.select,\n    connect() {\n      wallet ? wallet.connect() : context.select();\n    },\n    disconnect() {\n      wallet?.disconnect();\n    },\n  };\n}\n","import Wallet from '@project-serum/sol-wallet-adapter';\nimport { notify } from '../../utils/notifications';\n\nexport function SolletExtensionAdapter(_, network) {\n  const sollet = (window as any).sollet;\n  if (sollet) {\n    return new Wallet(sollet, network);\n  }\n\n  return {\n    on: () => {},\n    connect: () => {\n      notify({\n        message: 'Sollet Extension Error',\n        description: 'Please install the Sollet Extension for Chrome',\n      });\n    }\n  }\n}","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\nhtml,body{\n  background: RGB(15,20,41,1);\n}\ninput[type=number]::-webkit-inner-spin-button {\n  opacity: 0;\n}\ninput[type=number]:hover::-webkit-inner-spin-button,\ninput[type=number]:focus::-webkit-inner-spin-button {\n  opacity: 0.25;\n}\n/* width */\n::-webkit-scrollbar {\n  width: 15px;\n}\n/* Track */\n::-webkit-scrollbar-track {\n  background: #2d313c;\n}\n/* Handle */\n::-webkit-scrollbar-thumb {\n  background: #5b5f67;\n}\n/* Handle on hover */\n::-webkit-scrollbar-thumb:hover {\n  background: #5b5f67;\n}\n.ant-slider-track, .ant-slider:hover .ant-slider-track {\n  background-color: #2abdd2;\n  opacity: 0.75;\n}\n.ant-slider-track,\n.ant-slider ant-slider-track:hover {\n  background-color: #2abdd2;\n  opacity: 0.75;\n}\n.ant-slider-dot-active,\n.ant-slider-handle,\n.ant-slider-handle-click-focused,\n.ant-slider:hover .ant-slider-handle:not(.ant-tooltip-open)  {\n  border: 2px solid #2abdd2; \n}\n.ant-table-tbody > tr.ant-table-row:hover > td {\n  background: #273043;\n}\n.ant-table-tbody > tr > td {\n  border-bottom: 8px solid #1A2029;\n}\n.ant-table-container table > thead > tr:first-child th {\n  border-bottom: none;\n}\n.ant-divider-horizontal.ant-divider-with-text::before, .ant-divider-horizontal.ant-divider-with-text::after {\n  border-top: 1px solid #434a59 !important;\n}\n.ant-layout {\n    background: #0F1429\n  }\n  .ant-table {\n    background: #212734;\n  }\n  .ant-table-thead > tr > th {\n    background: #1A2029;\n  }\n.ant-select-item-option-content {\n  img {\n    margin-right: 4px;\n  }\n}\n.ant-modal-content {\n  background-color: #212734;\n}\n\n@-webkit-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n@-moz-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n@-keyframes highlight {\n  from { background-color: #2abdd2;}\n  to {background-color: #1A2029;}\n}\n.flash {\n  -moz-animation: highlight 0.5s ease 0s 1 alternate ;\n  -webkit-animation: highlight 0.5s ease 0s 1 alternate;\n  animation: highlight 0.5s ease 0s 1 alternate;\n}`;\n","import React, { Component } from 'react';\nimport { Typography } from 'antd';\n\nconst { Title } = Typography;\n\nexport default class ErrorBoundary extends Component {\n  state = {\n    hasError: false,\n  };\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div>\n          <div>\n            <Title level={2}>Something went wrong.</Title>\n            <Title level={4}>Please try again later.</Title>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n","import { notify } from './notifications';\nimport { getDecimalCount, sleep } from './utils';\nimport { getSelectedTokenAccountForMint } from './markets';\nimport {\n  Account,\n  AccountInfo,\n  Commitment,\n  Connection,\n  PublicKey,\n  RpcResponseAndContext,\n  SimulatedTransactionResponse,\n  SystemProgram,\n  Transaction,\n  TransactionSignature,\n} from '@solana/web3.js';\nimport {\n  Token,\n  ASSOCIATED_TOKEN_PROGRAM_ID,\n  TOKEN_PROGRAM_ID,\n} from '@solana/spl-token';\nimport BN from 'bn.js';\nimport {\n  DexInstructions,\n  Market,\n  OpenOrders,\n  parseInstructionErrorResponse,\n  TokenInstructions,\n} from '@project-serum/serum';\nimport { SelectedTokenAccounts, TokenAccount } from './types';\nimport { Order } from '@project-serum/serum/lib/market';\nimport { Buffer } from 'buffer';\nimport assert from 'assert';\nimport { struct } from 'superstruct';\nimport { WalletAdapter } from '../wallet-adapters';\nimport { getTokenByMintAddress } from './tokens';\n\nexport async function createTokenAccountTransaction({\n  connection,\n  wallet,\n  mintPublicKey,\n}: {\n  connection: Connection;\n  wallet: WalletAdapter;\n  mintPublicKey: PublicKey;\n}): Promise<{\n  transaction: Transaction;\n  newAccountPubkey: PublicKey;\n}> {\n  const ata = await Token.getAssociatedTokenAddress(\n    ASSOCIATED_TOKEN_PROGRAM_ID,\n    TOKEN_PROGRAM_ID,\n    mintPublicKey,\n    wallet.publicKey,\n  );\n  const transaction = new Transaction();\n  transaction.add(\n    Token.createAssociatedTokenAccountInstruction(\n      ASSOCIATED_TOKEN_PROGRAM_ID,\n      TOKEN_PROGRAM_ID,\n      mintPublicKey,\n      ata,\n      wallet.publicKey,\n      wallet.publicKey,\n    ),\n  );\n  return {\n    transaction,\n    newAccountPubkey: ata,\n  };\n}\n\nexport async function settleFunds({\n  market,\n  openOrders,\n  connection,\n  wallet,\n  baseCurrencyAccount,\n  quoteCurrencyAccount,\n  sendNotification = true,\n  usdcRef = undefined,\n  usdtRef = undefined,\n}: {\n  market: Market;\n  openOrders: OpenOrders;\n  connection: Connection;\n  wallet: WalletAdapter;\n  baseCurrencyAccount: TokenAccount;\n  quoteCurrencyAccount: TokenAccount;\n  sendNotification?: boolean;\n  usdcRef?: PublicKey;\n  usdtRef?: PublicKey;\n}): Promise<string | undefined> {\n  if (\n    !market ||\n    !wallet ||\n    !connection ||\n    !openOrders ||\n    (!baseCurrencyAccount && !quoteCurrencyAccount)\n  ) {\n    if (sendNotification) {\n      notify({ message: 'Not connected' });\n    }\n    return;\n  }\n\n  let createAccountTransaction: Transaction | undefined;\n  let baseCurrencyAccountPubkey = baseCurrencyAccount?.pubkey;\n  let quoteCurrencyAccountPubkey = quoteCurrencyAccount?.pubkey;\n\n  if (!baseCurrencyAccountPubkey) {\n    const result = await createTokenAccountTransaction({\n      connection,\n      wallet,\n      mintPublicKey: market.baseMintAddress,\n    });\n    baseCurrencyAccountPubkey = result?.newAccountPubkey;\n    createAccountTransaction = result?.transaction;\n  }\n  if (!quoteCurrencyAccountPubkey) {\n    const result = await createTokenAccountTransaction({\n      connection,\n      wallet,\n      mintPublicKey: market.quoteMintAddress,\n    });\n    quoteCurrencyAccountPubkey = result?.newAccountPubkey;\n    createAccountTransaction = result?.transaction;\n  }\n  let referrerQuoteWallet: PublicKey | null = null;\n  if (market.supportsReferralFees) {\n    const quoteToken = getTokenByMintAddress(\n      market.quoteMintAddress.toBase58(),\n    );\n    if (quoteToken?.referrer) {\n      referrerQuoteWallet = new PublicKey(quoteToken?.referrer);\n    }\n  }\n  const {\n    transaction: settleFundsTransaction,\n    signers: settleFundsSigners,\n  } = await market.makeSettleFundsTransaction(\n    connection,\n    openOrders,\n    baseCurrencyAccountPubkey,\n    quoteCurrencyAccountPubkey,\n    referrerQuoteWallet,\n  );\n\n  let transaction = mergeTransactions([\n    createAccountTransaction,\n    settleFundsTransaction,\n  ]);\n\n  return await sendTransaction({\n    transaction,\n    signers: settleFundsSigners,\n    wallet,\n    connection,\n    sendingMessage: 'Settling funds...',\n    sendNotification,\n  });\n}\n\nexport async function settleAllFunds({\n  connection,\n  wallet,\n  tokenAccounts,\n  markets,\n  selectedTokenAccounts,\n}: {\n  connection: Connection;\n  wallet: WalletAdapter;\n  tokenAccounts: TokenAccount[];\n  markets: Market[];\n  selectedTokenAccounts?: SelectedTokenAccounts;\n}) {\n  if (!markets || !wallet || !connection || !tokenAccounts) {\n    return;\n  }\n\n  const programIds: PublicKey[] = [];\n  markets\n    .reduce((cumulative, m) => {\n      // @ts-ignore\n      cumulative.push(m._programId);\n      return cumulative;\n    }, [])\n    .forEach((programId) => {\n      if (!programIds.find((p) => p.equals(programId))) {\n        programIds.push(programId);\n      }\n    });\n\n  const getOpenOrdersAccountsForProgramId = async (programId) => {\n    const openOrdersAccounts = await OpenOrders.findForOwner(\n      connection,\n      wallet.publicKey,\n      programId,\n    );\n    return openOrdersAccounts.filter(\n      (openOrders) =>\n        openOrders.baseTokenFree.toNumber() ||\n        openOrders.quoteTokenFree.toNumber(),\n    );\n  };\n\n  const openOrdersAccountsForProgramIds = await Promise.all(\n    programIds.map((programId) => getOpenOrdersAccountsForProgramId(programId)),\n  );\n  const openOrdersAccounts = openOrdersAccountsForProgramIds.reduce(\n    (accounts, current) => accounts.concat(current),\n    [],\n  );\n\n  const settleTransactions = (\n    await Promise.all(\n      openOrdersAccounts.map((openOrdersAccount) => {\n        const market = markets.find((m) =>\n          // @ts-ignore\n          m._decoded?.ownAddress?.equals(openOrdersAccount.market),\n        );\n        if (\n          openOrdersAccount.baseTokenFree.isZero() &&\n          openOrdersAccount.quoteTokenFree.isZero()\n        ) {\n          // nothing to settle for this market.\n          return null;\n        }\n        const baseMint = market?.baseMintAddress;\n        const quoteMint = market?.quoteMintAddress;\n\n        const selectedBaseTokenAccount = getSelectedTokenAccountForMint(\n          tokenAccounts,\n          baseMint,\n          baseMint &&\n          selectedTokenAccounts &&\n          selectedTokenAccounts[baseMint.toBase58()],\n        )?.pubkey;\n        const selectedQuoteTokenAccount = getSelectedTokenAccountForMint(\n          tokenAccounts,\n          quoteMint,\n          quoteMint &&\n          selectedTokenAccounts &&\n          selectedTokenAccounts[quoteMint.toBase58()],\n        )?.pubkey;\n        if (!selectedBaseTokenAccount || !selectedQuoteTokenAccount) {\n          return null;\n        }\n        return (\n          market &&\n          market.makeSettleFundsTransaction(\n            connection,\n            openOrdersAccount,\n            selectedBaseTokenAccount,\n            selectedQuoteTokenAccount,\n          )\n        );\n      }),\n    )\n  ).filter(\n    (\n      x,\n    ): x is {\n      signers: Account[];\n      transaction: Transaction;\n      payer: PublicKey;\n    } => !!x,\n  );\n  if (!settleTransactions || settleTransactions.length === 0) return;\n\n  const transactions = settleTransactions.slice(0, 4).map((t) => t.transaction);\n  const signers: Array<Account> = [];\n  settleTransactions\n    .reduce((cumulative: Array<Account>, t) => cumulative.concat(t.signers), [])\n    .forEach((signer) => {\n      if (!signers.find((s) => s.publicKey.equals(signer.publicKey))) {\n        signers.push(signer);\n      }\n    });\n\n  const transaction = mergeTransactions(transactions);\n\n  return await sendTransaction({\n    transaction,\n    signers,\n    wallet,\n    connection,\n  });\n}\n\nexport async function cancelOrder(params: {\n  market: Market;\n  connection: Connection;\n  wallet: WalletAdapter;\n  order: Order;\n}) {\n  return cancelOrders({ ...params, orders: [params.order] });\n}\n\nexport async function cancelOrders({\n  market,\n  wallet,\n  connection,\n  orders,\n}: {\n  market: Market;\n  wallet: WalletAdapter;\n  connection: Connection;\n  orders: Order[];\n}) {\n  const transaction = market.makeMatchOrdersTransaction(5);\n  orders.forEach((order) => {\n    transaction.add(\n      market.makeCancelOrderInstruction(connection, wallet.publicKey, order),\n    );\n  });\n  transaction.add(market.makeMatchOrdersTransaction(5));\n  return await sendTransaction({\n    transaction,\n    wallet,\n    connection,\n    sendingMessage: 'Sending cancel...',\n  });\n}\n\nexport async function placeOrder({\n  side,\n  price,\n  size,\n  orderType,\n  market,\n  connection,\n  wallet,\n  baseCurrencyAccount,\n  quoteCurrencyAccount,\n  feeDiscountPubkey = undefined,\n}: {\n  side: 'buy' | 'sell';\n  price: number;\n  size: number;\n  orderType: 'ioc' | 'postOnly' | 'limit';\n  market: Market | undefined | null;\n  connection: Connection;\n  wallet: WalletAdapter;\n  baseCurrencyAccount: PublicKey | undefined;\n  quoteCurrencyAccount: PublicKey | undefined;\n  feeDiscountPubkey: PublicKey | undefined;\n}) {\n  let formattedMinOrderSize =\n    market?.minOrderSize?.toFixed(getDecimalCount(market.minOrderSize)) ||\n    market?.minOrderSize;\n  let formattedTickSize =\n    market?.tickSize?.toFixed(getDecimalCount(market.tickSize)) ||\n    market?.tickSize;\n  const isIncrement = (num, step) =>\n    Math.abs((num / step) % 1) < 1e-5 ||\n    Math.abs(((num / step) % 1) - 1) < 1e-5;\n  if (isNaN(price)) {\n    notify({ message: 'Invalid price', type: 'error' });\n    return;\n  }\n  if (isNaN(size)) {\n    notify({ message: 'Invalid size', type: 'error' });\n    return;\n  }\n  if (!wallet || !wallet.publicKey) {\n    notify({ message: 'Connect wallet', type: 'error' });\n    return;\n  }\n  if (!market) {\n    notify({ message: 'Invalid  market', type: 'error' });\n    return;\n  }\n  if (!isIncrement(size, market.minOrderSize)) {\n    notify({\n      message: `Size must be an increment of ${formattedMinOrderSize}`,\n      type: 'error',\n    });\n    return;\n  }\n  if (size < market.minOrderSize) {\n    notify({ message: 'Size too small', type: 'error' });\n    return;\n  }\n  if (!isIncrement(price, market.tickSize)) {\n    notify({\n      message: `Price must be an increment of ${formattedTickSize}`,\n      type: 'error',\n    });\n    return;\n  }\n  if (price < market.tickSize) {\n    notify({ message: 'Price under tick size', type: 'error' });\n    return;\n  }\n  const owner = wallet.publicKey;\n  const transaction = new Transaction();\n  const signers: Account[] = [];\n\n  if (!baseCurrencyAccount) {\n    const {\n      transaction: createAccountTransaction,\n      newAccountPubkey,\n    } = await createTokenAccountTransaction({\n      connection,\n      wallet,\n      mintPublicKey: market.baseMintAddress,\n    });\n    transaction.add(createAccountTransaction);\n    baseCurrencyAccount = newAccountPubkey;\n  }\n  if (!quoteCurrencyAccount) {\n    const {\n      transaction: createAccountTransaction,\n      newAccountPubkey,\n    } = await createTokenAccountTransaction({\n      connection,\n      wallet,\n      mintPublicKey: market.quoteMintAddress,\n    });\n    transaction.add(createAccountTransaction);\n    quoteCurrencyAccount = newAccountPubkey;\n  }\n\n  const payer = side === 'sell' ? baseCurrencyAccount : quoteCurrencyAccount;\n  if (!payer) {\n    notify({\n      message: 'Need an SPL token account for cost currency',\n      type: 'error',\n    });\n    return;\n  }\n  const params = {\n    owner,\n    payer,\n    side,\n    price,\n    size,\n    orderType,\n    feeDiscountPubkey: feeDiscountPubkey || null,\n  };\n  console.log(params);\n\n  const matchOrderstransaction = market.makeMatchOrdersTransaction(5);\n  transaction.add(matchOrderstransaction);\n  const startTime = getUnixTs();\n  let {\n    transaction: placeOrderTx,\n    signers: placeOrderSigners,\n  } = await market.makePlaceOrderTransaction(\n    connection,\n    params,\n    120_000,\n    120_000,\n  );\n  const endTime = getUnixTs();\n  console.log(`Creating order transaction took ${endTime - startTime}`);\n  transaction.add(placeOrderTx);\n  transaction.add(market.makeMatchOrdersTransaction(5));\n  signers.push(...placeOrderSigners);\n\n  return await sendTransaction({\n    transaction,\n    wallet,\n    connection,\n    signers,\n    sendingMessage: 'Sending order...',\n  });\n}\n\nexport async function listMarket({\n  connection,\n  wallet,\n  baseMint,\n  quoteMint,\n  baseLotSize,\n  quoteLotSize,\n  dexProgramId,\n}: {\n  connection: Connection;\n  wallet: WalletAdapter;\n  baseMint: PublicKey;\n  quoteMint: PublicKey;\n  baseLotSize: number;\n  quoteLotSize: number;\n  dexProgramId: PublicKey;\n}) {\n  const market = new Account();\n  const requestQueue = new Account();\n  const eventQueue = new Account();\n  const bids = new Account();\n  const asks = new Account();\n  const baseVault = new Account();\n  const quoteVault = new Account();\n  const feeRateBps = 0;\n  const quoteDustThreshold = new BN(100);\n\n  async function getVaultOwnerAndNonce() {\n    const nonce = new BN(0);\n    while (true) {\n      try {\n        const vaultOwner = await PublicKey.createProgramAddress(\n          [market.publicKey.toBuffer(), nonce.toArrayLike(Buffer, 'le', 8)],\n          dexProgramId,\n        );\n        return [vaultOwner, nonce];\n      } catch (e) {\n        nonce.iaddn(1);\n      }\n    }\n  }\n  const [vaultOwner, vaultSignerNonce] = await getVaultOwnerAndNonce();\n\n  const tx1 = new Transaction();\n  tx1.add(\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: baseVault.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(165),\n      space: 165,\n      programId: TokenInstructions.TOKEN_PROGRAM_ID,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: quoteVault.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(165),\n      space: 165,\n      programId: TokenInstructions.TOKEN_PROGRAM_ID,\n    }),\n    TokenInstructions.initializeAccount({\n      account: baseVault.publicKey,\n      mint: baseMint,\n      owner: vaultOwner,\n    }),\n    TokenInstructions.initializeAccount({\n      account: quoteVault.publicKey,\n      mint: quoteMint,\n      owner: vaultOwner,\n    }),\n  );\n\n  const tx2 = new Transaction();\n  tx2.add(\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: market.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(\n        Market.getLayout(dexProgramId).span,\n      ),\n      space: Market.getLayout(dexProgramId).span,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: requestQueue.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(5120 + 12),\n      space: 5120 + 12,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: eventQueue.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(262144 + 12),\n      space: 262144 + 12,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: bids.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(65536 + 12),\n      space: 65536 + 12,\n      programId: dexProgramId,\n    }),\n    SystemProgram.createAccount({\n      fromPubkey: wallet.publicKey,\n      newAccountPubkey: asks.publicKey,\n      lamports: await connection.getMinimumBalanceForRentExemption(65536 + 12),\n      space: 65536 + 12,\n      programId: dexProgramId,\n    }),\n    DexInstructions.initializeMarket({\n      market: market.publicKey,\n      requestQueue: requestQueue.publicKey,\n      eventQueue: eventQueue.publicKey,\n      bids: bids.publicKey,\n      asks: asks.publicKey,\n      baseVault: baseVault.publicKey,\n      quoteVault: quoteVault.publicKey,\n      baseMint,\n      quoteMint,\n      baseLotSize: new BN(baseLotSize),\n      quoteLotSize: new BN(quoteLotSize),\n      feeRateBps,\n      vaultSignerNonce,\n      quoteDustThreshold,\n      programId: dexProgramId,\n      authority: undefined,\n    }),\n  );\n\n  const signedTransactions = await signTransactions({\n    transactionsAndSigners: [\n      { transaction: tx1, signers: [baseVault, quoteVault] },\n      {\n        transaction: tx2,\n        signers: [market, requestQueue, eventQueue, bids, asks],\n      },\n    ],\n    wallet,\n    connection,\n  });\n  for (let signedTransaction of signedTransactions) {\n    await sendSignedTransaction({\n      signedTransaction,\n      connection,\n    });\n  }\n\n  return market.publicKey;\n}\n\nexport const getUnixTs = () => {\n  return new Date().getTime() / 1000;\n};\n\nconst DEFAULT_TIMEOUT = 15000;\n\nexport async function sendTransaction({\n  transaction,\n  wallet,\n  signers = [],\n  connection,\n  sendingMessage = 'Sending transaction...',\n  sentMessage = 'Transaction sent',\n  successMessage = 'Transaction confirmed',\n  timeout = DEFAULT_TIMEOUT,\n  sendNotification = true,\n}: {\n  transaction: Transaction;\n  wallet: WalletAdapter;\n  signers?: Array<Account>;\n  connection: Connection;\n  sendingMessage?: string;\n  sentMessage?: string;\n  successMessage?: string;\n  timeout?: number;\n  sendNotification?: boolean;\n}) {\n  const signedTransaction = await signTransaction({\n    transaction,\n    wallet,\n    signers,\n    connection,\n  });\n  return await sendSignedTransaction({\n    signedTransaction,\n    connection,\n    sendingMessage,\n    sentMessage,\n    successMessage,\n    timeout,\n    sendNotification,\n  });\n}\n\nexport async function signTransaction({\n  transaction,\n  wallet,\n  signers = [],\n  connection,\n}: {\n  transaction: Transaction;\n  wallet: WalletAdapter;\n  signers?: Array<Account>;\n  connection: Connection;\n}) {\n  transaction.recentBlockhash = (\n    await connection.getRecentBlockhash('max')\n  ).blockhash;\n  transaction.setSigners(wallet.publicKey, ...signers.map((s) => s.publicKey));\n  if (signers.length > 0) {\n    transaction.partialSign(...signers);\n  }\n  return await wallet.signTransaction(transaction);\n}\n\nexport async function signTransactions({\n  transactionsAndSigners,\n  wallet,\n  connection,\n}: {\n  transactionsAndSigners: {\n    transaction: Transaction;\n    signers?: Array<Account>;\n  }[];\n  wallet: WalletAdapter;\n  connection: Connection;\n}) {\n  const blockhash = (await connection.getRecentBlockhash('max')).blockhash;\n  transactionsAndSigners.forEach(({ transaction, signers = [] }) => {\n    transaction.recentBlockhash = blockhash;\n    transaction.setSigners(\n      wallet.publicKey,\n      ...signers.map((s) => s.publicKey),\n    );\n    if (signers?.length > 0) {\n      transaction.partialSign(...signers);\n    }\n  });\n  return await wallet.signAllTransactions(\n    transactionsAndSigners.map(({ transaction }) => transaction),\n  );\n}\n\nexport async function sendSignedTransaction({\n  signedTransaction,\n  connection,\n  sendingMessage = 'Sending transaction...',\n  sentMessage = 'Transaction sent',\n  successMessage = 'Transaction confirmed',\n  timeout = DEFAULT_TIMEOUT,\n  sendNotification = true,\n}: {\n  signedTransaction: Transaction;\n  connection: Connection;\n  sendingMessage?: string;\n  sentMessage?: string;\n  successMessage?: string;\n  timeout?: number;\n  sendNotification?: boolean;\n}): Promise<string> {\n  const rawTransaction = signedTransaction.serialize();\n  const startTime = getUnixTs();\n  if (sendNotification) {\n    notify({ message: sendingMessage });\n  }\n  const txid: TransactionSignature = await connection.sendRawTransaction(\n    rawTransaction,\n    {\n      skipPreflight: true,\n    },\n  );\n  if (sendNotification) {\n    notify({ message: sentMessage, type: 'success', txid });\n  }\n\n  console.log('Started awaiting confirmation for', txid);\n\n  let done = false;\n  (async () => {\n    while (!done && getUnixTs() - startTime < timeout) {\n      connection.sendRawTransaction(rawTransaction, {\n        skipPreflight: true,\n      });\n      await sleep(300);\n    }\n  })();\n  try {\n    await awaitTransactionSignatureConfirmation(txid, timeout, connection);\n  } catch (err) {\n    if (err.timeout) {\n      throw new Error('Timed out awaiting confirmation on transaction');\n    }\n    let simulateResult: SimulatedTransactionResponse | null = null;\n    try {\n      simulateResult = (\n        await simulateTransaction(connection, signedTransaction, 'single')\n      ).value;\n    } catch (e) { }\n    if (simulateResult && simulateResult.err) {\n      if (simulateResult.logs) {\n        for (let i = simulateResult.logs.length - 1; i >= 0; --i) {\n          const line = simulateResult.logs[i];\n          if (line.startsWith('Program log: ')) {\n            throw new Error(\n              'Transaction failed: ' + line.slice('Program log: '.length),\n            );\n          }\n        }\n      }\n      let parsedError;\n      if (\n        typeof simulateResult.err == 'object' &&\n        'InstructionError' in simulateResult.err\n      ) {\n        const parsedErrorInfo = parseInstructionErrorResponse(\n          signedTransaction,\n          simulateResult.err['InstructionError'],\n        );\n        parsedError = parsedErrorInfo.error;\n      } else {\n        parsedError = JSON.stringify(simulateResult.err);\n      }\n      throw new Error(parsedError);\n    }\n    throw new Error('Transaction failed');\n  } finally {\n    done = true;\n  }\n  if (sendNotification) {\n    notify({ message: successMessage, type: 'success', txid });\n  }\n\n  console.log('Latency', txid, getUnixTs() - startTime);\n  return txid;\n}\n\nasync function awaitTransactionSignatureConfirmation(\n  txid: TransactionSignature,\n  timeout: number,\n  connection: Connection,\n) {\n  let done = false;\n  const result = await new Promise((resolve, reject) => {\n    (async () => {\n      setTimeout(() => {\n        if (done) {\n          return;\n        }\n        done = true;\n        console.log('Timed out for txid', txid);\n        reject({ timeout: true });\n      }, timeout);\n      try {\n        connection.onSignature(\n          txid,\n          (result) => {\n            console.log('WS confirmed', txid, result);\n            done = true;\n            if (result.err) {\n              reject(result.err);\n            } else {\n              resolve(result);\n            }\n          },\n          'recent',\n        );\n        console.log('Set up WS connection', txid);\n      } catch (e) {\n        done = true;\n        console.log('WS error in setup', txid, e);\n      }\n      while (!done) {\n        // eslint-disable-next-line no-loop-func\n        (async () => {\n          try {\n            const signatureStatuses = await connection.getSignatureStatuses([\n              txid,\n            ]);\n            const result = signatureStatuses && signatureStatuses.value[0];\n            if (!done) {\n              if (!result) {\n                console.log('REST null result for', txid, result);\n              } else if (result.err) {\n                console.log('REST error for', txid, result);\n                done = true;\n                reject(result.err);\n              } else if (!result.confirmations) {\n                console.log('REST no confirmations for', txid, result);\n              } else {\n                console.log('REST confirmation for', txid, result);\n                done = true;\n                resolve(result);\n              }\n            }\n          } catch (e) {\n            if (!done) {\n              console.log('REST connection error: txid', txid, e);\n            }\n          }\n        })();\n        await sleep(300);\n      }\n    })();\n  });\n  done = true;\n  return result;\n}\n\nfunction mergeTransactions(transactions: (Transaction | undefined)[]) {\n  const transaction = new Transaction();\n  transactions\n    .filter((t): t is Transaction => t !== undefined)\n    .forEach((t) => {\n      transaction.add(t);\n    });\n  return transaction;\n}\n\nfunction jsonRpcResult(resultDescription: any) {\n  const jsonRpcVersion = struct.literal('2.0');\n  return struct.union([\n    struct({\n      jsonrpc: jsonRpcVersion,\n      id: 'string',\n      error: 'any',\n    }),\n    struct({\n      jsonrpc: jsonRpcVersion,\n      id: 'string',\n      error: 'null?',\n      result: resultDescription,\n    }),\n  ]);\n}\n\nfunction jsonRpcResultAndContext(resultDescription: any) {\n  return jsonRpcResult({\n    context: struct({\n      slot: 'number',\n    }),\n    value: resultDescription,\n  });\n}\n\nconst AccountInfoResult = struct({\n  executable: 'boolean',\n  owner: 'string',\n  lamports: 'number',\n  data: 'any',\n  rentEpoch: 'number?',\n});\n\nexport const GetMultipleAccountsAndContextRpcResult = jsonRpcResultAndContext(\n  struct.array([struct.union(['null', AccountInfoResult])]),\n);\n\nexport async function getMultipleSolanaAccounts(\n  connection: Connection,\n  publicKeys: PublicKey[],\n): Promise<\n  RpcResponseAndContext<{ [key: string]: AccountInfo<Buffer> | null }>\n> {\n  const args = [publicKeys.map((k) => k.toBase58()), { commitment: 'recent' }];\n  // @ts-ignore\n  const unsafeRes = await connection._rpcRequest('getMultipleAccounts', args);\n  const res = GetMultipleAccountsAndContextRpcResult(unsafeRes);\n  if (res.error) {\n    throw new Error(\n      'failed to get info about accounts ' +\n      publicKeys.map((k) => k.toBase58()).join(', ') +\n      ': ' +\n      res.error.message,\n    );\n  }\n  assert(typeof res.result !== 'undefined');\n  const accounts: Array<{\n    executable: any;\n    owner: PublicKey;\n    lamports: any;\n    data: Buffer;\n  } | null> = [];\n  for (const account of res.result.value) {\n    let value: {\n      executable: any;\n      owner: PublicKey;\n      lamports: any;\n      data: Buffer;\n    } | null = null;\n    if (res.result.value) {\n      const { executable, owner, lamports, data } = account;\n      assert(data[1] === 'base64');\n      value = {\n        executable,\n        owner: new PublicKey(owner),\n        lamports,\n        data: Buffer.from(data[0], 'base64'),\n      };\n    }\n    accounts.push(value);\n  }\n  return {\n    context: {\n      slot: res.result.context.slot,\n    },\n    value: Object.fromEntries(\n      accounts.map((account, i) => [publicKeys[i].toBase58(), account]),\n    ),\n  };\n}\n\n/** Copy of Connection.simulateTransaction that takes a commitment parameter. */\nasync function simulateTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  commitment: Commitment,\n): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n  // @ts-ignore\n  transaction.recentBlockhash = await connection._recentBlockhash(\n    // @ts-ignore\n    connection._disableBlockhashCaching,\n  );\n\n  const signData = transaction.serializeMessage();\n  // @ts-ignore\n  const wireTransaction = transaction._serialize(signData);\n  const encodedTransaction = wireTransaction.toString('base64');\n  const config: any = { encoding: 'base64', commitment };\n  const args = [encodedTransaction, config];\n\n  // @ts-ignore\n  const res = await connection._rpcRequest('simulateTransaction', args);\n  if (res.error) {\n    throw new Error('failed to simulate transaction: ' + res.error.message);\n  }\n  return res.result;\n}\n","import * as BufferLayout from 'buffer-layout';\n\nimport { AccountInfo, Connection, PublicKey } from '@solana/web3.js';\nimport { useAllMarkets, useCustomMarkets, useTokenAccounts } from './markets';\n\nimport BN from 'bn.js';\nimport { TOKEN_MINTS } from '@project-serum/serum';\nimport { TokenAccount } from './types';\nimport { WRAPPED_SOL_MINT } from '@project-serum/serum/lib/token-instructions';\n// @ts-ignore\nimport { cloneDeep } from 'lodash-es';\nimport { getMultipleSolanaAccounts } from './send';\nimport tuple from 'immutable-tuple';\nimport { useAsyncData } from './fetch-loop';\nimport { useConnection } from './connection';\nimport { useMemo } from 'react';\n\nexport const ACCOUNT_LAYOUT = BufferLayout.struct([\n  BufferLayout.blob(32, 'mint'),\n  BufferLayout.blob(32, 'owner'),\n  BufferLayout.nu64('amount'),\n  BufferLayout.blob(93),\n]);\n\nexport const MINT_LAYOUT = BufferLayout.struct([\n  BufferLayout.blob(36),\n  BufferLayout.blob(8, 'supply'),\n  BufferLayout.u8('decimals'),\n  BufferLayout.u8('initialized'),\n  BufferLayout.blob(36),\n]);\n\nexport function parseTokenAccountData(data: Buffer): {\n  mint: PublicKey;\n  owner: PublicKey;\n  amount: number;\n} {\n  let { mint, owner, amount } = ACCOUNT_LAYOUT.decode(data);\n  return {\n    mint: new PublicKey(mint),\n    owner: new PublicKey(owner),\n    amount,\n  };\n}\n\nexport interface MintInfo {\n  decimals: number;\n  initialized: boolean;\n  supply: BN;\n}\n\nexport function parseTokenMintData(data): MintInfo {\n  let { decimals, initialized, supply } = MINT_LAYOUT.decode(data);\n  return {\n    decimals,\n    initialized: !!initialized,\n    supply: new BN(supply, 10, 'le'),\n  };\n}\n\nexport function getOwnedAccountsFilters(publicKey: PublicKey) {\n  return [\n    {\n      memcmp: {\n        offset: ACCOUNT_LAYOUT.offsetOf('owner'),\n        bytes: publicKey.toBase58(),\n      },\n    },\n    {\n      dataSize: ACCOUNT_LAYOUT.span,\n    },\n  ];\n}\n\nexport const TOKEN_PROGRAM_ID = new PublicKey(\n  'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n);\n\nexport async function getOwnedTokenAccounts(\n  connection: Connection,\n  publicKey: PublicKey,\n): Promise<Array<{ publicKey: PublicKey; accountInfo: AccountInfo<Buffer> }>> {\n  let filters = getOwnedAccountsFilters(publicKey);\n  let resp = await connection.getProgramAccounts(TOKEN_PROGRAM_ID, {\n    filters,\n  });\n  return resp.map(\n    ({ pubkey, account: { data, executable, owner, lamports } }) => ({\n      publicKey: new PublicKey(pubkey),\n      accountInfo: {\n        data,\n        executable,\n        owner: new PublicKey(owner),\n        lamports,\n      },\n    }),\n  );\n}\n\nexport async function getTokenAccountInfo(\n  connection: Connection,\n  ownerAddress: PublicKey,\n) {\n  let [splAccounts, account] = await Promise.all([\n    getOwnedTokenAccounts(connection, ownerAddress),\n    connection.getAccountInfo(ownerAddress),\n  ]);\n  const parsedSplAccounts: TokenAccount[] = splAccounts.map(\n    ({ publicKey, accountInfo }) => {\n      return {\n        pubkey: publicKey,\n        account: accountInfo,\n        effectiveMint: parseTokenAccountData(accountInfo.data).mint,\n      };\n    },\n  );\n  return parsedSplAccounts.concat({\n    pubkey: ownerAddress,\n    account,\n    effectiveMint: WRAPPED_SOL_MINT,\n  });\n}\n\nexport function useMintToTickers(): { [mint: string]: string } {\n  const { customMarkets } = useCustomMarkets();\n  const [markets] = useAllMarkets();\n  return useMemo(() => {\n    const mintsToTickers = Object.fromEntries(\n      TOKEN_MINTS.map((mint) => [mint.address.toBase58(), mint.name]),\n    );\n    for (let market of markets || []) {\n      const customMarketInfo = customMarkets.find(\n        (customMarket) =>\n          customMarket.address === market.market.address.toBase58(),\n      );\n      if (!(market.market.baseMintAddress.toBase58() in mintsToTickers)) {\n        if (customMarketInfo) {\n          mintsToTickers[market.market.baseMintAddress.toBase58()] =\n            customMarketInfo.baseLabel || `${customMarketInfo.name}_BASE`;\n        }\n      }\n      if (!(market.market.quoteMintAddress.toBase58() in mintsToTickers)) {\n        if (customMarketInfo) {\n          mintsToTickers[market.market.quoteMintAddress.toBase58()] =\n            customMarketInfo.quoteLabel || `${customMarketInfo.name}_QUOTE`;\n        }\n      }\n    }\n    return mintsToTickers;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [markets?.length, customMarkets.length]);\n}\n\nconst _VERY_SLOW_REFRESH_INTERVAL = 5000 * 1000;\n\nexport function useMintInfos(): [\n  (\n    | {\n        [mintAddress: string]: {\n          decimals: number;\n          initialized: boolean;\n        } | null;\n      }\n    | null\n    | undefined\n  ),\n  boolean,\n] {\n  const connection = useConnection();\n  const [tokenAccounts] = useTokenAccounts();\n  const [allMarkets] = useAllMarkets();\n\n  const allMints = (tokenAccounts || [])\n    .map((account) => account.effectiveMint)\n    .concat(\n      (allMarkets || []).map((marketInfo) => marketInfo.market.baseMintAddress),\n    )\n    .concat(\n      (allMarkets || []).map(\n        (marketInfo) => marketInfo.market.quoteMintAddress,\n      ),\n    );\n  const uniqueMints = [...new Set(allMints.map((mint) => mint.toBase58()))].map(\n    (stringMint) => new PublicKey(stringMint),\n  );\n\n  const getAllMintInfo = async () => {\n    const mintInfos = await getMultipleSolanaAccounts(connection, uniqueMints);\n    return Object.fromEntries(\n      Object.entries(mintInfos.value).map(([key, accountInfo]) => [\n        key,\n        accountInfo && parseTokenMintData(accountInfo.data),\n      ]),\n    );\n  };\n\n  return useAsyncData(\n    getAllMintInfo,\n    tuple(\n      'getAllMintInfo',\n      connection,\n      (tokenAccounts || []).length,\n      (allMarkets || []).length,\n    ),\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\n  );\n}\n\ninterface Tokens {\n  [key: string]: any;\n  [index: number]: any;\n}\n\nexport interface TokenInfo {\n  symbol: string;\n  name: string;\n\n  mintAddress: string;\n  decimals: number;\n\n  referrer?: string;\n}\n\nexport function getTokenByMintAddress(mintAddress: string): TokenInfo | null {\n  if (mintAddress === NATIVE_SOL.mintAddress) {\n    return cloneDeep(NATIVE_SOL);\n  }\n\n  let token = null;\n\n  for (const symbol of Object.keys(TOKENS)) {\n    const info = cloneDeep(TOKENS[symbol]);\n\n    if (info.mintAddress === mintAddress) {\n      token = info;\n    }\n  }\n\n  return token;\n}\n\nexport const NATIVE_SOL: TokenInfo = {\n  symbol: 'SOL',\n  name: 'Native Solana',\n  mintAddress: '11111111111111111111111111111111',\n  decimals: 9,\n};\n\nexport const TOKENS: Tokens = {\n  WSOL: {\n    symbol: 'WSOL',\n    mintAddress: 'So11111111111111111111111111111111111111112',\n    referrer: 'HTcarLHe7WRxBQCWvhVB8AP56pnEtJUV2jDGvcpY3xo5',\n  },\n  BTC: {\n    symbol: 'BTC',\n    mintAddress: '9n4nbM75f5Ui33ZbPYXn59EwSgE8CGsHtAeTH5YFeJ9E',\n    referrer: 'GZpS8cY8Nt8HuqxzJh6PXTdSxc38vFUjBmi7eEUkkQtG',\n  },\n  soETH: {\n    symbol: 'soETH',\n    mintAddress: '2FPyTwcZLUg1MDrwsyoP4D6s1tM7hAkHYRjkNb5w6Pxk',\n    referrer: 'CXPTcSxxh4AT38gtv3SPbLS7oZVgXzLbMb83o4ziXjjN',\n  },\n  USDT: {\n    symbol: 'USDT',\n    mintAddress: 'Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB',\n    referrer: '8DwwDNagph8SdwMUdcXS5L9YAyutTyDJmK6cTKrmNFk3',\n  },\n  soUSDT: {\n    symbol: 'soUSDT',\n    mintAddress: 'BQcdHdAQW1hczDbBi9hiegXAR7A98Q9jx3X3iBBBDiq4',\n    referrer: 'CA98hYunCLKgBuD6N8MJSgq1GbW9CXdksLf5mw736tS3',\n  },\n  USDC: {\n    symbol: 'USDC',\n    mintAddress: 'EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v',\n    referrer: '92vdtNjEg6Zth3UU1MgPgTVFjSEzTHx66aCdqWdcRkrg',\n  },\n  GEMS: {\n    symbol: 'GEMS',\n    mintAddress: 'GEMSkjHriJp95iSZpRgb5ym3RQeaMFig7cfWvnWTT4An',\n    referrer: 'GY7bawE7XZquENDg3VWG6ZhNSeRsXQqb4stKGXADVUYH',\n  },\n};\n","import { TradeLayout } from './types';\n\nexport default class RaydiumApi {\n  static URL: string = 'https://api.raydium.io/v1/dex/';\n\n  static async get(path: string) {\n    try {\n      const response = await fetch(this.URL + path);\n      if (response.ok) {\n        const responseJson = await response.json();\n        return responseJson.success ? responseJson.data.reverse() : null;\n      }\n    } catch (err) {\n      console.log(`Error fetching from Raydium API ${path}: ${err}`);\n    }\n    return null;\n  }\n\n  static async getRecentTrades(\n    marketAddress: string,\n  ): Promise<TradeLayout[] | null> {\n    return RaydiumApi.get(`trade/address?market=${marketAddress}`);\n  }\n}\n","import {\n  Balances,\n  CustomMarketInfo,\n  DeprecatedOpenOrdersBalances,\n  FullMarketInfo,\n  MarketContextValues,\n  MarketInfo,\n  OrderWithMarketAndMarketName,\n  SelectedTokenAccounts,\n  TokenAccount,\n} from './types';\nimport {\n  // MARKETS,\n  Market,\n  OpenOrders,\n  Orderbook,\n  TOKEN_MINTS,\n  TokenInstructions,\n} from '@project-serum/serum';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { getCache, setCache } from './fetch-loop';\nimport {\n  divideBnToNumber,\n  floorToDecimal,\n  getTokenMultiplierFromDecimals,\n  useLocalStorageState,\n} from './utils';\nimport {\n  getTokenAccountInfo,\n  parseTokenAccountData,\n  TOKENS,\n  useMintInfos,\n} from './tokens';\nimport { refreshCache, useAsyncData } from './fetch-loop';\nimport { useAccountData, useAccountInfo, useConnection } from './connection';\n\nimport BN from 'bn.js';\nimport RaydiumApi from './raydiumConnector';\nimport { Order } from '@project-serum/serum/lib/market';\nimport { PublicKey, Connection } from '@solana/web3.js';\nimport { WRAPPED_SOL_MINT } from '@project-serum/serum/lib/token-instructions';\nimport { notify } from './notifications';\nimport { sleep } from './utils';\nimport tuple from 'immutable-tuple';\nimport { useWallet } from './wallet';\n\n// Used in debugging, should be false in production\nconst _IGNORE_DEPRECATED = false;\n\nconst _MARKETS = [\n  {\n    name: 'GEMS/SOL',\n    deprecated: false,\n    address: new PublicKey('8axrSWYyNCyfuSJsbHQ8dXhT9Lb3B3qxaV3eYxxm8cUV'),\n    programId: new PublicKey('9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin'),\n  },\n];\n\n// MARKETS.forEach(item => {\n//   if (item.address.toBase58() === '5GAPymgnnWieGcRrcghZdA3aanefqa4cZx1ZSE8UTyMV') return\n//   if (_MARKETS.find(oldMarket => oldMarket.address.toBase58() === item.address.toBase58())) return\n\n//   if (item.address.toBase58() === '7MpMwArporUHEGW7quUpkPZp5L5cHPs9eKUfKCdaPHq2') {\n//     _MARKETS.push( {\n//       address: item.address,\n//       name: 'xCOPE/USDC',\n//       programId: item.programId,\n//       deprecated: item.deprecated,\n//     })\n//     return\n//   }\n\n//   _MARKETS.push(item)\n// })\n\nexport const USE_MARKETS: MarketInfo[] = _IGNORE_DEPRECATED\n  ? _MARKETS.map((m) => ({ ...m, deprecated: false }))\n  : _MARKETS;\n\nexport function useMarketsList() {\n  return USE_MARKETS.filter(({ deprecated }) => !deprecated);\n}\n\nexport function useAllMarkets() {\n  const connection = useConnection();\n  const { customMarkets } = useCustomMarkets();\n\n  const getAllMarkets = async () => {\n    const markets: Array<{\n      market: Market;\n      marketName: string;\n      programId: PublicKey;\n    } | null> = await Promise.all(\n      getMarketInfos(customMarkets).map(async (marketInfo) => {\n        try {\n          const market = await Market.load(\n            connection,\n            marketInfo.address,\n            {},\n            marketInfo.programId,\n          );\n          return {\n            market,\n            marketName: marketInfo.name,\n            programId: marketInfo.programId,\n          };\n        } catch (e) {\n          notify({\n            message: 'Error loading all market',\n            description: e.message,\n            type: 'error',\n          });\n          return null;\n        }\n      }),\n    );\n    return markets.filter(\n      (m): m is { market: Market; marketName: string; programId: PublicKey } =>\n        !!m,\n    );\n  };\n  return useAsyncData(\n    getAllMarkets,\n    tuple('getAllMarkets', customMarkets.length, connection),\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useUnmigratedOpenOrdersAccounts() {\n  const connection = useConnection();\n  const { wallet } = useWallet();\n\n  async function getUnmigratedOpenOrdersAccounts(): Promise<OpenOrders[]> {\n    if (!wallet || !connection || !wallet.publicKey) {\n      return [];\n    }\n    console.log('refreshing useUnmigratedOpenOrdersAccounts');\n    let deprecatedOpenOrdersAccounts: OpenOrders[] = [];\n    const deprecatedProgramIds = Array.from(\n      new Set(\n        USE_MARKETS.filter(({ deprecated }) => deprecated).map(\n          ({ programId }) => programId.toBase58(),\n        ),\n      ),\n    ).map((publicKeyStr) => new PublicKey(publicKeyStr));\n    let programId: PublicKey;\n    for (programId of deprecatedProgramIds) {\n      try {\n        const openOrdersAccounts = await OpenOrders.findForOwner(\n          connection,\n          wallet.publicKey,\n          programId,\n        );\n        deprecatedOpenOrdersAccounts = deprecatedOpenOrdersAccounts.concat(\n          openOrdersAccounts\n            .filter(\n              (openOrders) =>\n                openOrders.baseTokenTotal.toNumber() ||\n                openOrders.quoteTokenTotal.toNumber(),\n            )\n            .filter((openOrders) =>\n              USE_MARKETS.some(\n                (market) =>\n                  market.deprecated && market.address.equals(openOrders.market),\n              ),\n            ),\n        );\n      } catch (e) {\n        console.log(\n          'Error loading deprecated markets',\n          programId?.toBase58(),\n          e.message,\n        );\n      }\n    }\n    // Maybe sort\n    return deprecatedOpenOrdersAccounts;\n  }\n\n  const cacheKey = tuple(\n    'getUnmigratedOpenOrdersAccounts',\n    connection,\n    wallet?.publicKey?.toBase58(),\n  );\n  const [accounts] = useAsyncData(getUnmigratedOpenOrdersAccounts, cacheKey, {\n    refreshInterval: _VERY_SLOW_REFRESH_INTERVAL,\n  });\n\n  return {\n    accounts,\n    refresh: (clearCache: boolean) => refreshCache(cacheKey, clearCache),\n  };\n}\n\nconst MarketContext: React.Context<null | MarketContextValues> =\n  React.createContext<null | MarketContextValues>(null);\n\nconst _VERY_SLOW_REFRESH_INTERVAL = 5000 * 1000;\n\n// For things that don't really change\nconst _SLOW_REFRESH_INTERVAL = 5 * 1000;\nconst _SLOW_REFRESH_INTERVAL_NEW = 60 * 1000;\n\n// For things that change frequently\nconst _FAST_REFRESH_INTERVAL = 1000;\n\nexport const DEFAULT_MARKET = USE_MARKETS.find(\n  ({ name, deprecated }) => name === 'GEMS/SOL' && !deprecated,\n);\n\nexport function getMarketDetails(\n  market: Market | undefined | null,\n  customMarkets: CustomMarketInfo[],\n): FullMarketInfo {\n  if (!market) {\n    return {};\n  }\n  const marketInfos = getMarketInfos(customMarkets);\n  const marketInfo = marketInfos.find((otherMarket) =>\n    otherMarket.address.equals(market.address),\n  );\n\n  // add new token here\n  // TOKEN_MINTS.push({\n  //   address: new PublicKey('4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R'),\n  //   name: 'RAY',\n  // });\n  for (let indexItem = 0; indexItem < TOKEN_MINTS.length; indexItem += 1) {\n    if (\n      TOKEN_MINTS[indexItem].address.toString() ===\n      '3K6rftdAaQYMPunrtNRHgnK2UAtjm2JwyT2oCiTDouYE'\n    ) {\n      TOKEN_MINTS[indexItem].name = 'xCOPE';\n    }\n  }\n\n  Object.values(TOKENS).forEach((itemToken) => {\n    if (\n      !TOKEN_MINTS.find(\n        (item) => item.address.toString === itemToken.mintAddress,\n      )\n    ) {\n      TOKEN_MINTS.push({\n        address: new PublicKey(itemToken.mintAddress),\n        name: itemToken.symbol,\n      });\n    }\n  });\n\n  const baseCurrency =\n    (market?.baseMintAddress &&\n      TOKEN_MINTS.find((token) => token.address.equals(market.baseMintAddress))\n        ?.name) ||\n    (marketInfo?.baseLabel && `${marketInfo?.baseLabel}*`) ||\n    'UNKNOWN';\n  const quoteCurrency =\n    (market?.quoteMintAddress &&\n      TOKEN_MINTS.find((token) => token.address.equals(market.quoteMintAddress))\n        ?.name) ||\n    (marketInfo?.quoteLabel && `${marketInfo?.quoteLabel}*`) ||\n    'UNKNOWN';\n  return {\n    ...marketInfo,\n    marketName: marketInfo?.name,\n    baseCurrency,\n    quoteCurrency,\n    marketInfo,\n  };\n}\n\nexport function useCustomMarkets() {\n  const [customMarkets, setCustomMarkets] = useLocalStorageState<\n    CustomMarketInfo[]\n  >('customMarkets', []);\n  return { customMarkets, setCustomMarkets };\n}\n\nexport function MarketProvider({ marketAddress, setMarketAddress, children }) {\n  const { customMarkets, setCustomMarkets } = useCustomMarkets();\n\n  const address = marketAddress && new PublicKey(marketAddress);\n  const connection = useConnection();\n  const marketInfos = getMarketInfos(customMarkets);\n  const marketInfo =\n    address && marketInfos.find((market) => market.address.equals(address));\n\n  const [market, setMarket] = useState<Market | null>();\n\n  const [marketName, setMarketName] = useState('GEMS/SOL');\n\n  const [localToken, setLocalToken] = useState(false);\n  const [localMarket, setLocalMarket] = useState(false);\n\n  useEffect(() => {\n    const fetchMarket = async () => {\n      const data = await fetch('https://api.raydium.io/v1/dex/market');\n      const json = await data.json();\n      return json;\n    };\n\n    fetchMarket().then((json) => {\n      window.localStorage.setItem('apiMarket', JSON.stringify(json));\n      const marketData: { [programId: string]: { [market: string]: string } } =\n        (json ?? {}).data ?? {};\n      for (const [programId, marketDict] of Object.entries(marketData)) {\n        for (const [itemMarket, marketName] of Object.entries(marketDict)) {\n          if (\n            !_MARKETS.find((item) => item.address.toString() === itemMarket)\n          ) {\n            _MARKETS.push({\n              name: marketName,\n              deprecated: false,\n              address: new PublicKey(itemMarket),\n              programId: new PublicKey(programId),\n            });\n          }\n        }\n      }\n      console.log('load market over');\n      setLocalMarket(true);\n    });\n  }, []);\n\n  useEffect(() => {\n    const localMarket = window.localStorage.getItem('apiMarket');\n    try {\n      if (localMarket === null) {\n        console.log('no local market');\n        return;\n      }\n      const marketData: { [programId: string]: { [market: string]: string } } =\n        (JSON.parse(localMarket) ?? {}).data ?? {};\n      for (const [programId, marketDict] of Object.entries(marketData)) {\n        for (const [itemMarket, marketName] of Object.entries(marketDict)) {\n          if (\n            !_MARKETS.find((item) => item.address.toString() === itemMarket)\n          ) {\n            _MARKETS.push({\n              name: marketName,\n              deprecated: false,\n              address: new PublicKey(itemMarket),\n              programId: new PublicKey(programId),\n            });\n          }\n        }\n      }\n      console.log('local market over');\n      setLocalMarket(true);\n    } catch (e) {\n      console.error('local market error', e);\n    }\n  }, []);\n\n  useEffect(() => {\n    const fetchToken = async () => {\n      const data = await fetch('https://api.raydium.io/v1/dex/token');\n      const json = await data.json();\n      return json;\n    };\n\n    fetchToken().then((json) => {\n      window.localStorage.setItem('apiToken', JSON.stringify(json));\n      const tokenData: { [programId: string]: { [market: string]: string } } =\n        (json ?? {}).data ?? {};\n      for (const [mint, symbol] of Object.entries(tokenData)) {\n        if (\n          TOKENS[mint] === undefined ||\n          !Object.values(TOKENS).find((item) => item.mintAddress === mint)\n        ) {\n          TOKENS[mint] = {\n            symbol,\n            mintAddress: mint,\n          };\n        }\n      }\n      setLocalToken(true);\n      console.log('load token over');\n    });\n  }, []);\n\n  useEffect(() => {\n    const localToken = window.localStorage.getItem('apiToken');\n    try {\n      if (localToken === null) {\n        console.log('no local token');\n        return;\n      }\n      const json = JSON.parse(localToken);\n      const tokenData: { [programId: string]: { [market: string]: string } } =\n        (json ?? {}).data ?? {};\n      for (const [mint, symbol] of Object.entries(tokenData)) {\n        if (\n          TOKENS[mint] === undefined ||\n          !Object.values(TOKENS).find((item) => item.mintAddress === mint)\n        ) {\n          TOKENS[mint] = {\n            symbol,\n            mintAddress: mint,\n          };\n        }\n      }\n      setLocalToken(true);\n      console.log('local token over');\n    } catch (e) {\n      console.error('local token error', e);\n    }\n  }, []);\n\n  // Replace existing market with a non-deprecated one on first load\n  useEffect(() => {\n    if (marketInfo) {\n      if (marketInfo.deprecated) {\n        console.log('Switching markets from deprecated', marketInfo);\n        if (DEFAULT_MARKET) {\n          // setMarketAddress(DEFAULT_MARKET.address.toBase58());\n          setMarketAddress('2xiv8A5xrJ7RnGdxXB42uFEkYHJjszEhaJyKKt4WaLep');\n        }\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (\n      market &&\n      marketInfo &&\n      // @ts-ignore\n      market._decoded.ownAddress?.equals(marketInfo?.address)\n    ) {\n      return;\n    }\n    if (!localMarket || !localToken) return;\n    setMarket(null);\n    if (!marketInfo || !marketInfo.address) {\n      notify({\n        message: 'Error loading market',\n        description: 'Please select a market from the dropdown',\n        type: 'error',\n      });\n      return;\n    } else {\n      setMarketName(marketInfo.name);\n    }\n    Market.load(connection, marketInfo.address, {}, marketInfo.programId)\n      .then(setMarket)\n      .catch((e) =>\n        notify({\n          message: 'Error loading market',\n          description: e.message,\n          type: 'error',\n        }),\n      );\n    // eslint-disable-next-line\n  }, [connection, marketInfo, USE_MARKETS, localMarket, localToken]);\n\n  return (\n    <MarketContext.Provider\n      value={{\n        market,\n        ...getMarketDetails(market, customMarkets),\n        setMarketAddress,\n        customMarkets,\n        setCustomMarkets,\n        marketName,\n      }}\n    >\n      {children}\n    </MarketContext.Provider>\n  );\n}\n\nexport function getTradePageUrl(marketAddress?: string) {\n  if (!marketAddress) {\n    const saved = localStorage.getItem('marketAddress');\n    if (saved) {\n      marketAddress = JSON.parse(saved);\n    }\n    marketAddress =\n      marketAddress ||\n      DEFAULT_MARKET?.address.toBase58() ||\n      '2xiv8A5xrJ7RnGdxXB42uFEkYHJjszEhaJyKKt4WaLep';\n  }\n  return `/market/${marketAddress}`;\n}\n\nexport function useSelectedTokenAccounts(): [\n  SelectedTokenAccounts,\n  (newSelectedTokenAccounts: SelectedTokenAccounts) => void,\n] {\n  const [selectedTokenAccounts, setSelectedTokenAccounts] =\n    useLocalStorageState<SelectedTokenAccounts>('selectedTokenAccounts', {});\n  return [selectedTokenAccounts, setSelectedTokenAccounts];\n}\n\nexport function useMarket() {\n  const context = useContext(MarketContext);\n  if (!context) {\n    throw new Error('Missing market context');\n  }\n  return context;\n}\n\nexport function useMarkPrice() {\n  const [markPrice, setMarkPrice] = useState<null | number>(null);\n\n  const [orderbook] = useOrderbook();\n  const trades = useTrades();\n\n  useEffect(() => {\n    let bb = orderbook?.bids?.length > 0 && Number(orderbook.bids[0][0]);\n    let ba = orderbook?.asks?.length > 0 && Number(orderbook.asks[0][0]);\n    let last = trades && trades.length > 0 && trades[0].price;\n\n    let markPrice =\n      bb && ba\n        ? last\n          ? [bb, ba, last].sort((a, b) => a - b)[1]\n          : (bb + ba) / 2\n        : null;\n\n    setMarkPrice(markPrice);\n  }, [orderbook, trades]);\n\n  return markPrice;\n}\n\nexport function _useUnfilteredTrades(limit = 10000) {\n  const { market } = useMarket();\n  const connection = useConnection();\n  async function getUnfilteredTrades(): Promise<any[] | null> {\n    if (!market || !connection) {\n      return null;\n    }\n    return await market.loadFills(connection, limit);\n  }\n  const [trades] = useAsyncData(\n    getUnfilteredTrades,\n    tuple('getUnfilteredTrades', market, connection),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n  return trades;\n  // NOTE: For now, websocket is too expensive since the event queue is large\n  // and updates very frequently\n\n  // let data = useAccountData(market && market._decoded.eventQueue);\n  // if (!data) {\n  //   return null;\n  // }\n  // const events = decodeEventQueue(data, limit);\n  // return events\n  //   .filter((event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0))\n  //   .map(market.parseFillEvent.bind(market));\n}\n\nexport function useRaydiumTrades() {\n  const { market } = useMarket();\n  const marketAddress = market?.address.toBase58();\n\n  async function getRaydiumTrades() {\n    if (!marketAddress) {\n      return null;\n    }\n    return await RaydiumApi.getRecentTrades(marketAddress);\n  }\n\n  return useAsyncData(\n    getRaydiumTrades,\n    tuple('getRaydiumTrades', marketAddress),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL_NEW },\n    false,\n  );\n}\n\nexport function useOrderbookAccounts() {\n  const { market } = useMarket();\n  // @ts-ignore\n  let bidData = useAccountData(market && market._decoded.bids);\n  // @ts-ignore\n  let askData = useAccountData(market && market._decoded.asks);\n  return {\n    bidOrderbook: market && bidData ? Orderbook.decode(market, bidData) : null,\n    askOrderbook: market && askData ? Orderbook.decode(market, askData) : null,\n  };\n}\n\nexport function useOrderbook(\n  depth = 20,\n): [{ bids: number[][]; asks: number[][] }, boolean] {\n  const { bidOrderbook, askOrderbook } = useOrderbookAccounts();\n  const { market } = useMarket();\n  const bids =\n    !bidOrderbook || !market\n      ? []\n      : bidOrderbook.getL2(depth).map(([price, size]) => [price, size]);\n  const asks =\n    !askOrderbook || !market\n      ? []\n      : askOrderbook.getL2(depth).map(([price, size]) => [price, size]);\n  return [{ bids, asks }, !!bids || !!asks];\n}\n\n// Want the balances table to be fast-updating, dont want open orders to flicker\n// TODO: Update to use websocket\nexport function useOpenOrdersAccounts(fast = false) {\n  const { market } = useMarket();\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  async function getOpenOrdersAccounts() {\n    if (!connected || !wallet) {\n      return null;\n    }\n    if (!market) {\n      return null;\n    }\n    return await market.findOpenOrdersAccountsForOwner(\n      connection,\n      wallet.publicKey,\n    );\n  }\n  return useAsyncData<OpenOrders[] | null>(\n    getOpenOrdersAccounts,\n    tuple('getOpenOrdersAccounts', wallet, market, connected),\n    { refreshInterval: fast ? _FAST_REFRESH_INTERVAL : _SLOW_REFRESH_INTERVAL },\n  );\n}\n\n// todo: refresh cache after some time?\nexport async function getCachedMarket(\n  connection: Connection,\n  address: PublicKey,\n  programId: PublicKey,\n) {\n  let market;\n  const cacheKey = tuple(\n    'getCachedMarket',\n    'market',\n    address.toString(),\n    connection,\n  );\n  if (!getCache(cacheKey)) {\n    market = await Market.load(connection, address, {}, programId);\n    setCache(cacheKey, market);\n  } else {\n    market = getCache(cacheKey);\n  }\n  return market;\n}\n\nexport async function getCachedOpenOrderAccounts(\n  connection: Connection,\n  market: Market,\n  owner: PublicKey,\n) {\n  let accounts;\n  const cacheKey = tuple(\n    'getCachedOpenOrderAccounts',\n    market.address.toString(),\n    owner.toString(),\n    connection,\n  );\n  if (!getCache(cacheKey)) {\n    accounts = await market.findOpenOrdersAccountsForOwner(connection, owner);\n    setCache(cacheKey, accounts);\n  } else {\n    accounts = getCache(cacheKey);\n  }\n  return accounts;\n}\n\nexport function useSelectedOpenOrdersAccount(fast = false) {\n  const [accounts] = useOpenOrdersAccounts(fast);\n  if (!accounts) {\n    return null;\n  }\n  return accounts[0];\n}\n\nexport function useTokenAccounts(): [\n  TokenAccount[] | null | undefined,\n  boolean,\n] {\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  async function getTokenAccounts() {\n    if (!connected || !wallet) {\n      return null;\n    }\n    return await getTokenAccountInfo(connection, wallet.publicKey);\n  }\n  return useAsyncData(\n    getTokenAccounts,\n    tuple('getTokenAccounts', wallet, connected),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function getSelectedTokenAccountForMint(\n  accounts: TokenAccount[] | undefined | null,\n  mint: PublicKey | undefined,\n  selectedPubKey?: string | PublicKey | null,\n) {\n  if (!accounts || !mint) {\n    return null;\n  }\n  const filtered = accounts.filter(\n    ({ effectiveMint, pubkey }) =>\n      mint.equals(effectiveMint) &&\n      (!selectedPubKey ||\n        (typeof selectedPubKey === 'string'\n          ? selectedPubKey\n          : selectedPubKey.toBase58()) === pubkey.toBase58()),\n  );\n  return filtered && filtered[0];\n}\n\nexport function useSelectedQuoteCurrencyAccount() {\n  const [accounts] = useTokenAccounts();\n  const { market } = useMarket();\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\n  const mintAddress = market?.quoteMintAddress;\n  return getSelectedTokenAccountForMint(\n    accounts,\n    mintAddress,\n    mintAddress && selectedTokenAccounts[mintAddress.toBase58()],\n  );\n}\n\nexport function useSelectedBaseCurrencyAccount() {\n  const [accounts] = useTokenAccounts();\n  const { market } = useMarket();\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\n  const mintAddress = market?.baseMintAddress;\n  return getSelectedTokenAccountForMint(\n    accounts,\n    mintAddress,\n    mintAddress && selectedTokenAccounts[mintAddress.toBase58()],\n  );\n}\n\n// TODO: Update to use websocket\nexport function useSelectedQuoteCurrencyBalances() {\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const { market } = useMarket();\n  const [accountInfo, loaded] = useAccountInfo(quoteCurrencyAccount?.pubkey);\n  if (!market || !quoteCurrencyAccount || !loaded || !accountInfo) {\n    return null;\n  }\n  if (market.quoteMintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT)) {\n    return accountInfo?.lamports / 1e9 ?? 0;\n  }\n  return market.quoteSplSizeToNumber(\n    new BN(accountInfo.data.slice(64, 72), 10, 'le'),\n  );\n}\n\n// TODO: Update to use websocket\nexport function useSelectedBaseCurrencyBalances() {\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const { market } = useMarket();\n  const [accountInfo, loaded] = useAccountInfo(baseCurrencyAccount?.pubkey);\n  if (!market || !baseCurrencyAccount || !loaded || !accountInfo) {\n    return null;\n  }\n  if (market.baseMintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT)) {\n    return accountInfo?.lamports / 1e9 ?? 0;\n  }\n  return market.baseSplSizeToNumber(\n    new BN(accountInfo.data.slice(64, 72), 10, 'le'),\n  );\n}\n\nexport function useOpenOrders() {\n  const { market, marketName } = useMarket();\n  const openOrdersAccount = useSelectedOpenOrdersAccount();\n  const { bidOrderbook, askOrderbook } = useOrderbookAccounts();\n  if (!market || !openOrdersAccount || !bidOrderbook || !askOrderbook) {\n    return null;\n  }\n  return market\n    .filterForOpenOrders(bidOrderbook, askOrderbook, [openOrdersAccount])\n    .map((order) => ({ ...order, marketName, market }));\n}\n\nexport function useTrades(limit = 100) {\n  const trades = _useUnfilteredTrades(limit);\n  if (!trades) {\n    return null;\n  }\n  // Until partial fills are each given their own fill, use maker fills\n  return trades\n    .filter(({ eventFlags }) => eventFlags.maker)\n    .map((trade) => ({\n      ...trade,\n      side: trade.side === 'buy' ? 'sell' : 'buy',\n    }));\n}\n\nexport function useLocallyStoredFeeDiscountKey(): {\n  storedFeeDiscountKey: PublicKey | undefined;\n  setStoredFeeDiscountKey: (key: string) => void;\n} {\n  const [storedFeeDiscountKey, setStoredFeeDiscountKey] =\n    useLocalStorageState<string>(`feeDiscountKey`, undefined);\n  return {\n    storedFeeDiscountKey: storedFeeDiscountKey\n      ? new PublicKey(storedFeeDiscountKey)\n      : undefined,\n    setStoredFeeDiscountKey,\n  };\n}\n\nexport function useFeeDiscountKeys(): [\n  (\n    | {\n        pubkey: PublicKey;\n        feeTier: number;\n        balance: number;\n        mint: PublicKey;\n      }[]\n    | null\n    | undefined\n  ),\n  boolean,\n] {\n  const { market } = useMarket();\n  const { connected, wallet } = useWallet();\n  const connection = useConnection();\n  const { setStoredFeeDiscountKey } = useLocallyStoredFeeDiscountKey();\n  let getFeeDiscountKeys = async () => {\n    if (!connected || !wallet) {\n      return null;\n    }\n    if (!market) {\n      return null;\n    }\n    const feeDiscountKey = await market.findFeeDiscountKeys(\n      connection,\n      wallet.publicKey,\n    );\n    if (feeDiscountKey) {\n      setStoredFeeDiscountKey(feeDiscountKey[0].pubkey.toBase58());\n    }\n    return feeDiscountKey;\n  };\n  return useAsyncData(\n    getFeeDiscountKeys,\n    tuple('getFeeDiscountKeys', wallet, market, connected),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useFills(limit = 100) {\n  const { marketName } = useMarket();\n  const fills = _useUnfilteredTrades(limit);\n  const [openOrdersAccounts] = useOpenOrdersAccounts();\n  if (!openOrdersAccounts || openOrdersAccounts.length === 0) {\n    return null;\n  }\n  if (!fills) {\n    return null;\n  }\n  return fills\n    .filter((fill) =>\n      openOrdersAccounts.some((openOrdersAccount) =>\n        fill.openOrders.equals(openOrdersAccount.publicKey),\n      ),\n    )\n    .map((fill) => ({ ...fill, marketName }));\n}\n\nexport function useAllOpenOrdersAccounts() {\n  const { wallet, connected } = useWallet();\n  const connection = useConnection();\n  const marketInfos = useMarketInfos();\n  const programIds = [\n    ...new Set(marketInfos.map((info) => info.programId.toBase58())),\n  ].map((stringProgramId) => new PublicKey(stringProgramId));\n\n  const getAllOpenOrdersAccounts = async () => {\n    if (!connected || !wallet) {\n      return [];\n    }\n    return (\n      await Promise.all(\n        programIds.map((programId) =>\n          OpenOrders.findForOwner(connection, wallet.publicKey, programId),\n        ),\n      )\n    ).flat();\n  };\n  return useAsyncData(\n    getAllOpenOrdersAccounts,\n    tuple(\n      'getAllOpenOrdersAccounts',\n      connection,\n      connected,\n      wallet?.publicKey?.toBase58(),\n      marketInfos.length,\n      (programIds || []).length,\n    ),\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\n  );\n}\n\nexport function useAllOpenOrdersBalances() {\n  const [openOrdersAccounts, loadedOpenOrdersAccounts] =\n    useAllOpenOrdersAccounts();\n  const [mintInfos, mintInfosConnected] = useMintInfos();\n  const [allMarkets] = useAllMarkets();\n  if (!loadedOpenOrdersAccounts || !mintInfosConnected) {\n    return {};\n  }\n\n  const marketsByAddress = Object.fromEntries(\n    (allMarkets || []).map((m) => [m.market.address.toBase58(), m]),\n  );\n  const openOrdersBalances: {\n    [mint: string]: { market: PublicKey; free: number; total: number }[];\n  } = {};\n  for (let account of openOrdersAccounts || []) {\n    const marketInfo = marketsByAddress[account.market.toBase58()];\n    const baseMint = marketInfo?.market.baseMintAddress.toBase58();\n    const quoteMint = marketInfo?.market.quoteMintAddress.toBase58();\n    if (!(baseMint in openOrdersBalances)) {\n      openOrdersBalances[baseMint] = [];\n    }\n    if (!(quoteMint in openOrdersBalances)) {\n      openOrdersBalances[quoteMint] = [];\n    }\n\n    const baseMintInfo = mintInfos && mintInfos[baseMint];\n    const baseFree = divideBnToNumber(\n      new BN(account.baseTokenFree),\n      getTokenMultiplierFromDecimals(baseMintInfo?.decimals || 0),\n    );\n    const baseTotal = divideBnToNumber(\n      new BN(account.baseTokenTotal),\n      getTokenMultiplierFromDecimals(baseMintInfo?.decimals || 0),\n    );\n    const quoteMintInfo = mintInfos && mintInfos[quoteMint];\n    const quoteFree = divideBnToNumber(\n      new BN(account.quoteTokenFree),\n      getTokenMultiplierFromDecimals(quoteMintInfo?.decimals || 0),\n    );\n    const quoteTotal = divideBnToNumber(\n      new BN(account.quoteTokenTotal),\n      getTokenMultiplierFromDecimals(quoteMintInfo?.decimals || 0),\n    );\n\n    openOrdersBalances[baseMint].push({\n      market: account.market,\n      free: baseFree,\n      total: baseTotal,\n    });\n    openOrdersBalances[quoteMint].push({\n      market: account.market,\n      free: quoteFree,\n      total: quoteTotal,\n    });\n  }\n  return openOrdersBalances;\n}\n\nexport const useAllOpenOrders = (): {\n  openOrders: { orders: Order[]; marketAddress: string }[] | null | undefined;\n  loaded: boolean;\n  refreshOpenOrders: () => void;\n} => {\n  const connection = useConnection();\n  const { connected, wallet } = useWallet();\n  const [loaded, setLoaded] = useState(false);\n  const [refresh, setRefresh] = useState(0);\n  const [openOrders, setOpenOrders] = useState<\n    { orders: Order[]; marketAddress: string }[] | null | undefined\n  >(null);\n  const [lastRefresh, setLastRefresh] = useState(0);\n\n  const refreshOpenOrders = () => {\n    if (new Date().getTime() - lastRefresh > 10 * 1000) {\n      setRefresh((prev) => prev + 1);\n    } else {\n      console.log('not refreshing');\n    }\n  };\n\n  useEffect(() => {\n    if (connected && wallet) {\n      const getAllOpenOrders = async () => {\n        setLoaded(false);\n        const _openOrders: { orders: Order[]; marketAddress: string }[] = [];\n        const getOpenOrdersForMarket = async (marketInfo: MarketInfo) => {\n          await sleep(1000 * Math.random()); // Try not to hit rate limit\n          try {\n            const market = await Market.load(\n              connection,\n              marketInfo.address,\n              undefined,\n              marketInfo.programId,\n            );\n            const orders = await market.loadOrdersForOwner(\n              connection,\n              wallet?.publicKey,\n              30000,\n            );\n            _openOrders.push({\n              orders: orders,\n              marketAddress: marketInfo.address.toBase58(),\n            });\n          } catch (e) {\n            console.warn(`Error loading open order ${marketInfo.name} - ${e}`);\n          }\n        };\n        await Promise.all(USE_MARKETS.map((m) => getOpenOrdersForMarket(m)));\n        setOpenOrders(_openOrders);\n        setLastRefresh(new Date().getTime());\n        setLoaded(true);\n      };\n      getAllOpenOrders();\n    }\n  }, [connection, connected, wallet, refresh]);\n  return {\n    openOrders: openOrders,\n    loaded: loaded,\n    refreshOpenOrders: refreshOpenOrders,\n  };\n};\n\nexport function useBalances(): Balances[] {\n  const baseCurrencyBalances = useSelectedBaseCurrencyBalances();\n  const quoteCurrencyBalances = useSelectedQuoteCurrencyBalances();\n  const openOrders = useSelectedOpenOrdersAccount(true);\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const baseExists =\n    openOrders && openOrders.baseTokenTotal && openOrders.baseTokenFree;\n  const quoteExists =\n    openOrders && openOrders.quoteTokenTotal && openOrders.quoteTokenFree;\n  if (\n    baseCurrency === 'UNKNOWN' ||\n    quoteCurrency === 'UNKNOWN' ||\n    !baseCurrency ||\n    !quoteCurrency\n  ) {\n    return [];\n  }\n  return [\n    {\n      market,\n      key: `${baseCurrency}${quoteCurrency}${baseCurrency}`,\n      coin: baseCurrency,\n      wallet: baseCurrencyBalances,\n      orders:\n        baseExists && market && openOrders\n          ? market.baseSplSizeToNumber(\n              openOrders.baseTokenTotal.sub(openOrders.baseTokenFree),\n            )\n          : null,\n      openOrders,\n      unsettled:\n        baseExists && market && openOrders\n          ? market.baseSplSizeToNumber(openOrders.baseTokenFree)\n          : null,\n    },\n    {\n      market,\n      key: `${quoteCurrency}${baseCurrency}${quoteCurrency}`,\n      coin: quoteCurrency,\n      wallet: quoteCurrencyBalances,\n      openOrders,\n      orders:\n        quoteExists && market && openOrders\n          ? market.quoteSplSizeToNumber(\n              openOrders.quoteTokenTotal.sub(openOrders.quoteTokenFree),\n            )\n          : null,\n      unsettled:\n        quoteExists && market && openOrders\n          ? market.quoteSplSizeToNumber(openOrders.quoteTokenFree)\n          : null,\n    },\n  ];\n}\n\nexport function useWalletBalancesForAllMarkets(): {\n  mint: string;\n  balance: number;\n}[] {\n  const [tokenAccounts] = useTokenAccounts();\n  const { connected } = useWallet();\n  const [mintInfos, mintInfosConnected] = useMintInfos();\n\n  if (!connected || !mintInfosConnected) {\n    return [];\n  }\n\n  let balances: { [mint: string]: number } = {};\n  for (let account of tokenAccounts || []) {\n    if (!account.account) {\n      continue;\n    }\n    let parsedAccount;\n    if (account.effectiveMint.equals(WRAPPED_SOL_MINT)) {\n      parsedAccount = {\n        mint: WRAPPED_SOL_MINT,\n        owner: account.pubkey,\n        amount: account.account.lamports,\n      };\n    } else {\n      parsedAccount = parseTokenAccountData(account.account.data);\n    }\n    if (!(parsedAccount.mint.toBase58() in balances)) {\n      balances[parsedAccount.mint.toBase58()] = 0;\n    }\n    const mintInfo = mintInfos && mintInfos[parsedAccount.mint.toBase58()];\n    const additionalAmount = divideBnToNumber(\n      new BN(parsedAccount.amount),\n      getTokenMultiplierFromDecimals(mintInfo?.decimals || 0),\n    );\n    balances[parsedAccount.mint.toBase58()] += additionalAmount;\n  }\n  return Object.entries(balances).map(([mint, balance]) => {\n    return { mint, balance };\n  });\n}\n\nexport function useUnmigratedDeprecatedMarkets() {\n  const connection = useConnection();\n  const { accounts } = useUnmigratedOpenOrdersAccounts();\n  const marketsList =\n    accounts &&\n    Array.from(new Set(accounts.map((openOrders) => openOrders.market)));\n  const deps = marketsList && marketsList.map((m) => m.toBase58());\n\n  const useUnmigratedDeprecatedMarketsInner = async () => {\n    if (!marketsList) {\n      return null;\n    }\n    const getMarket = async (address) => {\n      const marketInfo = USE_MARKETS.find((market) =>\n        market.address.equals(address),\n      );\n      if (!marketInfo) {\n        console.log('Failed loading market');\n        notify({\n          message: 'Error loading market',\n          type: 'error',\n        });\n        return null;\n      }\n      try {\n        console.log('Loading market', marketInfo.name);\n        // NOTE: Should this just be cached by (connection, marketInfo.address, marketInfo.programId)?\n        return await Market.load(\n          connection,\n          marketInfo.address,\n          {},\n          marketInfo.programId,\n        );\n      } catch (e) {\n        console.log('Failed loading market', marketInfo.name, e);\n        notify({\n          message: 'Error loading market',\n          description: e.message,\n          type: 'error',\n        });\n        return null;\n      }\n    };\n    return (await Promise.all(marketsList.map(getMarket))).filter((x) => x);\n  };\n  const [markets] = useAsyncData(\n    useUnmigratedDeprecatedMarketsInner,\n    tuple(\n      'useUnmigratedDeprecatedMarketsInner',\n      connection,\n      deps && deps.toString(),\n    ),\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\n  );\n  if (!markets) {\n    return null;\n  }\n  return markets.map((market) => ({\n    market,\n    openOrdersList: accounts?.filter(\n      (openOrders) => market && openOrders.market.equals(market.address),\n    ),\n  }));\n}\n\nexport function useGetOpenOrdersForDeprecatedMarkets(): {\n  openOrders: OrderWithMarketAndMarketName[] | null | undefined;\n  loaded: boolean;\n  refreshOpenOrders: () => void;\n} {\n  const { connected, wallet } = useWallet();\n  const { customMarkets } = useCustomMarkets();\n  const connection = useConnection();\n  const marketsAndOrders = useUnmigratedDeprecatedMarkets();\n  const marketsList =\n    marketsAndOrders && marketsAndOrders.map(({ market }) => market);\n\n  // This isn't quite right: open order balances could change\n  const deps =\n    marketsList &&\n    marketsList\n      .filter((market): market is Market => !!market)\n      .map((market) => market.address.toBase58());\n\n  async function getOpenOrdersForDeprecatedMarkets() {\n    if (!connected || !wallet) {\n      return null;\n    }\n    if (!marketsList) {\n      return null;\n    }\n    console.log('refreshing getOpenOrdersForDeprecatedMarkets');\n    const getOrders = async (market: Market | null) => {\n      if (!market) {\n        return null;\n      }\n      const { marketName } = getMarketDetails(market, customMarkets);\n      try {\n        console.log('Fetching open orders for', marketName);\n        // Can do better than this, we have the open orders accounts already\n        return (\n          await market.loadOrdersForOwner(connection, wallet.publicKey)\n        ).map((order) => ({ marketName, market, ...order }));\n      } catch (e) {\n        console.log('Failed loading open orders', market.address.toBase58(), e);\n        notify({\n          message: `Error loading open orders for deprecated ${marketName}`,\n          description: e.message,\n          type: 'error',\n        });\n        return null;\n      }\n    };\n    return (await Promise.all(marketsList.map(getOrders)))\n      .filter((x): x is OrderWithMarketAndMarketName[] => !!x)\n      .flat();\n  }\n\n  const cacheKey = tuple(\n    'getOpenOrdersForDeprecatedMarkets',\n    connected,\n    connection,\n    wallet,\n    deps && deps.toString(),\n  );\n  const [openOrders, loaded] = useAsyncData(\n    getOpenOrdersForDeprecatedMarkets,\n    cacheKey,\n    {\n      refreshInterval: _VERY_SLOW_REFRESH_INTERVAL,\n    },\n  );\n  console.log('openOrders', openOrders);\n  return {\n    openOrders,\n    loaded,\n    refreshOpenOrders: () => refreshCache(cacheKey),\n  };\n}\n\nexport function useBalancesForDeprecatedMarkets() {\n  const markets = useUnmigratedDeprecatedMarkets();\n  const [customMarkets] = useLocalStorageState<CustomMarketInfo[]>(\n    'customMarkets',\n    [],\n  );\n  if (!markets) {\n    return null;\n  }\n\n  const openOrderAccountBalances: DeprecatedOpenOrdersBalances[] = [];\n  markets.forEach(({ market, openOrdersList }) => {\n    const { baseCurrency, quoteCurrency, marketName } = getMarketDetails(\n      market,\n      customMarkets,\n    );\n    if (!baseCurrency || !quoteCurrency || !market) {\n      return;\n    }\n    (openOrdersList || []).forEach((openOrders) => {\n      const inOrdersBase =\n        openOrders?.baseTokenTotal &&\n        openOrders?.baseTokenFree &&\n        market.baseSplSizeToNumber(\n          openOrders.baseTokenTotal.sub(openOrders.baseTokenFree),\n        );\n      const inOrdersQuote =\n        openOrders?.quoteTokenTotal &&\n        openOrders?.quoteTokenFree &&\n        market.baseSplSizeToNumber(\n          openOrders.quoteTokenTotal.sub(openOrders.quoteTokenFree),\n        );\n      const unsettledBase =\n        openOrders?.baseTokenFree &&\n        market.baseSplSizeToNumber(openOrders.baseTokenFree);\n      const unsettledQuote =\n        openOrders?.quoteTokenFree &&\n        market.baseSplSizeToNumber(openOrders.quoteTokenFree);\n\n      openOrderAccountBalances.push({\n        marketName,\n        market,\n        coin: baseCurrency,\n        key: `${marketName}${baseCurrency}`,\n        orders: inOrdersBase,\n        unsettled: unsettledBase,\n        openOrders,\n      });\n      openOrderAccountBalances.push({\n        marketName,\n        market,\n        coin: quoteCurrency,\n        key: `${marketName}${quoteCurrency}`,\n        orders: inOrdersQuote,\n        unsettled: unsettledQuote,\n        openOrders,\n      });\n    });\n  });\n  return openOrderAccountBalances;\n}\n\nexport function getMarketInfos(\n  customMarkets: CustomMarketInfo[],\n): MarketInfo[] {\n  const customMarketsInfo = customMarkets\n    .filter(\n      (item) =>\n        !USE_MARKETS.find(\n          (itemNew) =>\n            itemNew.address.toString() === item.address &&\n            itemNew.deprecated === true,\n        ),\n    )\n    .map((m) => ({\n      ...m,\n      address: new PublicKey(m.address),\n      programId: new PublicKey(m.programId),\n      deprecated: false,\n    }));\n\n  return [...customMarketsInfo, ...USE_MARKETS];\n}\n\nexport function useMarketInfos() {\n  const { customMarkets } = useCustomMarkets();\n  return getMarketInfos(customMarkets);\n}\n\n/**\n * If selling, choose min tick size. If buying choose a price\n * s.t. given the state of the orderbook, the order will spend\n * `cost` cost currency.\n *\n * @param orderbook serum Orderbook object\n * @param cost quantity to spend. Base currency if selling,\n *  quote currency if buying.\n * @param tickSizeDecimals size of price increment of the market\n */\nexport function getMarketOrderPrice(\n  orderbook: Orderbook,\n  cost: number,\n  tickSizeDecimals?: number,\n) {\n  if (orderbook.isBids) {\n    return orderbook.market.tickSize;\n  }\n  let spentCost = 0;\n  let price, sizeAtLevel, costAtLevel: number;\n  const asks = orderbook.getL2(1000);\n  for ([price, sizeAtLevel] of asks) {\n    costAtLevel = price * sizeAtLevel;\n    if (spentCost + costAtLevel > cost) {\n      break;\n    }\n    spentCost += costAtLevel;\n  }\n  const sendPrice = Math.min(price * 1.02, asks[0][0] * 1.05);\n  let formattedPrice;\n  if (tickSizeDecimals) {\n    formattedPrice = floorToDecimal(sendPrice, tickSizeDecimals);\n  } else {\n    formattedPrice = sendPrice;\n  }\n  return formattedPrice;\n}\n\nexport function getExpectedFillPrice(\n  orderbook: Orderbook,\n  cost: number,\n  tickSizeDecimals?: number,\n) {\n  let spentCost = 0;\n  let avgPrice = 0;\n  let price, sizeAtLevel, costAtLevel: number;\n  for ([price, sizeAtLevel] of orderbook.getL2(1000)) {\n    costAtLevel = (orderbook.isBids ? 1 : price) * sizeAtLevel;\n    if (spentCost + costAtLevel > cost) {\n      avgPrice += (cost - spentCost) * price;\n      spentCost = cost;\n      break;\n    }\n    avgPrice += costAtLevel * price;\n    spentCost += costAtLevel;\n  }\n  const totalAvgPrice = avgPrice / Math.min(cost, spentCost);\n  let formattedPrice;\n  if (tickSizeDecimals) {\n    formattedPrice = floorToDecimal(totalAvgPrice, tickSizeDecimals);\n  } else {\n    formattedPrice = totalAvgPrice;\n  }\n  return formattedPrice;\n}\n\nexport function useCurrentlyAutoSettling(): [\n  boolean,\n  (currentlyAutoSettling: boolean) => void,\n] {\n  const [currentlyAutoSettling, setCurrentlyAutosettling] =\n    useState<boolean>(false);\n  return [currentlyAutoSettling, setCurrentlyAutosettling];\n}\n","import React, { useEffect, useState } from 'react';\nimport { Col, Input, Modal, Row, Typography } from 'antd';\nimport { notify } from '../utils/notifications';\nimport { isValidPublicKey } from '../utils/utils';\nimport { PublicKey } from '@solana/web3.js';\nimport { Market, MARKETS, TOKEN_MINTS } from '@project-serum/serum';\nimport { useAccountInfo, useConnection } from '../utils/connection';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nconst { Text } = Typography;\n\nexport default function CustomMarketDialog({\n  visible,\n  onAddCustomMarket,\n  onClose,\n}) {\n  const connection = useConnection();\n\n  const [marketId, setMarketId] = useState('');\n\n  const [marketLabel, setMarketLabel] = useState('');\n  const [baseLabel, setBaseLabel] = useState('');\n  const [quoteLabel, setQuoteLabel] = useState('');\n\n  const [market, setMarket] = useState(null);\n  const [loadingMarket, setLoadingMarket] = useState(false);\n\n  const wellFormedMarketId = isValidPublicKey(marketId);\n\n  const [marketAccountInfo] = useAccountInfo(\n    wellFormedMarketId ? new PublicKey(marketId) : null,\n  );\n  const programId = marketAccountInfo\n    ? marketAccountInfo.owner.toBase58()\n    : MARKETS.find(({ deprecated }) => !deprecated).programId.toBase58();\n\n  useEffect(() => {\n    if (!wellFormedMarketId || !programId) {\n      resetLabels();\n      return;\n    }\n    setLoadingMarket(true);\n    Market.load(\n      connection,\n      new PublicKey(marketId),\n      {},\n      new PublicKey(programId),\n    )\n      .then((market) => {\n        setMarket(market);\n      })\n      .catch(() => {\n        resetLabels();\n        setMarket(null);\n      })\n      .finally(() => setLoadingMarket(false));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [connection, marketId, programId]);\n\n  const resetLabels = () => {\n    setMarketLabel(null);\n    setBaseLabel(null);\n    setQuoteLabel(null);\n  };\n\n  const knownMarket = MARKETS.find(\n    (m) =>\n      m.address.toBase58() === marketId && m.programId.toBase58() === programId,\n  );\n  const knownProgram = MARKETS.find(\n    (m) => m.programId.toBase58() === programId,\n  );\n  const knownBaseCurrency =\n    market?.baseMintAddress &&\n    TOKEN_MINTS.find((token) => token.address.equals(market.baseMintAddress))\n      ?.name;\n\n  const knownQuoteCurrency =\n    market?.quoteMintAddress &&\n    TOKEN_MINTS.find((token) => token.address.equals(market.quoteMintAddress))\n      ?.name;\n\n  const canSubmit =\n    !loadingMarket &&\n    !!market &&\n    market.publicKey.toBase58() === marketId &&\n    marketId &&\n    programId &&\n    marketLabel &&\n    (knownBaseCurrency || baseLabel) &&\n    (knownQuoteCurrency || quoteLabel) &&\n    wellFormedMarketId;\n\n  const onSubmit = () => {\n    if (!canSubmit) {\n      notify({\n        message: 'Please fill in all fields with valid values',\n        type: 'error',\n      });\n      return;\n    }\n\n    let params = {\n      address: marketId,\n      programId,\n      name: marketLabel,\n    };\n    if (!knownBaseCurrency) {\n      params.baseLabel = baseLabel;\n    }\n    if (!knownQuoteCurrency) {\n      params.quoteLabel = quoteLabel;\n    }\n    onAddCustomMarket(params);\n    onDoClose();\n  };\n\n  const onDoClose = () => {\n    resetLabels();\n    setMarket(null);\n    setMarketId(null);\n    onClose();\n  };\n\n  return (\n    <Modal\n      title={'Add custom market'}\n      visible={visible}\n      onOk={onSubmit}\n      okText={\n        market && knownProgram && knownProgram.deprecated\n          ? 'Refused to add'\n          : 'Add'\n      }\n      onCancel={onDoClose}\n      okButtonProps={{\n        disabled:\n          !canSubmit || (market && knownProgram && knownProgram.deprecated),\n      }}\n    >\n      <div>\n        {wellFormedMarketId ? (\n          <>\n            {!market && !loadingMarket && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"danger\">Not a valid market</Text>\n              </Row>\n            )}\n            {market && knownMarket && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"warning\">Market known: {knownMarket.name}</Text>\n              </Row>\n            )}\n            {market && !knownProgram && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"danger\">Warning: unknown DEX program</Text>\n              </Row>\n            )}\n            {market && knownProgram && knownProgram.deprecated && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"warning\">Warning: deprecated DEX program</Text>\n              </Row>\n            )}\n          </>\n        ) : (\n          <>\n            {marketId && !wellFormedMarketId && (\n              <Row style={{ marginBottom: 8 }}>\n                <Text type=\"danger\">Invalid market ID</Text>\n              </Row>\n            )}\n          </>\n        )}\n        <Row style={{ marginBottom: 8 }}>\n          <Col span={24}>\n            <Input\n              placeholder=\"Market Id\"\n              value={marketId}\n              onChange={(e) => setMarketId(e.target.value)}\n              suffix={loadingMarket ? <LoadingOutlined /> : null}\n            />\n          </Col>\n        </Row>\n\n        <Row style={{ marginBottom: 8, marginTop: 8 }}>\n          <Col span={24}>\n            <Input\n              placeholder=\"Market Label\"\n              disabled={!market}\n              value={marketLabel}\n              onChange={(e) => setMarketLabel(e.target.value)}\n            />\n          </Col>\n        </Row>\n        <Row gutter={[8]} style={{ marginBottom: 8 }}>\n          <Col span={12}>\n            <Input\n              placeholder=\"Base label\"\n              disabled={!market || knownBaseCurrency}\n              value={knownBaseCurrency || baseLabel}\n              onChange={(e) => setBaseLabel(e.target.value)}\n            />\n            {market && !knownBaseCurrency && (\n              <div style={{ marginTop: 8 }}>\n                <Text type=\"warning\">Warning: unknown token</Text>\n              </div>\n            )}\n          </Col>\n          <Col span={12}>\n            <Input\n              placeholder=\"Quote label\"\n              disabled={!market || knownQuoteCurrency}\n              value={knownQuoteCurrency || quoteLabel}\n              onChange={(e) => setQuoteLabel(e.target.value)}\n            />\n            {market && !knownQuoteCurrency && (\n              <div style={{ marginTop: 8 }}>\n                <Text type=\"warning\">Warning: unknown token</Text>\n              </div>\n            )}\n          </Col>\n        </Row>\n      </div>\n    </Modal>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div``;\n\nexport default function FloatingElement({\n  style = undefined,\n  children,\n  stretchVertical = false,\n}) {\n  return (\n    <Wrapper\n      style={{\n        height: stretchVertical ? 'calc(100% - 10px)' : undefined,\n        ...style,\n      }}\n    >\n      {children}\n    </Wrapper>\n  );\n}\n","import { Button, Col, Row } from 'antd';\nimport React, { useState } from 'react';\nimport {\n  useTokenAccounts,\n  getSelectedTokenAccountForMint,\n} from '../../utils/markets';\nimport { useSendConnection } from '../../utils/connection';\nimport { useWallet } from '../../utils/wallet';\nimport { settleFunds } from '../../utils/send';\nimport { notify } from '../../utils/notifications';\n\nexport default function BalancesTable({\n  balances,\n  showMarket,\n  hideWalletBalance,\n  onSettleSuccess,\n}) {\n  const [accounts] = useTokenAccounts();\n  const connection = useSendConnection();\n  const { wallet } = useWallet();\n\n  async function onSettleFunds(market, openOrders) {\n    try {\n      await settleFunds({\n        market,\n        openOrders,\n        connection,\n        wallet,\n        baseCurrencyAccount: getSelectedTokenAccountForMint(\n          accounts,\n          market?.baseMintAddress,\n        ),\n        quoteCurrencyAccount: getSelectedTokenAccountForMint(\n          accounts,\n          market?.quoteMintAddress,\n        ),\n      });\n    } catch (e) {\n      notify({\n        message: 'Error settling funds',\n        description: e.message,\n        type: 'error',\n      });\n      return;\n    }\n    onSettleSuccess && onSettleSuccess();\n  }\n  const [rowItem, setRowItem] = useState(4);\n  if (showMarket) {\n    setRowItem(rowItem + 1);\n  }\n  if (hideWalletBalance) {\n    setRowItem(rowItem + 1);\n  }\n  // setRowItem(Math.floor(24 / rowItem));\n  return (\n    <>\n      <Row\n        style={{\n          fontSize: 14,\n          color: 'rgba(241, 241, 242, 0.5)',\n          paddingBottom: 16,\n        }}\n      >\n        {showMarket ? (\n          <Col span={24 / rowItem} style={{ textAlign: 'left' }}>\n            Market\n          </Col>\n        ) : null}\n        <Col span={24 / rowItem} style={{ textAlign: 'right' }}>\n          Coin\n        </Col>\n        {hideWalletBalance ? (\n          <Col span={24 / rowItem} style={{ textAlign: 'right' }}>\n            Wallet Balance\n          </Col>\n        ) : null}\n        <Col span={24 / rowItem} style={{ textAlign: 'right' }}>\n          Orders\n        </Col>\n        <Col span={24 / rowItem} style={{ textAlign: 'right' }}>\n          Unsettled\n        </Col>\n        <Col span={24 / rowItem} style={{ textAlign: 'right' }}>\n          Action\n        </Col>\n      </Row>\n      <div style={{ height: 350, overflowX: 'hidden' }}>\n        {balances.map(\n          (\n            { marketName, coin, wallet, orders, unsettled, market, openOrders },\n            i,\n          ) => (\n            <Row\n              key={i}\n              style={{\n                fontSize: 14,\n                color: 'rgba(241, 241, 242, 1)',\n                paddingBottom: 16,\n              }}\n            >\n              {showMarket ? (\n                <Col span={24 / rowItem} style={{ textAlign: 'left' }}>\n                  {marketName}\n                </Col>\n              ) : null}\n              <Col span={24 / rowItem} style={{ textAlign: 'right' }}>\n                {coin}\n              </Col>\n              {hideWalletBalance ? (\n                <Col span={24 / rowItem} style={{ textAlign: 'right' }}>\n                  {wallet}\n                </Col>\n              ) : null}\n              <Col span={24 / rowItem} style={{ textAlign: 'right' }}>\n                {orders}\n              </Col>\n              <Col span={24 / rowItem} style={{ textAlign: 'right' }}>\n                {unsettled}\n              </Col>\n              <Col span={24 / rowItem} style={{ textAlign: 'right' }}>\n                <Button\n                  ghost\n                  style={{ marginRight: 12 }}\n                  onClick={() => onSettleFunds(market, openOrders)}\n                >\n                  Settle {marketName}\n                </Button>\n              </Col>\n            </Row>\n          ),\n        )}\n      </div>\n    </>\n    // <DataTable\n    //   emptyLabel=\"No balances\"\n    //   dataSource={balances}\n    //   columns={columns}\n    //   pagination={false}\n    // />\n  );\n}\n","import React, { useState } from 'react';\n\nimport styled from 'styled-components';\nimport { Button, Col, Row } from 'antd';\nimport { cancelOrder } from '../../utils/send';\nimport { useWallet } from '../../utils/wallet';\nimport { useSendConnection } from '../../utils/connection';\nimport { notify } from '../../utils/notifications';\nimport { OrderWithMarketAndMarketName } from '../../utils/types';\n\nconst CancelButton = styled(Button)`\n  color: rgba(241, 241, 242, 1);\n  // border: 1px solid rgba(194, 0, 251, 0.1);\n  border: 1px solid #C200FB;\n  border-radius: 4px;\n  width: 65px;\n  height: 20px;\n  font-size: 10;\n  padding: 0;\n  margin: 0;\n`;\n\nexport default function OpenOrderTable({\n  openOrders,\n  onCancelSuccess,\n  pageSize,\n  loading,\n  marketFilter,\n}: {\n  openOrders: OrderWithMarketAndMarketName[] | null | undefined;\n  onCancelSuccess?: () => void;\n  pageSize?: number;\n  loading?: boolean;\n  marketFilter?: boolean;\n}) {\n  let { wallet } = useWallet();\n  let connection = useSendConnection();\n\n  const [cancelId, setCancelId] = useState(null);\n\n  async function cancel(order) {\n    setCancelId(order?.orderId);\n    try {\n      if (wallet) {\n      await cancelOrder({\n        order,\n        market: order.market,\n        connection,\n        wallet,\n      });\n    } else {\n      throw Error('Error cancelling order')\n    }\n    } catch (e) {\n      notify({\n        message: 'Error cancelling order',\n        description: e.message,\n        type: 'error',\n      });\n      return;\n    } finally {\n      setCancelId(null);\n    }\n    onCancelSuccess && onCancelSuccess();\n  }\n\n  const dataSource = (openOrders || []).map((order) => ({\n    ...order,\n    key: order.orderId,\n  }));\n\n  return (\n    <Row>\n      <Col span={24}>\n        <Row style={{ fontSize: 14, color: 'rgba(241, 241, 242, 0.5)', paddingBottom: 16 }}>\n          <Col span={5} style={{ textAlign: 'left' }}>Market</Col>\n          <Col span={5} style={{ textAlign: 'right' }}>Side</Col>\n          <Col span={5} style={{ textAlign: 'right' }}>Size</Col>\n          <Col span={5} style={{ textAlign: 'right' }}>Price</Col>\n          <Col span={4} style={{ textAlign: 'right' }}> </Col>\n        </Row>\n        <div style={{ height: 350, overflowX: 'hidden' }}>\n          {dataSource.map(({marketName, side, size, price, orderId }, i) => (\n            <Row key={i} style={{ fontSize: 14, color: 'rgba(241, 241, 242, 1)', paddingBottom: 16 }}>\n              <Col span={5} style={{ textAlign: 'left' }}>{marketName}</Col>\n              <Col span={5} style={{ textAlign: 'right', color: 'rgba(90, 196, 190, 1)' }}>{side}</Col>\n              <Col span={5} style={{ textAlign: 'right', color: 'rgba(90, 196, 190, 1)' }}>{size}</Col>\n              <Col span={5} style={{ textAlign: 'right' }}>{price}</Col>\n              <Col span={4} style={{ textAlign: 'right' }}>\n                <CancelButton\n                  onClick={() => cancel(dataSource[i])}\n                  loading={cancelId + '' === orderId + ''}\n                >\n                  Cancel\n                </CancelButton>\n              </Col>\n            </Row>\n          ))}\n        </div>\n        {/*<DataTable*/}\n        {/*  emptyLabel=\"No open orders\"*/}\n        {/*  dataSource={dataSource}*/}\n        {/*  columns={columns}*/}\n        {/*  pagination={true}*/}\n        {/*  pageSize={pageSize ? pageSize : 5}*/}\n        {/*  loading={loading !== undefined && loading}*/}\n        {/*/>*/}\n      </Col>\n    </Row>\n  );\n}\n","import { Button, Divider, Spin, Typography } from 'antd';\nimport React from 'react';\nimport {\n  useGetOpenOrdersForDeprecatedMarkets,\n  useBalancesForDeprecatedMarkets,\n  useUnmigratedOpenOrdersAccounts,\n} from '../utils/markets';\nimport FloatingElement from './layout/FloatingElement';\nimport CheckOutlined from '@ant-design/icons/lib/icons/CheckOutlined';\nimport BalancesTable from './UserInfoTable/BalancesTable';\nimport Link from './Link';\nimport OpenOrderTable from './UserInfoTable/OpenOrderTable';\nimport SyncOutlined from '@ant-design/icons/lib/icons/SyncOutlined';\n\nconst { Title } = Typography;\n\nexport default function DeprecatedMarketsInstructions({ switchToLiveMarkets }) {\n  const balances = useBalancesForDeprecatedMarkets();\n  const { openOrders, loaded, refreshOpenOrders } =\n    useGetOpenOrdersForDeprecatedMarkets();\n\n  const { refresh } = useUnmigratedOpenOrdersAccounts();\n  const needToCancelOrders = !openOrders || openOrders.length > 0;\n  const filteredBalances =\n    balances &&\n    balances.filter(({ orders, unsettled }) => orders > 0 || unsettled > 0);\n  const needToSettleFunds = filteredBalances && filteredBalances.length > 0;\n  return (\n    <FloatingElement>\n      <Title level={4} style={{ color: 'rgba(255, 255, 255, 1)' }}>\n        Migrate to new USDC markets\n      </Title>\n      <Typography>\n        <Link\n          external\n          to={\n            'https://solscan.io/address/EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v'\n          }\n        >\n          Native USDC\n        </Link>{' '}\n        has arrived on Solana! See{' '}\n        <Link\n          external\n          to={\n            'https://www.circle.com/blog/circle-partners-with-alameda-research-ftx-project-serum-to-introduce-support-for-usdc-on-solana'\n          }\n        >\n          Circle's announcement\n        </Link>{' '}\n        for more information.\n      </Typography>\n      <br />\n      <Typography>\n        Serum is transitioning from the previous{' '}\n        <Link\n          external\n          to={\n            'https://solscan.io/address/BXXkv6z8ykpG1yuvUDPgh732wzVHB69RnB9YgSYh3itW'\n          }\n        >\n          Wrapped USDC\n        </Link>\n        , now called WUSDC, to Native USDC. You can convert from WUSDC to USDC\n        directly on{' '}\n        <Link external to={'https://sollet.io'}>\n          sollet.io\n        </Link>\n        , or can deposit WUSDC and be credited USDC on exchanges like{' '}\n        <Link external to={'https://ftx.com'}>\n          FTX\n        </Link>\n        .\n      </Typography>\n      <br />\n      <Typography>\n        Markets with WUSDC as the quote curency are now deprecated. To migrate\n        over to the new USDC markets, please cancel your orders and settle your\n        funds on old markets.\n      </Typography>\n      <div style={{ marginTop: 20, display: 'flex', justifyContent: 'center' }}>\n        <Button onClick={() => refresh(true)}>\n          <SyncOutlined /> Refresh data\n        </Button>\n      </div>\n      {!balances ? (\n        <Spin size=\"large\" />\n      ) : (\n        <>\n          <Divider>\n            {!needToCancelOrders && <CheckOutlined />} Cancel your orders\n          </Divider>\n          {needToCancelOrders ? (\n            loaded ? (\n              <OpenOrderTable\n                openOrders={openOrders}\n                onCancelSuccess={() => {\n                  setTimeout(() => {\n                    refresh();\n                    refreshOpenOrders();\n                  }, 1000); // Wait so that on-chain account state reflects the update\n                }}\n              />\n            ) : (\n              <Spin size=\"large\" />\n            )\n          ) : null}\n          <Divider>\n            {!needToSettleFunds && <CheckOutlined />} Settle your funds\n          </Divider>\n          {needToSettleFunds && (\n            <BalancesTable\n              balances={filteredBalances}\n              hideWalletBalance\n              showMarket\n              onSettleSuccess={() => {\n                setTimeout(refresh, 1000); // Wait so that on-chain account state reflects the update\n              }}\n            />\n          )}\n          <Divider>Switch to upgraded markets</Divider>\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\n            <Button\n              onClick={switchToLiveMarkets}\n              disabled={needToSettleFunds || needToCancelOrders}\n            >\n              Switch to new markets\n            </Button>\n          </div>\n        </>\n      )}\n    </FloatingElement>\n  );\n}\n","import React from 'react';\nimport { Button } from 'antd';\nimport { LinkOutlined } from '@ant-design/icons';\n\nexport default function LinkAddress({\n  title,\n  address,\n  shorten = false,\n}: {\n  title?: undefined | any;\n  address: string;\n  shorten?: boolean;\n}) {\n  return (\n    <div>\n      {title && <p style={{ color: 'white' }}>{title}</p>}\n      <Button\n        type=\"link\"\n        icon={<LinkOutlined />}\n        href={'https://solscan.io/address/' + address}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        style={{ cursor: 'pointer' }}\n      >\n        {shorten ? `${address.slice(0, 4)}...${address.slice(-4)}` : address}\n      </Button>\n    </div>\n  );\n}\n","import { Col, Row } from 'antd';\nimport React, { useRef, useEffect, useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useMarket, useOrderbook, useMarkPrice } from '../utils/markets';\nimport { isEqual, getDecimalCount } from '../utils/utils';\nimport { useInterval } from '../utils/useInterval';\nimport FloatingElement from './layout/FloatingElement';\nimport usePrevious from '../utils/usePrevious';\nimport { ArrowUpOutlined, ArrowDownOutlined } from '@ant-design/icons';\n\nconst Title = styled.div`\n  color: rgba(255, 255, 255, 1);\n`;\n\nconst SizeTitle = styled(Row)`\n  padding: 16px 0 12px;\n  color: #434a59;\n`;\n\nconst MarkPriceTitle = styled(Row)`\n  padding: 15px 0 12px;\n  font-weight: 700;\n`;\n\nconst Line = styled.div`\n  text-align: right;\n  float: right;\n  height: 100%;\n  ${(props) =>\n    props['data-width'] &&\n    css`\n      width: ${props['data-width']};\n    `}\n  ${(props) =>\n    props['data-bgcolor'] &&\n    css`\n      background-color: ${props['data-bgcolor']};\n    `}\n`;\n\nconst Price = styled.div`\n  position: absolute;\n  right: 5px;\n  color: white;\n`;\n\nexport default function Orderbook({ smallScreen, depth = 7, onPrice, onSize }) {\n  const markPrice = useMarkPrice();\n  const [orderbook] = useOrderbook();\n  const { baseCurrency, quoteCurrency } = useMarket();\n\n  const currentOrderbookData = useRef(null);\n  const lastOrderbookData = useRef(null);\n\n  const [orderbookData, setOrderbookData] = useState(null);\n\n  useInterval(() => {\n    if (\n      !currentOrderbookData.current ||\n      JSON.stringify(currentOrderbookData.current) !==\n        JSON.stringify(lastOrderbookData.current)\n    ) {\n      let bids = orderbook?.bids || [];\n      let asks = orderbook?.asks || [];\n\n      let sum = (total, [, size], index) =>\n        index < depth ? total + size : total;\n      let totalSize = bids.reduce(sum, 0) + asks.reduce(sum, 0);\n\n      let bidsToDisplay = getCumulativeOrderbookSide(bids, totalSize, false);\n      let asksToDisplay = getCumulativeOrderbookSide(asks, totalSize, true);\n\n      currentOrderbookData.current = {\n        bids: orderbook?.bids,\n        asks: orderbook?.asks,\n      };\n\n      setOrderbookData({ bids: bidsToDisplay, asks: asksToDisplay });\n    }\n  }, 250);\n\n  useEffect(() => {\n    lastOrderbookData.current = {\n      bids: orderbook?.bids,\n      asks: orderbook?.asks,\n    };\n  }, [orderbook]);\n\n  function getCumulativeOrderbookSide(orders, totalSize, backwards = false) {\n    let cumulative = orders\n      .slice(0, depth)\n      .reduce((cumulative, [price, size], i) => {\n        const cumulativeSize = (cumulative[i - 1]?.cumulativeSize || 0) + size;\n        cumulative.push({\n          price,\n          size,\n          cumulativeSize,\n          sizePercent: Math.round((cumulativeSize / (totalSize || 1)) * 100),\n        });\n        return cumulative;\n      }, []);\n    if (backwards) {\n      cumulative = cumulative.reverse();\n    }\n    return cumulative;\n  }\n\n  return (\n    <FloatingElement\n      style={{\n        ...(smallScreen\n          ? { flex: 1 }\n          : { height: '500px', overflow: 'hidden' }),\n        height: 540,\n      }}\n    >\n      <Title\n        style={{\n          borderTop: '1px solid #1C274F',\n          borderBottom: '1px solid #1C274F',\n          padding: '12px 0 12px 16px',\n          color: 'rgba(241, 241, 242, 0.75)',\n          fontSize: 14,\n        }}\n      >\n        Order book\n      </Title>\n      <SizeTitle>\n        <Col\n          span={12}\n          style={{\n            textAlign: 'right',\n            color: 'rgba(241, 241, 242, 0.5)',\n            fontSize: 12,\n          }}\n        >\n          Size ({baseCurrency})\n        </Col>\n        <Col\n          span={12}\n          style={{\n            textAlign: 'right',\n            paddingRight: 20,\n            color: 'rgba(241, 241, 242, 0.5)',\n            fontSize: 12,\n          }}\n        >\n          Price ({quoteCurrency})\n        </Col>\n      </SizeTitle>\n      <div style={{ paddingBottom: 16 }}>\n        {orderbookData?.asks.map(({ price, size, sizePercent }) => (\n          <OrderbookRow\n            key={price + ''}\n            price={price}\n            size={size}\n            side={'sell'}\n            sizePercent={sizePercent}\n            onPriceClick={() => onPrice(price)}\n            onSizeClick={() => onSize(size)}\n          />\n        ))}\n      </div>\n      <MarkPriceComponent markPrice={markPrice} />\n      <SizeTitle>\n        <Col\n          span={12}\n          style={{\n            textAlign: 'right',\n            color: 'rgba(241, 241, 242, 0.5)',\n            fontSize: 12,\n          }}\n        >\n          Size ({baseCurrency})\n        </Col>\n        <Col\n          span={12}\n          style={{\n            textAlign: 'right',\n            paddingRight: 20,\n            color: 'rgba(241, 241, 242, 0.5)',\n            fontSize: 12,\n          }}\n        >\n          Price ({quoteCurrency})\n        </Col>\n      </SizeTitle>\n      {orderbookData?.bids.map(({ price, size, sizePercent }) => (\n        <OrderbookRow\n          key={price + ''}\n          price={price}\n          size={size}\n          side={'buy'}\n          sizePercent={sizePercent}\n          onPriceClick={() => onPrice(price)}\n          onSizeClick={() => onSize(size)}\n        />\n      ))}\n    </FloatingElement>\n  );\n}\n\nconst OrderbookRow = React.memo(\n  ({ side, price, size, sizePercent, onSizeClick, onPriceClick }) => {\n    const element = useRef();\n\n    const { market } = useMarket();\n\n    useEffect(() => {\n      // eslint-disable-next-line\n      !element.current?.classList.contains('flash') &&\n        element.current?.classList.add('flash');\n      const id = setTimeout(\n        () =>\n          element.current?.classList.contains('flash') &&\n          element.current?.classList.remove('flash'),\n        250,\n      );\n      return () => clearTimeout(id);\n    }, [price, size]);\n\n    let formattedSize =\n      market?.minOrderSize && !isNaN(size)\n        ? Number(size).toFixed(getDecimalCount(market.minOrderSize) + 1)\n        : size;\n\n    let formattedPrice =\n      market?.tickSize && !isNaN(price)\n        ? Number(price).toFixed(getDecimalCount(market.tickSize) + 1)\n        : price;\n\n    return (\n      <Row\n        ref={element}\n        style={{ marginBottom: 3, fontSize: 12 }}\n        onClick={onSizeClick}\n      >\n        <Col span={12} style={{ textAlign: 'right' }}>\n          {formattedSize}\n        </Col>\n        <Col span={12} style={{ textAlign: 'right' }}>\n          <Line\n            data-width={sizePercent + '%'}\n            data-bgcolor={\n              side === 'buy'\n                ? 'rgba(65, 199, 122, 0.6)'\n                : 'rgba(242, 60, 105, 0.6)'\n            }\n          />\n          <Price onClick={onPriceClick}>{formattedPrice}</Price>\n        </Col>\n      </Row>\n    );\n  },\n  (prevProps, nextProps) =>\n    isEqual(prevProps, nextProps, ['price', 'size', 'sizePercent']),\n);\n\nconst MarkPriceComponent = React.memo(\n  ({ markPrice }) => {\n    const { market } = useMarket();\n    const previousMarkPrice = usePrevious(markPrice);\n\n    let markPriceColor =\n      markPrice > previousMarkPrice\n        ? '#41C77A'\n        : markPrice < previousMarkPrice\n        ? '#F23B69'\n        : 'white';\n\n    let formattedMarkPrice =\n      markPrice &&\n      market?.tickSize &&\n      markPrice.toFixed(getDecimalCount(market.tickSize));\n\n    return (\n      <MarkPriceTitle\n        justify=\"center\"\n        style={{\n          borderTop: '1px solid #1C274F',\n          borderBottom: '1px solid #1C274F',\n          fontSize: 16,\n        }}\n      >\n        <Col style={{ color: markPriceColor }}>\n          {markPrice > previousMarkPrice && (\n            <ArrowUpOutlined style={{ marginRight: 5 }} />\n          )}\n          {markPrice < previousMarkPrice && (\n            <ArrowDownOutlined style={{ marginRight: 5 }} />\n          )}\n          {formattedMarkPrice || '----'}\n        </Col>\n      </MarkPriceTitle>\n    );\n  },\n  (prevProps, nextProps) => isEqual(prevProps, nextProps, ['markPrice']),\n);\n","import { useRef, useEffect } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef<() => void>();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current && savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import { useEffect, useRef } from 'react';\n\nexport default function usePrevious(value) {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = useRef();\n\n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n\n  // Return previous value (happens before update in useEffect above)\n  return ref.current;\n}\n","import React from 'react';\nimport { Modal } from 'antd';\nimport {\n  useSelectedBaseCurrencyAccount,\n  useMarket,\n  useSelectedQuoteCurrencyAccount,\n} from '../utils/markets';\nimport { useWallet } from '../utils/wallet';\nimport Link from './Link';\n\nexport default function DepositDialog({ onClose, baseOrQuote }) {\n  const { market, baseCurrency, quoteCurrency } = useMarket();\n\n  const { providerName, providerUrl } = useWallet();\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  let coinMint;\n  let account;\n  let depositCoin;\n  if (baseOrQuote === 'base') {\n    coinMint = market?.baseMintAddress;\n    account = baseCurrencyAccount;\n    depositCoin = baseCurrency;\n  } else if (baseOrQuote === 'quote') {\n    coinMint = market?.quoteMintAddress;\n    account = quoteCurrencyAccount;\n    depositCoin = quoteCurrency;\n  } else {\n    account = null;\n  }\n  if (!coinMint) {\n    return null;\n  }\n  return (\n    <Modal\n      title={depositCoin}\n      visible={!!coinMint}\n      onOk={onClose}\n      onCancel={onClose}\n    >\n      <div style={{ paddingTop: '20px' }}>\n        <p style={{ color: 'white' }}>Mint address:</p>\n        <p style={{ color: 'rgba(255,255,255,0.5)' }}>{coinMint.toBase58()}</p>\n        <div>\n          <p style={{ color: 'white' }}>SPL Deposit address:</p>\n          <p style={{ color: 'rgba(255,255,255,0.5)' }}>\n            {account ? (\n              account.pubkey.toBase58()\n            ) : (\n              <>\n                Visit{' '}\n                <Link external to={providerUrl}>\n                  {providerName}\n                </Link>{' '}\n                to create an account for this mint\n              </>\n            )}\n          </p>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n","import React from 'react';\nimport { TokenAccount } from '../utils/types';\nimport { useSelectedTokenAccounts } from '../utils/markets';\nimport { Button, Col, Select, Typography } from 'antd';\nimport { CopyOutlined } from '@ant-design/icons';\nimport { abbreviateAddress } from '../utils/utils';\nimport { notify } from '../utils/notifications';\n\nexport default function StandaloneTokenAccountsSelect({\n  accounts,\n  mint,\n  label,\n}: {\n  accounts: TokenAccount[] | null | undefined;\n  mint: string | undefined;\n  label?: boolean;\n}) {\n  const [\n    selectedTokenAccounts,\n    setSelectedTokenAccounts,\n  ] = useSelectedTokenAccounts();\n\n  let selectedValue: string | undefined;\n  if (mint && mint in selectedTokenAccounts) {\n    selectedValue = selectedTokenAccounts[mint];\n  } else if (accounts && accounts?.length > 0) {\n    selectedValue = accounts[0].pubkey.toBase58();\n  } else {\n    selectedValue = undefined;\n  }\n\n  const setTokenAccountForCoin = (value) => {\n    if (!mint) {\n      notify({\n        message: 'Error selecting token account',\n        description: 'Mint is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    const newSelectedTokenAccounts = { ...selectedTokenAccounts };\n    newSelectedTokenAccounts[mint] = value;\n    setSelectedTokenAccounts(newSelectedTokenAccounts);\n  };\n\n  return (\n    <React.Fragment>\n      {label && <Col span={8}>Token account:</Col>}\n      <Col span={label ? 13 : 21}>\n        <Select\n          style={{ width: '100%' }}\n          value={selectedValue}\n          onSelect={setTokenAccountForCoin}\n        >\n          {accounts?.map((account) => (\n            <Select.Option\n              key={account.pubkey.toBase58()}\n              value={account.pubkey.toBase58()}\n            >\n              <Typography.Text code>\n                {label\n                  ? abbreviateAddress(account.pubkey, 8)\n                  : account.pubkey.toBase58()}\n              </Typography.Text>\n            </Select.Option>\n          ))}\n        </Select>\n      </Col>\n      <Col span={2} offset={1}>\n        <Button\n          shape=\"round\"\n          icon={<CopyOutlined />}\n          size={'small'}\n          onClick={() =>\n            selectedValue && navigator.clipboard.writeText(selectedValue)\n          }\n        />\n      </Col>\n    </React.Fragment>\n  );\n}\n","import { Button, Col, Row } from 'antd';\nimport React, { useState } from 'react';\nimport FloatingElement from './layout/FloatingElement';\nimport styled from 'styled-components';\nimport {\n  useBalances,\n  useMarket,\n  useSelectedBaseCurrencyAccount,\n  useSelectedOpenOrdersAccount,\n  useSelectedQuoteCurrencyAccount,\n  useTokenAccounts,\n} from '../utils/markets';\nimport DepositDialog from './DepositDialog';\nimport { useWallet } from '../utils/wallet';\nimport { settleFunds } from '../utils/send';\nimport { useSendConnection } from '../utils/connection';\nimport { notify } from '../utils/notifications';\nimport { Balances } from '../utils/types';\nimport StandaloneTokenAccountsSelect from './StandaloneTokenAccountSelect';\nimport logo1 from '../assets/logo1.svg';\n\nconst RowBox = styled(Row)`\n  padding-bottom: 20px;\n`;\n\nconst ActionButton = styled(Button)`\n  color: rgba(241, 241, 242, 0.75);\n  font-size: 12px;\n  display: 'inline-block';\n  padding-right: 15px;\n  padding-left: 15px;\n  border-radius: 4px;\n  border: 1px solid rgba(241, 241, 242, 0.5);\n`;\n\nexport default function StandaloneBalancesDisplay() {\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const balances = useBalances();\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\n  const connection = useSendConnection();\n  const { wallet, connected } = useWallet();\n  const [baseOrQuote, setBaseOrQuote] = useState('');\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const [tokenAccounts] = useTokenAccounts();\n  const baseCurrencyBalances =\n    balances && balances.find((b) => b.coin === baseCurrency);\n  const quoteCurrencyBalances =\n    balances && balances.find((b) => b.coin === quoteCurrency);\n\n  async function onSettleFunds() {\n    if (!wallet) {\n      notify({\n        message: 'Wallet not connected',\n        description: 'wallet is undefined',\n        type: 'error',\n      });\n      return;\n    }\n\n    if (!market) {\n      notify({\n        message: 'Error settling funds',\n        description: 'market is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    if (!openOrdersAccount) {\n      notify({\n        message: 'Error settling funds',\n        description: 'Open orders account is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    if (!baseCurrencyAccount) {\n      notify({\n        message: 'Error settling funds',\n        description: 'Open orders account is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    if (!quoteCurrencyAccount) {\n      notify({\n        message: 'Error settling funds',\n        description: 'Open orders account is undefined',\n        type: 'error',\n      });\n      return;\n    }\n\n    try {\n      await settleFunds({\n        market,\n        openOrders: openOrdersAccount,\n        connection,\n        wallet,\n        baseCurrencyAccount,\n        quoteCurrencyAccount,\n      });\n    } catch (e) {\n      notify({\n        message: 'Error settling funds',\n        description: e.message,\n        type: 'error',\n      });\n    }\n  }\n\n  const formattedBalances: [\n    string | undefined,\n    Balances | undefined,\n    string,\n    string | undefined,\n  ][] = [\n    [\n      baseCurrency,\n      baseCurrencyBalances,\n      'base',\n      market?.baseMintAddress.toBase58(),\n    ],\n    [\n      quoteCurrency,\n      quoteCurrencyBalances,\n      'quote',\n      market?.quoteMintAddress.toBase58(),\n    ],\n  ];\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 9 }}>\n      <div\n        style={{\n          width: '100%',\n          borderBottom: '1px solid #1C274F',\n          fontSize: 14,\n          paddingBottom: 12,\n        }}\n      >\n        Wallet Balance\n      </div>\n      <div style={{ paddingRight: 10 }}>\n        <Row\n          style={{\n            marginTop: 16,\n            color: 'rgba(241, 241, 242, 0.5)',\n            fontSize: 12,\n            textAlign: 'right',\n          }}\n        >\n          <Col span={6} style={{ textAlign: 'left' }}>\n            Asset\n          </Col>\n          <Col span={9}>Wallet balance</Col>\n          <Col span={9}>Unsettled balance</Col>\n        </Row>\n        {formattedBalances.map(\n          ([currency, balances, baseOrQuote, mint], index) => (\n            <React.Fragment key={index}>\n              <Row\n                style={{\n                  marginTop: 16,\n                  fontSize: 12,\n                  color: 'rgba(241, 241, 242, 1)',\n                  textAlign: 'right',\n                  borderBottom: '1px solid #1C274F',\n                  paddingBottom: 18,\n                }}\n              >\n                <Col\n                  span={6}\n                  style={{\n                    color: 'rgba(241, 241, 242, 0.5)',\n                    textAlign: 'left',\n                  }}\n                >\n                  {currency}\n                </Col>\n                <Col span={9}>{balances && balances.wallet}</Col>\n                <Col span={9}>{balances && balances.unsettled}</Col>\n                <Col span={6} style={{ paddingTop: 8 }}></Col>\n                <Col span={9} style={{ paddingTop: 8 }}>\n                  {/* <ActionButton\n                    size=\"small\"\n                    onClick={() => setBaseOrQuote(baseOrQuote)}\n                  >\n                    Deposit\n                  </ActionButton> */}\n                </Col>\n                <Col span={9} style={{ paddingTop: 8 }}>\n                  <ActionButton size=\"small\" onClick={onSettleFunds}>\n                    Settle\n                  </ActionButton>\n                </Col>\n              </Row>\n\n              {connected && (\n                <RowBox align=\"middle\" style={{ paddingBottom: 10 }}>\n                  <StandaloneTokenAccountsSelect\n                    accounts={tokenAccounts\n                      ?.filter(\n                        (account) => account.effectiveMint.toBase58() === mint,\n                      )\n                      .sort((a, b) =>\n                        a.pubkey.toString() === wallet?.publicKey.toString()\n                          ? -1\n                          : 1,\n                      )}\n                    mint={mint}\n                    label\n                  />\n                </RowBox>\n              )}\n            </React.Fragment>\n          ),\n        )}\n      </div>\n      <DepositDialog\n        baseOrQuote={baseOrQuote}\n        onClose={() => setBaseOrQuote('')}\n      />\n    </FloatingElement>\n  );\n}\n","const CHARTS_KEY = 'tradingviewCharts';\nconst STUDIES_KEY = 'tradingviewStudies';\n\n// See https://github.com/tradingview/charting_library/wiki/Widget-Constructor#save_load_adapter\n\nexport function getAllCharts() {\n  // @ts-ignore\n  let charts = JSON.parse(localStorage.getItem(CHARTS_KEY)) || [];\n  return new Promise((resolve) => resolve(charts));\n}\n\nexport function removeChart(chartId) {\n  // @ts-ignore\n  let charts = JSON.parse(localStorage.getItem(CHARTS_KEY)) || [];\n  charts = charts.filter((chart) => chart.id !== chartId);\n  localStorage.setItem(CHARTS_KEY, JSON.stringify(charts));\n  localStorage.removeItem(CHARTS_KEY + '.' + chartId);\n  return new Promise((resolve) => resolve());\n}\n\nexport function saveChart(chartData) {\n  let { content, ...info } = chartData;\n  if (!info.id) {\n    info.id = 'chart' + Math.floor(Math.random() * 1e8);\n  }\n  // @ts-ignore\n  info.timestamp = new Date() - 0;\n  content = JSON.parse(content);\n  content['content'] = JSON.parse(content['content']);\n  // Remove \"study_Overlay\" i.e the indexes\n  try {\n    for (\n      var i = 0;\n      i < content['content']['charts'][0]['panes'][0]['sources'].length;\n      i++\n    ) {\n      if (\n        content['content']['charts'][0]['panes'][0]['sources'][i]['type'] ===\n        'study_Overlay'\n      ) {\n        content['content']['charts'][0]['panes'][0]['sources'].splice(i, 1);\n      }\n    }\n  } catch (err) {\n    console.log(err);\n  }\n  content['content'] = JSON.stringify(content['content']);\n  content = JSON.stringify(content);\n  // @ts-ignore\n  let charts = JSON.parse(localStorage.getItem(CHARTS_KEY)) || [];\n  charts = charts.filter((chart) => chart.id !== info.id);\n  charts.push(info);\n  localStorage.setItem(CHARTS_KEY, JSON.stringify(charts));\n  localStorage.setItem(CHARTS_KEY + '.' + info.id, content);\n\n  return new Promise((resolve) => resolve(info.id));\n}\n\nexport function getChartContent(chartId) {\n  let content = localStorage.getItem(CHARTS_KEY + '.' + chartId);\n  return new Promise((resolve) => resolve(content));\n}\n\nexport function getAllStudyTemplates() {\n  // @ts-ignore\n  let studies = JSON.parse(localStorage.getItem(STUDIES_KEY)) || [];\n  return new Promise((resolve) => resolve(studies));\n}\n\nexport function removeStudyTemplate({ name }) {\n  // @ts-ignore\n  let studies = JSON.parse(localStorage.getItem(STUDIES_KEY)) || [];\n  studies = studies.filter((study) => study.name !== name);\n  localStorage.setItem(STUDIES_KEY, JSON.stringify(studies));\n  localStorage.removeItem(STUDIES_KEY + '.' + name);\n  return new Promise((resolve) => resolve());\n}\n\nexport function saveStudyTemplate({ content, ...info }) {\n  // @ts-ignore\n  let studies = JSON.parse(localStorage.getItem(STUDIES_KEY)) || [];\n  studies = studies.filter((study) => study.name !== info.name);\n  studies.push(info);\n  localStorage.setItem(STUDIES_KEY, JSON.stringify(studies));\n  localStorage.setItem(STUDIES_KEY + '.' + info.name, content);\n  return new Promise((resolve) => resolve());\n}\n\nexport function getStudyTemplateContent({ name }) {\n  let content = localStorage.getItem(STUDIES_KEY + '.' + name);\n  return new Promise((resolve) => resolve(content));\n}\n","/* eslint-disable */\nvar t = function () {\n  return (t =\n    Object.assign ||\n    function (t) {\n      for (var e, o = arguments, n = 1, i = arguments.length; n < i; n++)\n        for (var r in (e = o[n]))\n          Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);\n      return t;\n    }).apply(this, arguments);\n};\nfunction e(o, n) {\n  var i = t({}, o);\n  for (var r in n)\n    'object' != typeof o[r] || null === o[r] || Array.isArray(o[r])\n      ? void 0 !== n[r] && (i[r] = n[r])\n      : (i[r] = e(o[r], n[r]));\n  return i;\n}\nvar o = {\n    mobile: {\n      disabled_features: [\n        'left_toolbar',\n        'header_widget',\n        'timeframes_toolbar',\n        'edit_buttons_in_legend',\n        'context_menus',\n        'control_bar',\n        'border_around_the_chart',\n      ],\n      enabled_features: [],\n    },\n  },\n  n = {\n    width: 800,\n    height: 500,\n    interval: '1D',\n    timezone: 'Etc/UTC',\n    container_id: '',\n    library_path: '',\n    locale: 'en',\n    widgetbar: {\n      details: !1,\n      watchlist: !1,\n      watchlist_settings: { default_symbols: [] },\n    },\n    overrides: { 'mainSeriesProperties.showCountdown': !1 },\n    studies_overrides: {},\n    trading_customization: { position: {}, order: {} },\n    brokerConfig: { configFlags: {} },\n    fullscreen: !1,\n    autosize: !1,\n    disabled_features: [],\n    enabled_features: [],\n    debug: !1,\n    logo: {},\n    time_frames: [\n      { text: '5y', resolution: '1W' },\n      { text: '1y', resolution: '1W' },\n      { text: '6m', resolution: '120' },\n      { text: '3m', resolution: '60' },\n      { text: '1m', resolution: '30' },\n      { text: '5d', resolution: '5' },\n      { text: '1d', resolution: '1' },\n    ],\n    client_id: '0',\n    user_id: '0',\n    charts_storage_api_version: '1.0',\n    favorites: { intervals: [], chartTypes: [] },\n  };\nfunction i() {\n  return 'CL v17.024 (internal id cbd3ae28 @ 2020-11-11T12:45:30.675Z)';\n}\nvar r = (function () {\n  function t(t) {\n    if (\n      ((this._id =\n        'tradingview_' +\n        ((1048576 * (1 + Math.random())) | 0).toString(16).substring(1)),\n      (this._ready = !1),\n      (this._readyHandlers = []),\n      (this._onWindowResize = this._autoResizeChart.bind(this)),\n      !t.datafeed)\n    )\n      throw new Error('Datafeed is not defined');\n    if (((this._options = e(n, t)), t.preset)) {\n      var i = o[t.preset];\n      i\n        ? (void 0 !== this._options.disabled_features\n            ? (this._options.disabled_features = this._options.disabled_features.concat(\n                i.disabled_features,\n              ))\n            : (this._options.disabled_features = i.disabled_features),\n          void 0 !== this._options.enabled_features\n            ? (this._options.enabled_features = this._options.enabled_features.concat(\n                i.enabled_features,\n              ))\n            : (this._options.enabled_features = i.enabled_features))\n        : console.warn('Unknown preset: `' + t.preset + '`');\n    }\n    'Dark' === this._options.theme &&\n      void 0 === this._options.loading_screen &&\n      (this._options.loading_screen = { backgroundColor: '#131722' }),\n      this._create();\n  }\n  return (\n    (t.prototype.onChartReady = function (t) {\n      this._ready ? t.call(this) : this._readyHandlers.push(t);\n    }),\n    (t.prototype.headerReady = function () {\n      var t = this;\n      return this._innerWindowLoaded.then(function () {\n        return t._innerWindow().headerReady();\n      });\n    }),\n    (t.prototype.onGrayedObjectClicked = function (t) {\n      this._innerAPI().onGrayedObjectClicked(t);\n    }),\n    (t.prototype.onShortcut = function (t, e) {\n      this._innerWindow().createShortcutAction(t, e);\n    }),\n    (t.prototype.subscribe = function (t, e) {\n      this._innerAPI().subscribe(t, e);\n    }),\n    (t.prototype.unsubscribe = function (t, e) {\n      this._innerAPI().unsubscribe(t, e);\n    }),\n    (t.prototype.chart = function (t) {\n      return this._innerAPI().chart(t);\n    }),\n    (t.prototype.getLanguage = function () {\n      return this._options.locale;\n    }),\n    (t.prototype.setSymbol = function (t, e, o) {\n      this._innerAPI().changeSymbol(t, e, o);\n    }),\n    (t.prototype.remove = function () {\n      window.removeEventListener('resize', this._onWindowResize),\n        this._readyHandlers.splice(0, this._readyHandlers.length),\n        delete window[this._id],\n        this._iFrame.parentNode &&\n          this._iFrame.parentNode.removeChild(this._iFrame);\n    }),\n    (t.prototype.closePopupsAndDialogs = function () {\n      this._innerAPI().closePopupsAndDialogs();\n    }),\n    (t.prototype.selectLineTool = function (t) {\n      this._innerAPI().selectLineTool(t);\n    }),\n    (t.prototype.selectedLineTool = function () {\n      return this._innerAPI().selectedLineTool();\n    }),\n    (t.prototype.save = function (t) {\n      this._innerAPI().saveChart(t);\n    }),\n    (t.prototype.load = function (t, e) {\n      this._innerAPI().loadChart({ json: t, extendedData: e });\n    }),\n    (t.prototype.getSavedCharts = function (t) {\n      this._innerAPI().getSavedCharts(t);\n    }),\n    (t.prototype.loadChartFromServer = function (t) {\n      this._innerAPI().loadChartFromServer(t);\n    }),\n    (t.prototype.saveChartToServer = function (t, e, o) {\n      this._innerAPI().saveChartToServer(t, e, o);\n    }),\n    (t.prototype.removeChartFromServer = function (t, e) {\n      this._innerAPI().removeChartFromServer(t, e);\n    }),\n    (t.prototype.onContextMenu = function (t) {\n      this._innerAPI().onContextMenu(t);\n    }),\n    (t.prototype.createButton = function (t) {\n      return this._innerWindow().createButton(t);\n    }),\n    (t.prototype.showNoticeDialog = function (t) {\n      this._innerAPI().showNoticeDialog(t);\n    }),\n    (t.prototype.showConfirmDialog = function (t) {\n      this._innerAPI().showConfirmDialog(t);\n    }),\n    (t.prototype.showLoadChartDialog = function () {\n      this._innerAPI().showLoadChartDialog();\n    }),\n    (t.prototype.showSaveAsChartDialog = function () {\n      this._innerAPI().showSaveAsChartDialog();\n    }),\n    (t.prototype.symbolInterval = function () {\n      return this._innerAPI().getSymbolInterval();\n    }),\n    (t.prototype.mainSeriesPriceFormatter = function () {\n      return this._innerAPI().mainSeriesPriceFormatter();\n    }),\n    (t.prototype.getIntervals = function () {\n      return this._innerAPI().getIntervals();\n    }),\n    (t.prototype.getStudiesList = function () {\n      return this._innerAPI().getStudiesList();\n    }),\n    (t.prototype.addCustomCSSFile = function (t) {\n      this._innerWindow().addCustomCSSFile(t);\n    }),\n    (t.prototype.applyOverrides = function (t) {\n      (this._options = e(this._options, { overrides: t })),\n        this._innerWindow().applyOverrides(t);\n    }),\n    (t.prototype.applyStudiesOverrides = function (t) {\n      this._innerWindow().applyStudiesOverrides(t);\n    }),\n    (t.prototype.watchList = function () {\n      return this._innerAPI().watchlist();\n    }),\n    (t.prototype.activeChart = function () {\n      return this._innerAPI().activeChart();\n    }),\n    (t.prototype.chartsCount = function () {\n      return this._innerAPI().chartsCount();\n    }),\n    (t.prototype.layout = function () {\n      return this._innerAPI().layout();\n    }),\n    (t.prototype.setLayout = function (t) {\n      this._innerAPI().setLayout(t);\n    }),\n    (t.prototype.layoutName = function () {\n      return this._innerAPI().layoutName();\n    }),\n    (t.prototype.changeTheme = function (t, e) {\n      this._innerWindow().changeTheme(t, e);\n    }),\n    (t.prototype.getTheme = function () {\n      return this._innerWindow().getTheme();\n    }),\n    (t.prototype.takeScreenshot = function () {\n      this._innerAPI().takeScreenshot();\n    }),\n    (t.prototype.lockAllDrawingTools = function () {\n      return this._innerAPI().lockAllDrawingTools();\n    }),\n    (t.prototype.hideAllDrawingTools = function () {\n      return this._innerAPI().hideAllDrawingTools();\n    }),\n    (t.prototype.drawOnAllCharts = function (t) {\n      this._innerAPI().drawOnAllCharts(t);\n    }),\n    (t.prototype.magnetEnabled = function () {\n      return this._innerAPI().magnetEnabled();\n    }),\n    (t.prototype.magnetMode = function () {\n      return this._innerAPI().magnetMode();\n    }),\n    (t.prototype.undoRedoState = function () {\n      return this._innerAPI().undoRedoState();\n    }),\n    (t.prototype.setIntervalLinkingEnabled = function (t) {\n      this._innerAPI().setIntervalLinkingEnabled(t);\n    }),\n    (t.prototype.setTimeFrame = function (t) {\n      this._innerAPI().setTimeFrame(t);\n    }),\n    (t.prototype.symbolSync = function () {\n      return this._innerAPI().symbolSync();\n    }),\n    (t.prototype.intervalSync = function () {\n      return this._innerAPI().intervalSync();\n    }),\n    (t.prototype.crosshairSync = function () {\n      return this._innerAPI().crosshairSync();\n    }),\n    (t.prototype.timeSync = function () {\n      return this._innerAPI().timeSync();\n    }),\n    (t.prototype.getAllFeatures = function () {\n      return this._innerWindow().getAllFeatures();\n    }),\n    (t.prototype.takeClientScreenshot = function () {\n      return this._innerAPI().takeClientScreenshot();\n    }),\n    (t.prototype._innerAPI = function () {\n      return this._innerWindow().tradingViewApi;\n    }),\n    (t.prototype._innerWindow = function () {\n      return this._iFrame.contentWindow;\n    }),\n    (t.prototype._autoResizeChart = function () {\n      this._options.fullscreen &&\n        (this._iFrame.style.height = window.innerHeight + 'px');\n    }),\n    (t.prototype._create = function () {\n      var t = this,\n        e = this._render(),\n        o = document.getElementById(this._options.container_id);\n      if (null === o)\n        throw new Error(\n          'There is no such element - #' + this._options.container_id,\n        );\n      (o.innerHTML = e), (this._iFrame = o.querySelector('#' + this._id));\n      var n = this._iFrame;\n      (this._options.autosize || this._options.fullscreen) &&\n        ((n.style.width = '100%'),\n        this._options.fullscreen || (n.style.height = '100%')),\n        window.addEventListener('resize', this._onWindowResize),\n        this._onWindowResize(),\n        (this._innerWindowLoaded = new Promise(function (t) {\n          var e = function () {\n            n.removeEventListener('load', e, !1), t();\n          };\n          n.addEventListener('load', e, !1);\n        })),\n        this._innerWindowLoaded.then(function () {\n          t._innerWindow().widgetReady(function () {\n            t._ready = !0;\n            for (var e = 0, o = t._readyHandlers; e < o.length; e++) {\n              var n = o[e];\n              try {\n                n.call(t);\n              } catch (i) {\n                console.error(i);\n              }\n            }\n            t._innerWindow().initializationFinished();\n          });\n        });\n    }),\n    (t.prototype._render = function () {\n      var t = window;\n      if (\n        ((t[this._id] = {\n          datafeed: this._options.datafeed,\n          customFormatters:\n            this._options.custom_formatters || this._options.customFormatters,\n          brokerFactory:\n            this._options.broker_factory || this._options.brokerFactory,\n          overrides: this._options.overrides,\n          studiesOverrides: this._options.studies_overrides,\n          tradingCustomization: this._options.trading_customization,\n          disabledFeatures: this._options.disabled_features,\n          enabledFeatures: this._options.enabled_features,\n          brokerConfig:\n            this._options.broker_config || this._options.brokerConfig,\n          restConfig: this._options.restConfig,\n          favorites: this._options.favorites,\n          logo: this._options.logo,\n          numeric_formatting: this._options.numeric_formatting,\n          rss_news_feed: this._options.rss_news_feed,\n          newsProvider: this._options.news_provider,\n          loadLastChart: this._options.load_last_chart,\n          saveLoadAdapter: this._options.save_load_adapter,\n          loading_screen: this._options.loading_screen,\n          settingsAdapter: this._options.settings_adapter,\n          getCustomIndicators: this._options.custom_indicators_getter,\n        }),\n        this._options.saved_data)\n      )\n        t[this._id].chartContent = { json: this._options.saved_data };\n      else if (!this._options.load_last_chart && !this._options.symbol)\n        throw new Error(\n          \"Symbol is not defined: either 'symbol' or 'load_last_chart' option must be set\",\n        );\n      var e =\n        (this._options.library_path || '') +\n        (encodeURIComponent(this._options.locale) +\n          '-tv-chart.cbd3ae28.html#symbol=') +\n        encodeURIComponent(this._options.symbol || '') +\n        '&interval=' +\n        encodeURIComponent(this._options.interval) +\n        (this._options.timeframe\n          ? '&timeframe=' + encodeURIComponent(this._options.timeframe)\n          : '') +\n        (this._options.toolbar_bg\n          ? '&toolbarbg=' +\n            encodeURIComponent(this._options.toolbar_bg.replace('#', ''))\n          : '') +\n        (this._options.studies_access\n          ? '&studiesAccess=' +\n            encodeURIComponent(JSON.stringify(this._options.studies_access))\n          : '') +\n        '&widgetbar=' +\n        encodeURIComponent(JSON.stringify(this._options.widgetbar)) +\n        (this._options.drawings_access\n          ? '&drawingsAccess=' +\n            encodeURIComponent(JSON.stringify(this._options.drawings_access))\n          : '') +\n        '&timeFrames=' +\n        encodeURIComponent(JSON.stringify(this._options.time_frames)) +\n        '&locale=' +\n        encodeURIComponent(this._options.locale) +\n        '&uid=' +\n        encodeURIComponent(this._id) +\n        '&clientId=' +\n        encodeURIComponent(String(this._options.client_id)) +\n        '&userId=' +\n        encodeURIComponent(String(this._options.user_id)) +\n        (this._options.charts_storage_url\n          ? '&chartsStorageUrl=' +\n            encodeURIComponent(this._options.charts_storage_url)\n          : '') +\n        (this._options.charts_storage_api_version\n          ? '&chartsStorageVer=' +\n            encodeURIComponent(this._options.charts_storage_api_version)\n          : '') +\n        (this._options.custom_css_url\n          ? '&customCSS=' + encodeURIComponent(this._options.custom_css_url)\n          : '') +\n        (this._options.auto_save_delay\n          ? '&autoSaveDelay=' +\n            encodeURIComponent(String(this._options.auto_save_delay))\n          : '') +\n        '&debug=' +\n        encodeURIComponent(String(this._options.debug)) +\n        (this._options.snapshot_url\n          ? '&snapshotUrl=' + encodeURIComponent(this._options.snapshot_url)\n          : '') +\n        (this._options.timezone\n          ? '&timezone=' + encodeURIComponent(this._options.timezone)\n          : '') +\n        (this._options.study_count_limit\n          ? '&studyCountLimit=' +\n            encodeURIComponent(String(this._options.study_count_limit))\n          : '') +\n        (this._options.symbol_search_request_delay\n          ? '&ssreqdelay=' +\n            encodeURIComponent(\n              String(this._options.symbol_search_request_delay),\n            )\n          : '') +\n        (this._options.compare_symbols\n          ? '&compareSymbols=' +\n            encodeURIComponent(JSON.stringify(this._options.compare_symbols))\n          : '') +\n        (this._options.theme\n          ? '&theme=' + encodeURIComponent(String(this._options.theme))\n          : '');\n      return (\n        '<iframe id=\"' +\n        this._id +\n        '\" name=\"' +\n        this._id +\n        '\"  src=\"' +\n        e +\n        '\"' +\n        (this._options.autosize || this._options.fullscreen\n          ? ''\n          : ' width=\"' +\n            this._options.width +\n            '\" height=\"' +\n            this._options.height +\n            '\"') +\n        ' frameborder=\"0\" allowTransparency=\"true\" scrolling=\"no\" allowfullscreen style=\"display:block;\"></iframe>'\n      );\n    }),\n    t\n  );\n})();\n(window.TradingView = window.TradingView || {}),\n  (window.TradingView.version = i);\nexport { i as version, r as widget };\n","// @ts-nocheck\nimport { useMemo } from 'react';\nimport { USE_MARKETS } from './markets';\nimport { sleep } from './utils';\n\nconst URL_SERVER = 'https://api.raydium.io/v1/dex/tv/';\n\nexport const useTvDataFeed = () => {\n  return useMemo(() => makeDataFeed(), []);\n};\n\nconst makeDataFeed = () => {\n  let subscriptions = {};\n  const overTime = {};\n  const lastReqTime = {}; \n\n  const getApi = async (url: string) => {\n    try {\n      const response = await fetch(url)\n      if (response.ok) {\n        const responseJson = await response.json()\n        return responseJson.success\n          ? responseJson.data\n          : responseJson\n          ? responseJson\n          : null\n      }\n    } catch (err) {\n      console.log(`Error fetching from Chart API ${url}: ${err}`)\n    }\n    return null\n  }\n\n  return {\n    onReady(callback) {\n      setTimeout(() => callback({\n        supported_resolutions: ['5', '15', '60', '120', '240', '1D',\n        //  '2D', '3D', '5D', '1W', '1M', '2M', '3M', '6M', '12M'\n        ],\n        supports_group_request: false,\n        supports_marks: false,\n        supports_search: false,\n        supports_timescale_marks: false,\n      }), 0)\n    },\n    async searchSymbol(userInput, exchange, symbolType, onResult) {\n      // const result = await apiGet(`${URL_SERVER}search?query=${userInput}&type=${symbolType}&exchange=${exchange}&limit=${1}`);\n      // onResult(result);\n    },\n    async resolveSymbol(\n      symbolName,\n      onSymboleResolvedCallback,\n      onResolveErrorCallback,\n      extension?,\n    ) {\n      let fromCustomMarket = false\n      let customMarket = []\n      try {\n        const customMarketStr = localStorage.getItem('customMarkets')\n        customMarket =  customMarketStr !== null ?JSON.parse(customMarketStr): []\n      } catch(e) {\n        console.log('error', e)\n      }\n      let marketInfo = USE_MARKETS.find(item => item.name === symbolName && !item.deprecated)\n\n      if (!marketInfo){\n        marketInfo = customMarket.find(item => item.name === symbolName || item.userName === symbolName)\n        fromCustomMarket = true\n      }\n\n      if (!marketInfo) {\n        return\n      }\n\n      const result = await getApi(`${URL_SERVER}symbols?market=${marketInfo.address.toString()}`)\n      if (!result) {\n        onResolveErrorCallback();\n        return;\n      }\n      if (result.name !== marketInfo.name) {\n        if (result.name.includes('unknown')) {\n          result.name = marketInfo.name\n          result.ticker = marketInfo.name\n          result.description = marketInfo.name\n        } else {\n          if (fromCustomMarket) {\n            for(let index = 0 ; index < customMarket.length; index++ ) {\n              if (customMarket[index].name === symbolName) {\n                customMarket[index].userName = customMarket[index].name\n                customMarket[index].name = result.name\n              }\n            }\n            localStorage.setItem('customMarkets', JSON.stringify(customMarket))\n          } else {\n            result.name = marketInfo.name\n          }\n        }\n      }\n      onSymboleResolvedCallback(result);\n    },\n    async getBars(\n      symbolInfo,\n      resolution,\n      from,\n      to,\n      onHistoryCallback,\n      onErrorCallback,\n      firstDataRequest,\n    ) {\n      from = Math.floor(from);\n      to = Math.ceil(to);\n\n      window.localStorage.setItem('resolution', resolution)\n      resolution = convertResolutionToApi(resolution)\n\n      if (from < minTs(symbolInfo.out_count, resolution)) {\n        onHistoryCallback([], {nodeData: false})\n        return\n      }\n\n      const key = `${symbolInfo.market}--${resolution}`\n\n      if (overTime[key] && overTime[key] > from) {\n        onHistoryCallback([], {nodeData: false})\n        return\n      }\n\n      try {\n        const result = await getApi(\n          `${URL_SERVER}history?market=${symbolInfo.market}&resolution=${resolution}&from_time=${from}&to_time=${to}`\n        )\n\n        if (result.c.length === 0 ) {\n          overTime[key] = to\n        } \n\n        onHistoryCallback(parseCandles(result), {\n          nodeData: result.length === 0,\n        });\n      } catch (err) {\n        onErrorCallback(err);\n      }\n    },\n    async subscribeBars(\n      symbolInfo,\n      resolution,\n      onRealtimeCallback,\n      subscriberUID,\n      onResetCacheNeededCallback,\n    ) {\n      if (subscriptions[subscriberUID]) {\n        subscriptions[subscriberUID].stop();\n        delete subscriptions[subscriberUID];\n      }\n\n      let stopped = false;\n      subscriptions[subscriberUID] = { stop: () => (stopped = true) };\n\n      while (!stopped) {\n        await sleep(2000);\n        for (let i = 0; i < 10; ++i) {\n          if (document.visibilityState !== 'visible') {\n            await sleep(2000);\n          }\n        }\n        if (stopped) {\n          return;\n        }\n\n        try {\n          const to = Math.ceil(new Date().getTime() / 1000);\n          const from = reduceTs(to, resolution);\n\n          const resolutionApi = convertResolutionToApi(resolution)\n\n          if (lastReqTime[subscriberUID] && lastReqTime[subscriberUID] + 1000 * 60 > new Date().getTime()) {\n            continue\n          }\n          lastReqTime[subscriberUID] = new Date().getTime()\n\n          const candle = await getApi(\n            `${URL_SERVER}history?market=${symbolInfo.market}&resolution=${resolutionApi}&from_time=${from}&to_time=${to}`\n          )\n\n          for (const item of parseCandles(candle)){\n            onRealtimeCallback(item);\n          }\n          continue;\n        } catch (e) {\n          console.warn(e);\n          await sleep(10000);\n          continue;\n        }\n      }\n    },\n    unsubscribeBars(subscriberUID) {\n      subscriptions[subscriberUID].stop();\n      delete subscriptions[subscriberUID];\n    },\n    async searchSymbols(userInput: string, exchange: string, symbolType: string, onResult: SearchSymbolsCallback) {\n      const marketList: any[] = USE_MARKETS.filter(item => item.name.includes(userInput) && !item.deprecated)\n      const reList = []\n      marketList.forEach(item => {\n        reList.push({\n          symbol: item.name,\n          full_name: item.name,\n          description: item.name,\n          exchange: 'Serum',\n          params: [],\n          type: 'spot',\n          ticker: item.name\n        })\n      })\n      if (onResult) {\n        onResult(reList)\n      }\n    }\n  };\n};\n\nconst minTs = (minCount: number, resolutionTv: string) => {\n  const ts = new Date().getTime() / 1000\n  switch (resolutionTv) {\n    case '1min':\n      return ts - 60 * 1 * minCount;\n    case '3min':\n      return ts - 60 * 3 * minCount;\n    case '5min':\n      return ts - 60 * 5 * minCount;\n    case '15min':\n      return ts - 60 * 15 * minCount;\n    case '30min':\n      return ts - 60 * 30 * minCount;\n    case '45min':\n      return ts - 60 * 45 * minCount;\n    case '1h':\n      return ts - 60 * 60 * minCount;\n    case '2h':\n      return ts - 60 * 120 * minCount;\n    case '4h':\n      return ts - 60 * 240 * minCount;\n    case '12h':\n      return ts - 60 * 720 * minCount;\n    case '1d':\n      return ts - 3600 * 24 * minCount;\n    case '2d':\n      return ts - 3600 * 24 * 2 * minCount;\n    case '3d':\n      return ts - 3600 * 24 * 3 * minCount;\n    case '5d':\n      return ts - 3600 * 24 * 5 * minCount;\n    case '7d':\n      return ts - 3600 * 24 * 7 * minCount;\n    case '1m' :\n      return ts - 3600 * 24 * 31 * 1 * minCount;\n    case '2m' :\n      return ts - 3600 * 24 * 31 * 2 * minCount;\n    case '3m' :\n      return ts - 3600 * 24 * 31 * 3 * minCount;\n    case '6m' :\n      return ts - 3600 * 24 * 31 * 6 * minCount;\n    case '1y' :\n      return ts - 3600 * 24 * 31 * 12 * minCount;\n    default:\n      throw Error(`minTs resolution error: ${resolutionTv}`)\n  }\n};\n\nconst reduceTs = (ts: number, resolutionTv: string) => {\n  switch (resolutionTv) {\n    case '1':\n      return ts - 60 * 1;\n    case '3':\n      return ts - 60 * 3;\n    case '5':\n      return ts - 60 * 5;\n    case '15':\n      return ts - 60 * 15;\n    case '30':\n      return ts - 60 * 30;\n    case '45':\n      return ts - 60 * 45;\n    case '60':\n      return ts - 60 * 60;\n    case '120':\n      return ts - 60 * 120;\n    case '240':\n      return ts - 60 * 240;\n    case '720':\n      return ts - 60 * 720;\n    case '1D':\n      return ts - 3600 * 24;\n    case '2D':\n      return ts - 3600 * 24 * 2;\n    case '3D':\n      return ts - 3600 * 24 * 3;\n    case '5D':\n      return ts - 3600 * 24 * 5;\n    case '7D':\n      return ts - 3600 * 24 * 7;\n    case '1M': \n      return ts - 3600 * 24 * 31 * 1;\n    case '2M': \n      return ts - 3600 * 24 * 31 * 2;\n    case '3M': \n      return ts - 3600 * 24 * 31 * 3;\n    case '6M': \n      return ts - 3600 * 24 * 31 * 6;\n    case '1Y': \n      return ts - 3600 * 24 * 31 * 12;\n    default:\n      throw Error(`reduceTs resolution error: ${resolutionTv}`)\n  }\n};\n\nexport const convertResolutionToApi = (resolution: string) => {\n  switch (resolution) {\n    case '1':\n      return '1min';\n    case '3':\n      return '3min';\n    case '5':\n      return '5min';\n    case '15':\n      return '15min';\n    case '30':\n      return '30min';\n    case '45':\n      return '45min';\n    case '60':\n      return '1h';\n    case '120':\n      return '2h';\n    case '240':\n      return '4h';\n    case '720':\n      return '12h';\n    case '1D':\n      return '1d';\n    case '2D':\n      return '2d';\n    case '3D':\n      return '3d';\n    case '5D':\n      return '5d';\n    case '7D':\n      return '7d';\n    case '1M': \n      return '1m';\n    case '2M': \n      return '2m';\n    case '3M': \n      return '3m';\n    case '6M': \n      return '6m';\n    case '1Y': \n      return '1y';\n    default:\n      throw Error(`convertResolutionToApi resolution error: ${resolution}`)\n  }\n};\n\ninterface rawCandles {\n  s: string;\n  c: Array<number>;\n  o: Array<number>;\n  l: Array<number>;\n  h: Array<number>;\n  t: Array<number>;\n  v: Array<number>;\n}\n\ninterface bar {\n  time: number;\n  close: number;\n  open: number;\n  low: number;\n  high: number;\n  volume: number;\n}\n\nconst parseCandles = (candles: rawCandles) => {\n  const result: Array<bar> = [];\n  for (let i = 0; i < candles.t.length; i++) {\n    result.push({\n      time: candles.t[i] * 1000,\n      close: candles.c[i],\n      open: candles.o[i],\n      high: candles.h[i],\n      low: candles.l[i],\n      volume: candles.v[i],\n    });\n  }\n  return result;\n};\n","import './index.css';\n\nimport * as React from 'react';\nimport * as saveLoadAdapter from './saveLoadAdapter';\n\nimport {\n  ChartingLibraryWidgetOptions,\n  IChartingLibraryWidget,\n  widget,\n} from '../../charting_library';\n\nimport { flatten } from '../../utils/utils';\nimport { useMarket } from '../../utils/markets';\nimport { convertResolutionToApi, useTvDataFeed } from '../../utils/Datafeed';\n\nexport interface ChartContainerProps {\n  symbol: ChartingLibraryWidgetOptions['symbol'];\n  interval: ChartingLibraryWidgetOptions['interval'];\n  auto_save_delay: ChartingLibraryWidgetOptions['auto_save_delay'];\n\n  // BEWARE: no trailing slash is expected in feed URL\n  datafeedUrl: string;\n  libraryPath: ChartingLibraryWidgetOptions['library_path'];\n  chartsStorageUrl: ChartingLibraryWidgetOptions['charts_storage_url'];\n  chartsStorageApiVersion: ChartingLibraryWidgetOptions['charts_storage_api_version'];\n  clientId: ChartingLibraryWidgetOptions['client_id'];\n  userId: ChartingLibraryWidgetOptions['user_id'];\n  fullscreen: ChartingLibraryWidgetOptions['fullscreen'];\n  autosize: ChartingLibraryWidgetOptions['autosize'];\n  studiesOverrides: ChartingLibraryWidgetOptions['studies_overrides'];\n  containerId: ChartingLibraryWidgetOptions['container_id'];\n  theme: string;\n  timeframe: ChartingLibraryWidgetOptions['timeframe'];\n}\n\nexport interface ChartContainerState {}\n\nexport const TVChartContainer = () => {\n  let datafeed = useTvDataFeed();\n  let resolution = window.localStorage.getItem('resolution') ?? '60';\n\n  try {\n    convertResolutionToApi(resolution);\n  } catch (e) {\n    resolution = '60';\n  }\n\n  const defaultProps: ChartContainerProps = {\n    symbol: 'GEMS/SOL',\n    // @ts-ignore\n    interval: resolution ? resolution : '60',\n    auto_save_delay: 5,\n    theme: 'Dark',\n    containerId: 'tv_chart_container',\n    libraryPath: '/charting_library/',\n    chartsStorageUrl: 'https://saveload.tradingview.com',\n    chartsStorageApiVersion: '1.1',\n    clientId: 'tradingview.com',\n    userId: 'public_user_id',\n    fullscreen: false,\n    autosize: true,\n    studiesOverrides: {},\n    timeframe: '1D',\n  };\n\n  const tvWidgetRef = React.useRef<IChartingLibraryWidget | null>(null);\n  const { marketName } = useMarket();\n\n  const chartProperties = JSON.parse(\n    localStorage.getItem('chartproperties') || '{}',\n  );\n\n  React.useEffect(() => {\n    const savedProperties = flatten(chartProperties, {\n      restrictTo: ['scalesProperties', 'paneProperties', 'tradingProperties'],\n    });\n\n    const widgetOptions: ChartingLibraryWidgetOptions = {\n      symbol: marketName as string,\n      datafeed: datafeed,\n      interval:\n        defaultProps.interval as ChartingLibraryWidgetOptions['interval'],\n      container_id:\n        defaultProps.containerId as ChartingLibraryWidgetOptions['container_id'],\n      library_path: defaultProps.libraryPath as string,\n      auto_save_delay: 5,\n\n      locale: 'en',\n      disabled_features: ['use_localstorage_for_settings'],\n      enabled_features: ['study_templates'],\n      load_last_chart: true,\n      client_id: defaultProps.clientId,\n      user_id: defaultProps.userId,\n      fullscreen: defaultProps.fullscreen,\n      autosize: defaultProps.autosize,\n      studies_overrides: defaultProps.studiesOverrides,\n      theme: defaultProps.theme === 'Dark' ? 'Dark' : 'Light',\n      overrides: {\n        ...savedProperties,\n        'mainSeriesProperties.candleStyle.upColor': '#41C77A',\n        'mainSeriesProperties.candleStyle.downColor': '#F23B69',\n        // 'mainSeriesProperties.candleStyle.borderColor': '#378658',\n        'mainSeriesProperties.candleStyle.borderUpColor': '#41C77A',\n        'mainSeriesProperties.candleStyle.borderDownColor': '#F23B69',\n        'mainSeriesProperties.candleStyle.wickUpColor': '#41C77A',\n        'mainSeriesProperties.candleStyle.wickDownColor': '#F23B69',\n      },\n      // @ts-ignore\n      save_load_adapter: saveLoadAdapter,\n      settings_adapter: {\n        initialSettings: {\n          'trading.orderPanelSettingsBroker': JSON.stringify({\n            showRelativePriceControl: false,\n            showCurrencyRiskInQty: false,\n            showPercentRiskInQty: false,\n            showBracketsInCurrency: false,\n            showBracketsInPercent: false,\n          }),\n          // \"proterty\"\n          'trading.chart.proterty':\n            localStorage.getItem('trading.chart.proterty') ||\n            JSON.stringify({\n              hideFloatingPanel: 1,\n            }),\n          'chart.favoriteDrawings':\n            localStorage.getItem('chart.favoriteDrawings') ||\n            JSON.stringify([]),\n          'chart.favoriteDrawingsPosition':\n            localStorage.getItem('chart.favoriteDrawingsPosition') ||\n            JSON.stringify({}),\n        },\n        setValue: (key, value) => {\n          localStorage.setItem(key, value);\n        },\n        removeValue: (key) => {\n          localStorage.removeItem(key);\n        },\n      },\n    };\n\n    const tvWidget = new widget(widgetOptions);\n\n    tvWidget.onChartReady(() => {\n      tvWidgetRef.current = tvWidget;\n      tvWidget\n        // @ts-ignore\n        .subscribe('onAutoSaveNeeded', () => tvWidget.saveChartToServer());\n    });\n  }, [\n    chartProperties,\n    datafeed,\n    defaultProps.autosize,\n    defaultProps.clientId,\n    defaultProps.containerId,\n    defaultProps.fullscreen,\n    defaultProps.interval,\n    defaultProps.libraryPath,\n    defaultProps.studiesOverrides,\n    defaultProps.theme,\n    defaultProps.userId,\n    marketName,\n  ]);\n  return (\n    <div\n      style={{ height: window.innerWidth < 1000 ? '50vh' : 540 }}\n      id={defaultProps.containerId}\n      className={'TVChartContainer'}\n    />\n  );\n};\n","import { Button, Col, Input, Row, Select, Slider, Switch } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport {\n  useFeeDiscountKeys,\n  useLocallyStoredFeeDiscountKey,\n  useMarkPrice,\n  useMarket,\n  useSelectedBaseCurrencyAccount,\n  useSelectedBaseCurrencyBalances,\n  useSelectedOpenOrdersAccount,\n  useSelectedQuoteCurrencyAccount,\n  useSelectedQuoteCurrencyBalances,\n} from '../utils/markets';\n\nimport FloatingElement from './layout/FloatingElement';\nimport { SwitchChangeEventHandler } from 'antd/es/switch';\nimport { notify } from '../utils/notifications';\nimport { refreshCache } from '../utils/fetch-loop';\nimport styled from 'styled-components';\nimport tuple from 'immutable-tuple';\nimport { useSendConnection } from '../utils/connection';\nimport { useWallet } from '../utils/wallet';\nimport {floorToDecimal, getDecimalCount, roundToDecimal,} from '../utils/utils';\nimport {getUnixTs, placeOrder} from '../utils/send';\n\nconst BuyButton = styled(Button)`\n  margin: 20px 0px 0px 0px;\n  background: #02bf76;\n  border-color: #02bf76;\n`;\n\nconst sliderMarks = {\n  0: '0%',\n  25: '25%',\n  50: '50%',\n  75: '75%',\n  100: '100%',\n};\n\nexport default function TradeForm({\n  style,\n  setChangeOrderRef,\n}: {\n  style?: any;\n  setChangeOrderRef?: (\n    ref: ({ size, price }: { size?: number; price?: number }) => void,\n  ) => void;\n}) {\n  const [side, setSide] = useState<'buy' | 'sell'>('buy');\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const baseCurrencyBalances = useSelectedBaseCurrencyBalances();\n  const quoteCurrencyBalances = useSelectedQuoteCurrencyBalances();\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\n  const { wallet, connected } = useWallet();\n  const sendConnection = useSendConnection();\n  const markPrice = useMarkPrice();\n  useFeeDiscountKeys();\n  const { storedFeeDiscountKey: feeDiscountKey } = useLocallyStoredFeeDiscountKey();\n\n  const [postOnly, setPostOnly] = useState(false);\n  const [ioc, setIoc] = useState(false);\n  const [baseSize, setBaseSize] = useState<number | undefined>(undefined);\n  const [quoteSize, setQuoteSize] = useState<number | undefined>(undefined);\n  const [price, setPrice] = useState<number | undefined>(undefined);\n  const [submitting, setSubmitting] = useState(false);\n  const [sizeFraction, setSizeFraction] = useState(0);\n\n  const availableQuote =\n    openOrdersAccount && market\n      ? market.quoteSplSizeToNumber(openOrdersAccount.quoteTokenFree)\n      : 0;\n\n  let quoteBalance = (quoteCurrencyBalances || 0) + (availableQuote || 0);\n  let baseBalance = baseCurrencyBalances || 0;\n  let sizeDecimalCount =\n    market?.minOrderSize && getDecimalCount(market.minOrderSize);\n  let priceDecimalCount = market?.tickSize && getDecimalCount(market.tickSize);\n\n  useEffect(() => {\n    setChangeOrderRef && setChangeOrderRef(doChangeOrder);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setChangeOrderRef]);\n\n  useEffect(() => {\n    baseSize && price && onSliderChange(sizeFraction);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [side]);\n\n  useEffect(() => {\n    updateSizeFraction();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [price, baseSize]);\n\n  const walletPubkey =  wallet?.publicKey\n  useEffect(() => {\n    const warmUpCache = async () => {\n      try {\n        if (!wallet || !wallet.publicKey || !market) {\n          console.log(`Skipping refreshing accounts`);\n          return;\n        }\n        const startTime = getUnixTs();\n        console.log(`Refreshing accounts for ${market.address}`);\n        await market?.findOpenOrdersAccountsForOwner(\n          sendConnection,\n          wallet.publicKey,\n        );\n        await market?.findBestFeeDiscountKey(sendConnection, wallet.publicKey);\n        const endTime = getUnixTs();\n        console.log(\n          `Finished refreshing accounts for ${market.address} after ${\n            endTime - startTime\n          }`,\n        );\n      } catch (e) {\n        console.log(`Encountered error when refreshing trading accounts: ${e}`);\n      }\n    };\n    warmUpCache();\n    const id = setInterval(warmUpCache, 30_000);\n    return () => clearInterval(id);\n  }, [market, sendConnection, wallet, walletPubkey]);\n\n  \n  // useInterval(() => {\n  //   const autoSettle = async () => {\n  //     if (!wallet || !market || !openOrdersAccount || !baseCurrencyAccount || !quoteCurrencyAccount || \n  //       openOrdersAccount?.baseTokenFree.toNumber() <= 0 || openOrdersAccount.quoteTokenFree.toNumber() <= 0) {\n  //       return;\n  //     }\n  //     try {\n  //       // settle funds into selected token wallets\n  //       await settleFunds({\n  //         market,\n  //         openOrders: openOrdersAccount,\n  //         connection: sendConnection,\n  //         wallet,\n  //         baseCurrencyAccount,\n  //         quoteCurrencyAccount\n  //       });\n  //     } catch (e) {\n  //       console.log('Error auto settling funds: ' + e.message);\n  //     }\n  //   };\n  //   (\n  //     connected &&\n  //     wallet?.autoApprove &&\n  //     autoSettleEnabled &&\n  //     autoSettle()\n  //   );\n  // }, 10000);\n\n  const onSetBaseSize = (baseSize: number | undefined) => {\n    setBaseSize(baseSize);\n    if (!baseSize) {\n      setQuoteSize(undefined);\n      return;\n    }\n    let usePrice = price || markPrice;\n    if (!usePrice) {\n      setQuoteSize(undefined);\n      return;\n    }\n    const rawQuoteSize = baseSize * usePrice;\n    const quoteSize =\n      baseSize && roundToDecimal(rawQuoteSize, sizeDecimalCount);\n    setQuoteSize(quoteSize);\n  };\n\n  const onSetQuoteSize = (quoteSize: number | undefined) => {\n    setQuoteSize(quoteSize);\n    if (!quoteSize) {\n      setBaseSize(undefined);\n      return;\n    }\n    let usePrice = price || markPrice;\n    if (!usePrice) {\n      setBaseSize(undefined);\n      return;\n    }\n    const rawBaseSize = quoteSize / usePrice;\n    const baseSize = quoteSize && roundToDecimal(rawBaseSize, sizeDecimalCount);\n    setBaseSize(baseSize);\n  };\n\n  const doChangeOrder = ({\n    size,\n    price,\n  }: {\n    size?: number;\n    price?: number;\n  }) => {\n    const formattedSize = size && roundToDecimal(size, sizeDecimalCount);\n    const formattedPrice = price && roundToDecimal(price, priceDecimalCount);\n    formattedSize && onSetBaseSize(formattedSize);\n    formattedPrice && setPrice(formattedPrice);\n  };\n\n  const updateSizeFraction = () => {\n    const rawMaxSize =\n      side === 'buy' ? quoteBalance / (price || markPrice || 1) : baseBalance;\n    const maxSize = floorToDecimal(rawMaxSize, sizeDecimalCount);\n    const sizeFraction = Math.min(((baseSize || 0) / maxSize) * 100, 100);\n    setSizeFraction(sizeFraction);\n  };\n\n  const onSliderChange = (value) => {\n    if (!price && markPrice) {\n      let formattedMarkPrice: number | string = priceDecimalCount\n        ? markPrice.toFixed(priceDecimalCount)\n        : markPrice;\n      setPrice(\n        typeof formattedMarkPrice === 'number'\n          ? formattedMarkPrice\n          : parseFloat(formattedMarkPrice),\n      );\n    }\n\n    let newSize;\n    if (side === 'buy') {\n      if (price || markPrice) {\n        newSize = ((quoteBalance / (price || markPrice || 1)) * value) / 100;\n      }\n    } else {\n      newSize = (baseBalance * value) / 100;\n    }\n\n    // round down to minOrderSize increment\n    let formatted = floorToDecimal(newSize, sizeDecimalCount);\n\n    onSetBaseSize(formatted);\n  };\n\n  const postOnChange: SwitchChangeEventHandler = (checked) => {\n    if (checked) {\n      setIoc(false);\n    }\n    setPostOnly(checked);\n  };\n  const iocOnChange: SwitchChangeEventHandler = (checked) => {\n    if (checked) {\n      setPostOnly(false);\n    }\n    setIoc(checked);\n  };\n\n  async function onSubmit() {\n    if (!price) {\n      console.warn('Missing price');\n      notify({\n        message: 'Missing price',\n        type: 'error',\n      });\n      return;\n    } else if (!baseSize) {\n      console.warn('Missing size');\n      notify({\n        message: 'Missing size',\n        type: 'error',\n      });\n      return;\n    }\n\n    setSubmitting(true);\n    try {\n      if (wallet) {\n      await placeOrder({\n        side,\n        price,\n        size: baseSize,\n        orderType: ioc ? 'ioc' : postOnly ? 'postOnly' : 'limit',\n        market,\n        connection: sendConnection,\n        wallet,\n        baseCurrencyAccount: baseCurrencyAccount?.pubkey,\n        quoteCurrencyAccount: quoteCurrencyAccount?.pubkey,\n        feeDiscountPubkey: feeDiscountKey\n      });\n      refreshCache(tuple('getTokenAccounts', wallet, connected));\n      setPrice(undefined);\n      onSetBaseSize(undefined);\n    } else {\n      throw Error('Error placing order')\n    }\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error placing order',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  // @ts-ignore\n  return (\n    <FloatingElement\n      style={{ display: 'flex', flexDirection: 'column', ...style }}\n    >\n      <div style={{ flex: 1 }}>\n        <Row>\n          <Col\n            span={12}\n            onClick={() => setSide('buy')}\n            style={{\n              height: 42,\n              width: '50%',\n              textAlign: 'center',\n              border: 'transparent',\n              borderBottom: side === 'buy' ? '2px solid #5AC4BE' : '2px solid #1C274F',\n              background: 'transparent',\n              fontSize: 14,\n              fontStyle: 'normal',\n              fontWeight: 600,\n              color: side === 'buy' ? '#F1F1F2' : 'rgba(241, 241, 242, 0.5)',\n              padding: '12px 0 0 0'\n            }}\n          >\n            BUY\n          </Col>\n          <Col\n            span={12}\n            onClick={() => setSide('sell')}\n            style={{\n              height: 42,\n              width: '50%',\n              textAlign: 'center',\n              border: 'transparent',\n              borderBottom: side === 'sell' ? '2px solid #5AC4BE' : '2px solid #1C274F',\n              background: 'transparent',\n              fontSize: 14,\n              fontStyle: 'normal',\n              fontWeight: 600,\n              color: side === 'sell' ? '#F1F1F2' : 'rgba(241, 241, 242, 0.5)',\n              padding: '12px 0 0 0'\n            }}\n          >\n            SELL\n          </Col>\n        </Row>\n        <div\n          style={{\n            padding: '24px 24px 15px',\n          }}\n        >\n          <Select\n            defaultValue=\"Limit Order\"\n            bordered={false}\n            style={{\n              width: '100%',\n              height: 47,\n              left: 0,\n              top: 0,\n              background: '#1C274F',\n              borderRadius: 4,\n              paddingTop: 5,\n              fontSize: 14\n            }}\n          >\n            <Select.Option value=\"Limit Order\">Limit Order</Select.Option>\n            {/* <Select.Option value=\"Market Order\">Market Order</Select.Option> */}\n          </Select>\n          <div style={{ marginTop: 25}}>\n            <div style={{ textAlign: 'right', paddingBottom: 8, fontSize: 12, }}>Limit price</div>\n            <Input\n              type=\"number\"\n              bordered={false}\n              style={{ textAlign: 'right', paddingBottom: 8, height: 47, background: '#1C274F', borderRadius: 4, }}\n              suffix={\n                <span style={{ fontSize: 10, opacity: 0.5 }}>{quoteCurrency}</span>\n              }\n              value={price}\n              step={market?.tickSize || 1}\n              onChange={(e) => setPrice(parseFloat( e.target.value))}\n            />\n          </div>\n\n          <div style={{ marginTop: 25}}>\n            <div style={{ textAlign: 'right', paddingBottom: 8, fontSize: 12, }}>Amount</div>\n            <Input\n              type=\"number\"\n              bordered={false}\n              style={{ textAlign: 'right', paddingBottom: 8, height: 47, background: '#1C274F', borderRadius: 4, }}\n              suffix={\n                <span style={{ fontSize: 10, opacity: 0.5 }}>{baseCurrency}</span>\n              }\n              value={baseSize}\n              step={market?.tickSize || 1}\n              onChange={(e) => onSetBaseSize(parseFloat( e.target.value))}\n            />\n          </div>\n\n          <div style={{ marginTop: 25}}>\n            <div style={{ textAlign: 'right', paddingBottom: 8, fontSize: 12, }}>Total</div>\n            <Input\n              type=\"number\"\n              bordered={false}\n              style={{ textAlign: 'right', paddingBottom: 8, height: 47, background: '#1C274F', borderRadius: 4, }}\n              suffix={\n                <span style={{ fontSize: 10, opacity: 0.5 }}>{quoteCurrency}</span>\n              }\n              value={quoteSize}\n              step={market?.tickSize || 1}\n              onChange={(e) => onSetQuoteSize(parseFloat( e.target.value))}\n            />\n          </div>\n\n          <Row style={{ paddingTop: 8}}>\n            <Col span={12}>\n              <Slider\n                style={{ width: '80%' }}\n                value={sizeFraction}\n                tipFormatter={(value) => `${value}%`}\n                marks={sliderMarks}\n                onChange={onSliderChange}\n              />\n            </Col>\n            <Col span={6} style={{\n              paddingTop: 10,\n              paddingLeft: 10,\n            }}>\n              <Switch\n                size=\"small\"\n                checked={postOnly}\n                style={{ width: 32}}\n                onChange={postOnChange}\n              />\n                <div style={{ display: 'inline-block', fontSize: 10, color: '#BEBEBE', paddingLeft: 4 }}>POST</div>\n            </Col>\n            <Col span={6} style={{\n              paddingTop: 10,\n              paddingLeft: 10,\n            }}>\n              <Switch\n                size=\"small\"\n                checked={ioc}\n                style={{ width: 32}}\n                onChange={iocOnChange}\n              />\n              <div style={{ display: 'inline-block', fontSize: 10, color: '#BEBEBE', paddingLeft: 4 }}>IOC</div>\n            </Col>\n          </Row>\n\n          <BuyButton\n            disabled={!price || !baseSize}\n            onClick={onSubmit}\n            block\n            type=\"primary\"\n            size=\"large\"\n            loading={submitting}\n            style={{\n              marginTop: 20,\n              height: 41,\n              background: 'rgba(90, 196, 190, 0.1)',\n              border: '1px solid #5AC4BE',\n              borderRadius: 4,\n            }}\n          >\n            LIMIT {side.toUpperCase()} {baseCurrency}\n          </BuyButton>\n        </div>\n      </div>\n    </FloatingElement>\n  );\n}\n","import { Col, Row } from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useMarket, useRaydiumTrades } from '../utils/markets';\nimport { getDecimalCount } from '../utils/utils';\nimport FloatingElement from './layout/FloatingElement';\nimport { TradeLayout } from '../utils/types';\n\nconst Title = styled.div`\n  color: rgba(255, 255, 255, 1);\n`;\nconst SizeTitle = styled(Row)`\n  padding: 20px 0 14px;\n  color: #434a59;\n`;\n\nexport default function PublicTrades({ smallScreen }) {\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const [trades, loaded] = useRaydiumTrades();\n\n  return (\n    <FloatingElement\n      style={\n        {\n          ...(smallScreen\n            ? { flex: 1 }\n            : {\n              // marginTop: '10px',\n              minHeight: '400px',\n              maxHeight: 'calc(100vh - 700px)',\n            }),\n        }\n      }\n    >\n      <Title\n        style={{\n          color: 'rgba(241, 241, 242, 0.75)',\n          fontSize: 14,\n          borderBottom: '1px solid #1C274F',\n          padding: '12px 0 12px 16px',\n        }}\n      >Recent Market trades</Title>\n      <SizeTitle>\n        <Col span={8} style={{ textAlign: 'left', paddingRight: 20, color: 'rgba(241, 241, 242, 0.5)', fontSize: 12 }}>Price ({quoteCurrency}) </Col>\n        <Col span={8} style={{ textAlign: 'right', paddingRight: 20, color: 'rgba(241, 241, 242, 0.5)', fontSize: 12 }}>\n          Size ({baseCurrency})\n        </Col>\n        <Col span={8} style={{ textAlign: 'right', paddingRight: 20, color: 'rgba(241, 241, 242, 0.5)', fontSize: 12 }}>\n          Time\n        </Col>\n      </SizeTitle>\n      {!!trades && loaded && (\n        <div\n          style={{\n            marginRight: '-10px',\n            paddingRight: '5px',\n            overflowY: 'scroll',\n            // maxHeight: smallScreen\n            //   ? 'calc(100% - 75px)'\n            //   : 'calc(100vh - 800px)',\n            height: 350\n          }}\n        >\n          {trades.map((trade: TradeLayout, i: number) => (\n            <Row key={i} style={{ marginBottom: 4 }}>\n              <Col\n                span={8}\n                style={{\n                  color: trade.side === 'buy' ? '#41C77A' : '#F23B69',\n                  fontSize: 12,\n                }}\n              >\n                {market?.tickSize && !isNaN(trade.price)\n                  ? Number(trade.price).toFixed(\n                      getDecimalCount(market.tickSize),\n                    )\n                  : trade.price}\n              </Col>\n              <Col span={8} style={{ textAlign: 'right', fontSize: 12, }}>\n                {market?.minOrderSize && !isNaN(trade.size)\n                  ? Number(trade.size).toFixed(\n                      getDecimalCount(market.minOrderSize),\n                    )\n                  : trade.size}\n              </Col>\n              <Col span={8} style={{ textAlign: 'right', color: '#434a59', fontSize: 12, }}>\n                {trade.time && new Date(trade.time).toLocaleTimeString()}\n              </Col>\n            </Row>\n          ))}\n        </div>\n      )}\n    </FloatingElement>\n  );\n}\n","import React from 'react';\nimport { Row, Col } from 'antd';\nimport { useFills, useMarket } from '../../utils/markets';\n\nexport default function FillsTable() {\n  const fills = useFills();\n\n  const { quoteCurrency } = useMarket();\n\n  const dataSource = (fills || []).map((fill) => ({\n    ...fill,\n    key: `${fill.orderId}${fill.side}`,\n    liquidity: fill.eventFlags.maker ? 'Maker' : 'Taker',\n  }));\n\n  return (\n    <>\n      <Row>\n        <Col span={24}>\n          <Row\n            style={{\n              fontSize: 14,\n              color: 'rgba(241, 241, 242, 0.5)',\n              paddingBottom: 16,\n            }}\n          >\n            <Col span={4} style={{ textAlign: 'left' }}>\n              Market\n            </Col>\n            <Col span={4} style={{ textAlign: 'right' }}>\n              Side\n            </Col>\n            <Col span={4} style={{ textAlign: 'right' }}>\n              Size\n            </Col>\n            <Col span={4} style={{ textAlign: 'right' }}>\n              Price\n            </Col>\n            <Col span={4} style={{ textAlign: 'right' }}>\n              Liquidity\n            </Col>\n            <Col span={4} style={{ textAlign: 'right' }}>\n              {quoteCurrency ? `Fees (${quoteCurrency})` : 'Fees'}\n            </Col>\n          </Row>\n          <div style={{ height: 350, overflowX: 'hidden' }}>\n            {dataSource.map(\n              ({ marketName, side, size, price, liquidity, feeCost }, i) => (\n                <Row\n                  key={i}\n                  style={{\n                    fontSize: 14,\n                    color: 'rgba(241, 241, 242, 1)',\n                    paddingBottom: 16,\n                  }}\n                >\n                  <Col span={4} style={{ textAlign: 'left' }}>\n                    {marketName}\n                  </Col>\n                  <Col\n                    span={4}\n                    style={{\n                      textAlign: 'right',\n                      color: 'rgba(90, 196, 190, 1)',\n                    }}\n                  >\n                    {side}\n                  </Col>\n                  <Col\n                    span={4}\n                    style={{\n                      textAlign: 'right',\n                      color: 'rgba(90, 196, 190, 1)',\n                    }}\n                  >\n                    {size}\n                  </Col>\n                  <Col span={4} style={{ textAlign: 'right' }}>\n                    {price}\n                  </Col>\n                  <Col span={4} style={{ textAlign: 'right' }}>\n                    {liquidity}\n                  </Col>\n                  <Col span={4} style={{ textAlign: 'right' }}>\n                    {feeCost}\n                  </Col>\n                </Row>\n              ),\n            )}\n          </div>\n          {/*<DataTable*/}\n          {/*  dataSource={dataSource}*/}\n          {/*  columns={columns}*/}\n          {/*  pagination={true}*/}\n          {/*  pageSize={5}*/}\n          {/*  emptyLabel=\"No fills\"*/}\n          {/*/>*/}\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import React from 'react';\nimport {\n  Row,\n  Col,\n  Typography,\n  //  Tag\n} from 'antd';\nimport { useFeeDiscountKeys } from '../../utils/markets';\nimport { TokenInstructions } from '@project-serum/serum';\nimport { percentFormat } from '../../utils/utils';\n\nfunction getFeeRates(feeTier, market) {\n  if (\n    [\n      '77quYg4MGneUdjgXCunt9GgM1usmrxKY31twEy3WHwcS',\n      '5cLrMai1DsLRYc1Nio9qMTicsWtvzjzZfJPXyAoF4t1Z',\n      'EERNEEnBqdGzBS8dd46wwNY5F2kwnaCQ3vsq2fNKGogZ',\n      '8sFf9TW3KzxLiBXcDcjAxqabEsRroo4EiRr3UG1xbJ9m',\n      '2iDSTGhjJEiRxNaLF27CY6daMYPs5hgYrP2REHd5YD62',\n    ].includes(market)\n  ) {\n    return { taker: 0.001, maker: 0 };\n  } else if (feeTier === 1) {\n    return { taker: 0.0039, maker: 0 };\n  } else if (feeTier === 2) {\n    return { taker: 0.0038, maker: 0 };\n  } else if (feeTier === 3) {\n    return { taker: 0.0036, maker: 0 };\n  } else if (feeTier === 4) {\n    return { taker: 0.0034, maker: 0 };\n  } else if (feeTier === 5) {\n    return { taker: 0.0032, maker: 0 };\n  } else if (feeTier === 6) {\n    return { taker: 0.003, maker: 0 };\n  }\n  return { taker: 0.004, maker: 0 };\n}\n\nexport default function FeesTable({ market }) {\n  const [feeAccounts] = useFeeDiscountKeys();\n\n  const dataSource = (feeAccounts || []).map((account, index) => ({\n    ...account,\n    index,\n    key: account.pubkey.toBase58(),\n  }));\n\n  return (\n    <>\n      <Row>\n        <Col span={24}>\n          <Row\n            style={{\n              fontSize: 14,\n              color: 'rgba(241, 241, 242, 0.5)',\n              paddingBottom: 16,\n            }}\n          >\n            <Col span={5} style={{ textAlign: 'left' }}>\n              Fee Tier\n            </Col>\n            <Col span={5} style={{ textAlign: 'left' }}>\n              Taker\n            </Col>\n            <Col span={4} style={{ textAlign: 'left' }}>\n              Maker\n            </Col>\n            <Col span={5} style={{ textAlign: 'left' }}>\n              Balance\n            </Col>\n            <Col span={5} style={{ textAlign: 'left' }}>\n              Mint\n            </Col>\n          </Row>\n          <div style={{ height: 350, overflowX: 'hidden' }}>\n            {dataSource.map(({ mint, balance, pubkey, feeTier }, index) => (\n              <Row\n                key={index}\n                style={{\n                  fontSize: 14,\n                  color: 'rgba(241, 241, 242, 1)',\n                  paddingBottom: 16,\n                }}\n              >\n                <Col span={5} style={{ textAlign: 'left' }}>\n                  <Typography>{feeTier}</Typography>\n                  {/* {index === 0 ? (\n                    <div style={{ marginLeft: 10 }}>\n                      <Tag color={'#41C77A'} style={{ fontWeight: 700 }}>\n                        Selected\n                      </Tag>\n                    </div>\n                  ) : null} */}\n                </Col>\n                <Col span={5} style={{ textAlign: 'left' }}>\n                  {percentFormat.format(\n                    getFeeRates(feeTier, market.marketAddress).taker,\n                  )}\n                </Col>\n                <Col span={4} style={{ textAlign: 'left' }}>\n                  {percentFormat.format(\n                    getFeeRates(feeTier, market.marketAddress).maker,\n                  )}\n                </Col>\n                <Col span={5} style={{ textAlign: 'left' }}>\n                  {balance}\n                </Col>\n                <Col span={5} style={{ textAlign: 'left' }}>\n                  {mint.equals(TokenInstructions.SRM_MINT)\n                    ? 'SRM'\n                    : mint.equals(TokenInstructions.MSRM_MINT)\n                    ? 'MSRM'\n                    : 'UNKNOWN'}\n                </Col>\n\n                <Col span={24} style={{ textAlign: 'left' }}>\n                  Public key: {pubkey.toBase58()}\n                </Col>\n              </Row>\n            ))}\n          </div>\n          {/*<DataTable*/}\n          {/*  dataSource={dataSource}*/}\n          {/*  columns={columns}*/}\n          {/*  pagination={true}*/}\n          {/*  pageSize={5}*/}\n          {/*  emptyLabel=\"No (M)SRM accounts\"*/}\n          {/*/>*/}\n        </Col>\n      </Row>\n      {/*<Row style={{ marginTop: 8 }}>*/}\n      {/*  <Col>*/}\n      {/*    <Typography>*/}\n      {/*      Holding SRM or MSRM makes you eligible for fee discounts:*/}\n      {/*    </Typography>*/}\n      {/*    <FeeScheduleTable />*/}\n      {/*  </Col>*/}\n      {/*</Row>*/}\n    </>\n  );\n}\n","import BalancesTable from './BalancesTable';\nimport OpenOrderTable from './OpenOrderTable';\nimport React, { useState } from 'react';\nimport { Col, Row } from 'antd';\nimport FillsTable from './FillsTable';\nimport FloatingElement from '../layout/FloatingElement';\nimport FeesTable from './FeesTable';\nimport { useOpenOrders, useBalances, useMarket } from '../../utils/markets';\n\nexport default function Index({ smallScreen }) {\n  const { market } = useMarket();\n  const marketAddress = market?.address.toString();\n  const [activeKeyStr, setActiveKeyStr] = useState('orders');\n  if (smallScreen) {\n    return (\n      <FloatingElement style={{ flex: 1, paddingTop: 4 }}>\n        <Row>\n          <Col\n            span={24 / (market && market.supportsSrmFeeDiscounts ? 4 : 3)}\n            onClick={() => setActiveKeyStr('orders')}\n            style={{\n              width: '50%',\n              textAlign: 'center',\n              border: 'transparent',\n              borderBottom:\n                activeKeyStr === 'orders' ? '2px solid #5AC4BE' : '',\n              background: 'transparent',\n              fontSize: 14,\n              fontStyle: 'normal',\n              fontWeight: 600,\n              color:\n                activeKeyStr === 'orders'\n                  ? '#F1F1F2'\n                  : 'rgba(241, 241, 242, 0.5)',\n              padding: '12px 0 12px',\n            }}\n          >\n            Open Orders\n          </Col>\n          <Col\n            span={24 / (market && market.supportsSrmFeeDiscounts ? 4 : 3)}\n            onClick={() => setActiveKeyStr('fills')}\n            style={{\n              width: '50%',\n              textAlign: 'center',\n              border: 'transparent',\n              borderBottom: activeKeyStr === 'fills' ? '2px solid #5AC4BE' : '',\n              background: 'transparent',\n              fontSize: 14,\n              fontStyle: 'normal',\n              fontWeight: 600,\n              color:\n                activeKeyStr === 'fills'\n                  ? '#F1F1F2'\n                  : 'rgba(241, 241, 242, 0.5)',\n              padding: '12px 0 12px',\n            }}\n          >\n            Recent Trade History\n          </Col>\n          <Col\n            span={24 / (market && market.supportsSrmFeeDiscounts ? 4 : 3)}\n            onClick={() => setActiveKeyStr('balances')}\n            style={{\n              width: '50%',\n              textAlign: 'center',\n              border: 'transparent',\n              borderBottom:\n                activeKeyStr === 'balances' ? '2px solid #5AC4BE' : '',\n              background: 'transparent',\n              fontSize: 14,\n              fontStyle: 'normal',\n              fontWeight: 600,\n              color:\n                activeKeyStr === 'balances'\n                  ? '#F1F1F2'\n                  : 'rgba(241, 241, 242, 0.5)',\n              padding: '12px 0 12px',\n            }}\n          >\n            Balances\n          </Col>\n          {market && market.supportsSrmFeeDiscounts ? (\n            <Col\n              span={24 / (market && market.supportsSrmFeeDiscounts ? 4 : 3)}\n              onClick={() => setActiveKeyStr('fees')}\n              style={{\n                width: '50%',\n                textAlign: 'center',\n                border: 'transparent',\n                borderBottom:\n                  activeKeyStr === 'fees' ? '2px solid #5AC4BE' : '',\n                background: 'transparent',\n                fontSize: 14,\n                fontStyle: 'normal',\n                fontWeight: 600,\n                color:\n                  activeKeyStr === 'fees'\n                    ? '#F1F1F2'\n                    : 'rgba(241, 241, 242, 0.5)',\n                padding: '12px 0 12px',\n              }}\n            >\n              Fee Discounts\n            </Col>\n          ) : null}\n        </Row>\n        <div\n          style={{\n            border: '1px solid #1C274F',\n            minHeight: 50,\n            borderBottom: '',\n            padding: 16,\n          }}\n        >\n          {activeKeyStr && activeKeyStr === 'orders' ? <OpenOrdersTab /> : null}\n          {activeKeyStr && activeKeyStr === 'fills' ? <FillsTable /> : null}\n          {activeKeyStr && activeKeyStr === 'balances' ? <BalancesTab /> : null}\n          {activeKeyStr && activeKeyStr === 'fees' ? (\n            <FeesTable market={{ marketAddress }} />\n          ) : null}\n        </div>\n      </FloatingElement>\n    );\n  } else {\n    return (\n      <FloatingElement style={{ flex: 1, paddingTop: 4 }}>\n        <Row>\n          <Col\n            span={24 / (market && market.supportsSrmFeeDiscounts ? 4 : 3)}\n            onClick={() => setActiveKeyStr('orders')}\n            style={{\n              height: 42,\n              width: '50%',\n              textAlign: 'center',\n              border: 'transparent',\n              borderBottom:\n                activeKeyStr === 'orders' ? '2px solid #5AC4BE' : '',\n              background: 'transparent',\n              fontSize: 14,\n              fontStyle: 'normal',\n              fontWeight: 600,\n              color:\n                activeKeyStr === 'orders'\n                  ? '#F1F1F2'\n                  : 'rgba(241, 241, 242, 0.5)',\n              padding: '12px 0 12px',\n            }}\n          >\n            Open Orders\n          </Col>\n          <Col\n            span={24 / (market && market.supportsSrmFeeDiscounts ? 4 : 3)}\n            onClick={() => setActiveKeyStr('fills')}\n            style={{\n              height: 42,\n              width: '50%',\n              textAlign: 'center',\n              border: 'transparent',\n              borderBottom: activeKeyStr === 'fills' ? '2px solid #5AC4BE' : '',\n              background: 'transparent',\n              fontSize: 14,\n              fontStyle: 'normal',\n              fontWeight: 600,\n              color:\n                activeKeyStr === 'fills'\n                  ? '#F1F1F2'\n                  : 'rgba(241, 241, 242, 0.5)',\n              padding: '12px 0 12px',\n            }}\n          >\n            Recent Trade History\n          </Col>\n          <Col\n            span={24 / (market && market.supportsSrmFeeDiscounts ? 4 : 3)}\n            onClick={() => setActiveKeyStr('balances')}\n            style={{\n              height: 42,\n              width: '50%',\n              textAlign: 'center',\n              border: 'transparent',\n              borderBottom:\n                activeKeyStr === 'balances' ? '2px solid #5AC4BE' : '',\n              background: 'transparent',\n              fontSize: 14,\n              fontStyle: 'normal',\n              fontWeight: 600,\n              color:\n                activeKeyStr === 'balances'\n                  ? '#F1F1F2'\n                  : 'rgba(241, 241, 242, 0.5)',\n              padding: '12px 0 12px',\n            }}\n          >\n            Balances\n          </Col>\n          {market && market.supportsSrmFeeDiscounts ? (\n            <Col\n              span={24 / (market && market.supportsSrmFeeDiscounts ? 4 : 3)}\n              onClick={() => setActiveKeyStr('fees')}\n              style={{\n                height: 42,\n                width: '50%',\n                textAlign: 'center',\n                border: 'transparent',\n                borderBottom:\n                  activeKeyStr === 'fees' ? '2px solid #5AC4BE' : '',\n                background: 'transparent',\n                fontSize: 14,\n                fontStyle: 'normal',\n                fontWeight: 600,\n                color:\n                  activeKeyStr === 'fees'\n                    ? '#F1F1F2'\n                    : 'rgba(241, 241, 242, 0.5)',\n                padding: '12px 0 12px',\n              }}\n            >\n              Fee Discounts\n            </Col>\n          ) : null}\n        </Row>\n        <div\n          style={{\n            border: '1px solid #1C274F',\n            height: 400,\n            borderBottom: '',\n            padding: 16,\n          }}\n        >\n          {activeKeyStr && activeKeyStr === 'orders' ? <OpenOrdersTab /> : null}\n          {activeKeyStr && activeKeyStr === 'fills' ? <FillsTable /> : null}\n          {activeKeyStr && activeKeyStr === 'balances' ? <BalancesTab /> : null}\n          {activeKeyStr && activeKeyStr === 'fees' ? (\n            <FeesTable market={{ marketAddress }} />\n          ) : null}\n        </div>\n      </FloatingElement>\n    );\n  }\n}\n\nconst OpenOrdersTab = () => {\n  const openOrders = useOpenOrders();\n\n  return <OpenOrderTable openOrders={openOrders} />;\n};\n\nconst BalancesTab = () => {\n  const balances = useBalances();\n\n  return <BalancesTable balances={balances} />;\n};\n","import { Button, Col, Popover, Row, Select, Typography } from 'antd';\nimport {\n  DeleteOutlined,\n  InfoCircleOutlined,\n  PlusCircleOutlined,\n} from '@ant-design/icons';\nimport {\n  MarketProvider,\n  getMarketInfos,\n  getTradePageUrl,\n  useMarket,\n  useMarketsList,\n  useUnmigratedDeprecatedMarkets,\n} from '../utils/markets';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport CustomMarketDialog from '../components/CustomMarketDialog';\nimport DeprecatedMarketsInstructions from '../components/DeprecatedMarketsInstructions';\nimport LinkAddress from '../components/LinkAddress';\nimport { MarketInfo } from '../utils/types';\nimport Orderbook from '../components/Orderbook';\nimport StandaloneBalancesDisplay from '../components/StandaloneBalancesDisplay';\nimport { TVChartContainer } from '../components/TradingView';\nimport TradeForm from '../components/TradeForm';\nimport TradesTable from '../components/TradesTable';\nimport UserInfoTable from '../components/UserInfoTable';\nimport { notify } from '../utils/notifications';\nimport styled from 'styled-components';\nimport { nanoid } from 'nanoid';\n\nconst { Option, OptGroup } = Select;\n\nconst Wrapper = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 16px 16px;\n  .borderNone .ant-select-selector {\n    border: none !important;\n  }\n`;\n\nexport default function TradePage() {\n  const { marketAddress } = useParams();\n  useEffect(() => {\n    if (marketAddress) {\n      localStorage.setItem('marketAddress', JSON.stringify(marketAddress));\n    }\n  }, [marketAddress]);\n  const history = useHistory();\n  function setMarketAddress(address) {\n    history.push(getTradePageUrl(address));\n  }\n\n  return (\n    <MarketProvider\n      marketAddress={marketAddress}\n      setMarketAddress={setMarketAddress}\n    >\n      <TradePageInner />\n    </MarketProvider>\n  );\n}\n\nfunction TradePageInner() {\n  const {\n    market,\n    marketName,\n    customMarkets,\n    setCustomMarkets,\n    setMarketAddress,\n  } = useMarket();\n  // const markets = useMarketsList();\n  const [handleDeprecated, setHandleDeprecated] = useState(false);\n  const [addMarketVisible, setAddMarketVisible] = useState(false);\n  const deprecatedMarkets = useUnmigratedDeprecatedMarkets();\n  // const [dimensions, setDimensions] = useState({\n  const [dimensions] = useState({\n    height: window.innerHeight,\n    width: window.innerWidth,\n  });\n\n  useEffect(() => {\n    document.title = marketName ? `${marketName} - trade` : 'trade';\n  }, [marketName]);\n\n  const changeOrderRef =\n    useRef<({ size, price }: { size?: number; price?: number }) => void>();\n\n  // useEffect(() => {\n  //   const handleResize = () => {\n  //     setDimensions({\n  //       height: window.innerHeight,\n  //       width: window.innerWidth,\n  //     });\n  //   };\n\n  //   window.addEventListener('resize', handleResize);\n  //   return () => window.removeEventListener('resize', handleResize);\n  // }, []);\n\n  const width = dimensions?.width;\n\n  const componentProps = {\n    onChangeOrderRef: (ref) => (changeOrderRef.current = ref),\n    onPrice: useCallback(\n      (price) => changeOrderRef.current && changeOrderRef.current({ price }),\n      [],\n    ),\n    onSize: useCallback(\n      (size) => changeOrderRef.current && changeOrderRef.current({ size }),\n      [],\n    ),\n  };\n  const component = (() => {\n    if (handleDeprecated) {\n      return (\n        <DeprecatedMarketsPage\n          switchToLiveMarkets={() => setHandleDeprecated(false)}\n        />\n      );\n    } else if (width < 1000) {\n      return <RenderSmaller {...componentProps} />;\n    } else {\n      return <RenderNormal {...componentProps} />;\n    }\n  })();\n\n  const onAddCustomMarket = (customMarket) => {\n    const marketInfo = getMarketInfos(customMarkets).some(\n      (m) => m.address.toBase58() === customMarket.address,\n    );\n    if (marketInfo) {\n      notify({\n        message: `A market with the given ID already exists`,\n        type: 'error',\n      });\n      return;\n    }\n    const newCustomMarkets = [...customMarkets, customMarket];\n    setCustomMarkets(newCustomMarkets);\n    setMarketAddress(customMarket.address);\n  };\n\n  const onDeleteCustomMarket = (address) => {\n    const newCustomMarkets = customMarkets.filter((m) => m.address !== address);\n    setCustomMarkets(newCustomMarkets);\n  };\n  // const [newMarKets] = useState(markets);\n\n  return (\n    <>\n      <CustomMarketDialog\n        visible={addMarketVisible}\n        onClose={() => setAddMarketVisible(false)}\n        onAddCustomMarket={onAddCustomMarket}\n      />\n      <Wrapper>\n        <Row\n          align=\"middle\"\n          style={{ paddingLeft: 5, paddingRight: 5, height: 64 }}\n          gutter={16}\n        >\n          <Col>\n            <MarketSelector\n              markets={useMarketsList()}\n              setHandleDeprecated={setHandleDeprecated}\n              placeholder={'Select market'}\n              customMarkets={customMarkets}\n              onDeleteCustomMarket={onDeleteCustomMarket}\n            />\n          </Col>\n          {market ? (\n            <Col>\n              <Popover\n                content={<LinkAddress address={market.publicKey.toBase58()} />}\n                placement=\"bottomRight\"\n                title=\"Market address\"\n                trigger=\"click\"\n              >\n                <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n              </Popover>\n            </Col>\n          ) : null}\n          <Col>\n            <PlusCircleOutlined\n              style={{ color: '#2abdd2' }}\n              onClick={() => setAddMarketVisible(true)}\n            />\n          </Col>\n          {deprecatedMarkets && deprecatedMarkets.length > 0 && (\n            <React.Fragment>\n              <Col>\n                <Typography>\n                  You have unsettled funds on old markets! Please go through\n                  them to claim your funds.\n                </Typography>\n              </Col>\n              <Col>\n                <Button onClick={() => setHandleDeprecated(!handleDeprecated)}>\n                  {handleDeprecated ? 'View new markets' : 'Handle old markets'}\n                </Button>\n              </Col>\n            </React.Fragment>\n          )}\n        </Row>\n        {component}\n      </Wrapper>\n    </>\n  );\n}\n\nfunction MarketSelector({\n  markets,\n  placeholder,\n  setHandleDeprecated,\n  customMarkets,\n  onDeleteCustomMarket,\n}) {\n  const { market, setMarketAddress } = useMarket();\n\n  const onSetMarketAddress = (marketAddress) => {\n    setHandleDeprecated(false);\n    setMarketAddress(marketAddress);\n  };\n\n  const selectedMarket = getMarketInfos(customMarkets)\n    .find(\n      (proposedMarket) =>\n        market?.address && proposedMarket.address.equals(market.address),\n    )\n    ?.address?.toBase58();\n\n  const uniqueArray = (arr) => {\n    let addList: string[] = [];\n    let reList: MarketInfo[] = [];\n    for (let index = 0; index < arr.length; index += 1) {\n      if (addList.indexOf(arr[index].address.toBase58()) === -1) {\n        reList.push(arr[index]);\n        addList.push(arr[index].address.toBase58());\n      }\n    }\n    return reList;\n  };\n\n  return (\n    <Select\n      showSearch\n      size={'large'}\n      bordered={false}\n      style={{ width: 360, border: 1 }}\n      placeholder={placeholder || 'Select a market'}\n      optionFilterProp=\"name\"\n      onSelect={onSetMarketAddress}\n      listHeight={400}\n      value={selectedMarket}\n      filterOption={(input, option) =>\n        option?.name?.toLowerCase().indexOf(input.toLowerCase()) >= 0\n      }\n    >\n      {customMarkets && customMarkets.length > 0 && (\n        <OptGroup label=\"Custom\">\n          {customMarkets.map(({ address, name }, i) => (\n            <Option\n              value={address}\n              key={nanoid()}\n              name={name}\n              style={{\n                padding: '10px',\n                // @ts-ignore\n                backgroundColor: i % 2 === 0 ? 'rgb(39, 44, 61)' : null,\n              }}\n            >\n              <Row>\n                <Col flex=\"auto\">{name}</Col>\n                {selectedMarket !== address && (\n                  <Col>\n                    <DeleteOutlined\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        e.nativeEvent.stopImmediatePropagation();\n                        onDeleteCustomMarket && onDeleteCustomMarket(address);\n                      }}\n                    />\n                  </Col>\n                )}\n              </Row>\n            </Option>\n          ))}\n        </OptGroup>\n      )}\n      <OptGroup label=\"Markets\">\n        {uniqueArray(markets).map(({ address, name, deprecated }, i) => (\n          <Option\n            value={address.toBase58()}\n            key={nanoid()}\n            name={name}\n            style={{\n              padding: '10px',\n              // @ts-ignore\n              backgroundColor: i % 2 === 0 ? 'rgb(39, 44, 61)' : null,\n            }}\n          >\n            {name} {deprecated ? ' (Deprecated)' : null}\n          </Option>\n        ))}\n      </OptGroup>\n    </Select>\n  );\n}\n\nconst DeprecatedMarketsPage = ({ switchToLiveMarkets }) => {\n  return (\n    <>\n      <Row>\n        <Col flex=\"auto\">\n          <DeprecatedMarketsInstructions\n            switchToLiveMarkets={switchToLiveMarkets}\n          />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nconst RenderNormal = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <Row\n      style={{\n        minHeight: '900px',\n        flexWrap: 'nowrap',\n      }}\n    >\n      <Col\n        flex=\"15%\"\n        style={{\n          height: '100%',\n          display: 'flex',\n          flexDirection: 'column',\n          minWidth: '280px',\n        }}\n      >\n        <TradeForm setChangeOrderRef={onChangeOrderRef} />\n        <StandaloneBalancesDisplay />\n      </Col>\n\n      <Col\n        flex=\"auto\"\n        style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\n      >\n        <TVChartContainer />\n        <UserInfoTable smallScreen={false} />\n      </Col>\n\n      <Col flex=\"15%\" style={{ height: '100%', minWidth: '280px' }}>\n        <Orderbook smallScreen={false} onPrice={onPrice} onSize={onSize} />\n        <TradesTable smallScreen={false} />\n      </Col>\n    </Row>\n  );\n};\n\nconst RenderSmaller = ({ onChangeOrderRef, onPrice, onSize }) => {\n  return (\n    <>\n      <Row>\n        <Col span={24}>\n          <TVChartContainer />\n        </Col>\n\n        <Col span={16}>\n          <TradeForm setChangeOrderRef={onChangeOrderRef} />\n        </Col>\n        <Col span={8}>\n          <Orderbook smallScreen={true} onPrice={onPrice} onSize={onSize} />\n        </Col>\n\n        <Col span={24}>\n          <UserInfoTable smallScreen={true} />\n        </Col>\n\n        <Col xs={24} sm={12}>\n          <StandaloneBalancesDisplay />\n        </Col>\n        <Col xs={24} sm={12}>\n          <TradesTable smallScreen={false} />\n        </Col>\n      </Row>\n    </>\n  );\n};\n","import React from 'react';\nimport { Dropdown, Menu } from 'antd';\nimport { useWallet } from '../utils/wallet';\nimport LinkAddress from './LinkAddress';\n\nexport default function WalletConnect() {\n  const { connected, wallet, select, connect, disconnect } = useWallet();\n  const publicKey = (connected && wallet?.publicKey?.toBase58()) || '';\n\n  const menu = (\n    <Menu>\n      {connected && <LinkAddress shorten={true} address={publicKey} />}\n      <Menu.Item key=\"3\" onClick={select}>\n        Change Wallet\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <Dropdown.Button onClick={connected ? disconnect : connect} overlay={menu}>\n      {connected ? 'Disconnect' : 'Connect'}\n    </Dropdown.Button>\n  );\n}\n","import React from 'react';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport {\n  useAllMarkets,\n  useAllOpenOrders,\n  useMarketInfos,\n} from '../utils/markets';\nimport OpenOrderTable from '../components/UserInfoTable/OpenOrderTable';\nimport { Button, Row } from 'antd';\nimport { OrderWithMarketAndMarketName } from '../utils/types';\nimport { useWallet } from '../utils/wallet';\nimport WalletConnect from '../components/WalletConnect';\n\nexport default function OpenOrdersPage() {\n  const { connected } = useWallet();\n  const { openOrders, loaded, refreshOpenOrders } = useAllOpenOrders();\n  let marketInfos = useMarketInfos();\n  let marketAddressesToNames = Object.fromEntries(\n    marketInfos.map((info) => [info.address.toBase58(), info.name]),\n  );\n  let [allMarkets] = useAllMarkets();\n  const marketsByAddress = Object.fromEntries(\n    (allMarkets || []).map((marketInfo) => [\n      marketInfo.market.address.toBase58(),\n      marketInfo.market,\n    ]),\n  );\n\n  const dataSource: OrderWithMarketAndMarketName[] = (openOrders || [])\n    .map((orderInfos) =>\n      orderInfos.orders.map((order) => {\n        return {\n          marketName: marketAddressesToNames[orderInfos.marketAddress],\n          market: marketsByAddress[orderInfos.marketAddress],\n          ...order,\n        };\n      }),\n    )\n    .flat();\n\n  if (!connected) {\n    return (\n      <Row\n        justify=\"center\"\n        style={{\n          marginTop: '10%',\n        }}\n      >\n        <WalletConnect />\n      </Row>\n    );\n  }\n\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      <Button onClick={refreshOpenOrders} loading={!loaded}>\n        Refresh\n      </Button>\n      <OpenOrderTable\n        openOrders={dataSource}\n        pageSize={25}\n        loading={!loaded}\n        onCancelSuccess={refreshOpenOrders}\n        marketFilter\n      />\n    </FloatingElement>\n  );\n}\n","import React from 'react';\nimport { ConfigProvider, Table } from 'antd';\n\nexport default function DataTable({\n  dataSource,\n  columns,\n  emptyLabel = 'No data',\n  pagination = false,\n  loading = false,\n  pageSize = 10,\n}) {\n  const customizeRenderEmpty = () => (\n    <div\n      style={{\n        padding: '20px',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      {emptyLabel}\n    </div>\n  );\n\n  return (\n    <ConfigProvider renderEmpty={customizeRenderEmpty}>\n      <Table\n        dataSource={dataSource}\n        columns={columns}\n        pagination={pagination ? { pagination: true, pageSize } : false}\n        loading={loading}\n      />\n    </ConfigProvider>\n  );\n}\n","import React, { useState } from 'react';\nimport DataTable from '../layout/DataTable';\nimport { Button, Row } from 'antd';\nimport { settleAllFunds } from '../../utils/send';\nimport { notify } from '../../utils/notifications';\nimport { useConnection } from '../../utils/connection';\nimport { useWallet } from '../../utils/wallet';\nimport {\n  useAllMarkets,\n  useSelectedTokenAccounts,\n  useTokenAccounts,\n} from '../../utils/markets';\nimport StandaloneTokenAccountsSelect from '../StandaloneTokenAccountSelect';\nimport { abbreviateAddress } from '../../utils/utils';\nimport { PublicKey } from '@solana/web3.js';\n\nexport default function WalletBalancesTable({\n  walletBalances,\n}: {\n  walletBalances: {\n    coin: string;\n    mint: string;\n    walletBalance: number;\n    openOrdersFree: number;\n    openOrdersTotal: number;\n  }[];\n}) {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\n  const [tokenAccounts, tokenAccountsConnected] = useTokenAccounts();\n  const [allMarkets, allMarketsConnected] = useAllMarkets();\n  const [settlingFunds, setSettlingFunds] = useState(false);\n\n  async function onSettleFunds() {\n    setSettlingFunds(true);\n    try {\n      if (!wallet) {\n        notify({\n          message: 'Wallet not connected',\n          description: 'Wallet not connected',\n          type: 'error',\n        });\n        return;\n      }\n      \n      if (!tokenAccounts || !tokenAccountsConnected) {\n        notify({\n          message: 'Error settling funds',\n          description: 'TokenAccounts not connected',\n          type: 'error',\n        });\n        return;\n      }\n      if (!allMarkets || !allMarketsConnected) {\n        notify({\n          message: 'Error settling funds',\n          description: 'Markets not connected',\n          type: 'error',\n        });\n        return;\n      }\n      await settleAllFunds({\n        connection,\n        tokenAccounts,\n        selectedTokenAccounts,\n        wallet,\n        markets: allMarkets.map((marketInfo) => marketInfo.market),\n      });\n    } catch (e) {\n      notify({\n        message: 'Error settling funds',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSettlingFunds(false);\n    }\n  }\n\n  const columns = [\n    {\n      title: 'Coin',\n      key: 'coin',\n      width: '20%',\n      render: (walletBalance) => (\n        <Row align=\"middle\">\n          <a\n            href={`https://solscan.io/address/${walletBalance.mint}`}\n            target={'_blank'}\n            rel=\"noopener noreferrer\"\n          >\n            {walletBalance.coin ||\n              abbreviateAddress(new PublicKey(walletBalance.mint))}\n          </a>\n        </Row>\n      ),\n    },\n    {\n      title: 'Wallet Balance',\n      dataIndex: 'walletBalance',\n      key: 'walletBalance',\n      width: '20%',\n    },\n    {\n      title: 'Open orders total balances',\n      dataIndex: 'openOrdersTotal',\n      key: 'openOrdersTotal',\n      width: '20%',\n    },\n    {\n      title: 'Unsettled balances',\n      dataIndex: 'openOrdersFree',\n      key: 'openOrdersFree',\n      width: '20%',\n    },\n    {\n      title: 'Selected token account',\n      key: 'selectTokenAccount',\n      width: '20%',\n      render: (walletBalance) => (\n        <Row align=\"middle\" style={{ width: '430px' }}>\n          <StandaloneTokenAccountsSelect\n            accounts={tokenAccounts?.filter(\n              (t) => t.effectiveMint.toBase58() === walletBalance.mint,\n            )}\n            mint={walletBalance.mint}\n          />\n        </Row>\n      ),\n    },\n  ];\n  return (\n    <React.Fragment>\n      <DataTable\n        emptyLabel=\"No balances\"\n        dataSource={walletBalances}\n        columns={columns}\n        pagination={false}\n      />\n      {connected && (\n        <Button onClick={onSettleFunds} loading={settlingFunds}>\n          Settle all funds\n        </Button>\n      )}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { Tabs } from 'antd';\nimport {\n  useAllOpenOrdersBalances,\n  useWalletBalancesForAllMarkets,\n} from '../utils/markets';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport WalletBalancesTable from '../components/UserInfoTable/WalletBalancesTable';\nimport { useMintToTickers } from '../utils/tokens';\n\nconst { TabPane } = Tabs;\n\nexport default function BalancesPage() {\n  const walletBalances = useWalletBalancesForAllMarkets();\n  const mintToTickers = useMintToTickers();\n  const openOrdersBalances = useAllOpenOrdersBalances();\n\n  const data = (walletBalances || []).map((balance) => {\n    const balances = {\n      coin: mintToTickers[balance.mint],\n      mint: balance.mint,\n      walletBalance: balance.balance,\n      openOrdersFree: 0,\n      openOrdersTotal: 0,\n    };\n    for (let openOrdersAccount of openOrdersBalances[balance.mint] || []) {\n      balances['openOrdersFree'] += openOrdersAccount.free;\n      balances['openOrdersTotal'] += openOrdersAccount.total;\n    }\n    return balances;\n  });\n\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      <Tabs defaultActiveKey=\"walletBalances\">\n        <TabPane tab=\"Wallet Balances\" key=\"walletBalances\">\n          <WalletBalancesTable walletBalances={data} />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Button, Col, Input, Row, Select, Typography } from 'antd';\nimport styled from 'styled-components';\nimport { Orderbook } from '@project-serum/serum';\nimport {\n  getExpectedFillPrice,\n  getMarketDetails,\n  getMarketInfos,\n  getMarketOrderPrice,\n  getSelectedTokenAccountForMint,\n  MarketProvider,\n  useBalances,\n  useCustomMarkets, useLocallyStoredFeeDiscountKey,\n  useMarket,\n  useTokenAccounts,\n} from '../utils/markets';\nimport { notify } from '../utils/notifications';\nimport { useWallet } from '../utils/wallet';\nimport { useConnection, useSendConnection } from '../utils/connection';\nimport { placeOrder } from '../utils/send';\nimport { floorToDecimal, getDecimalCount } from '../utils/utils';\nimport FloatingElement from './layout/FloatingElement';\nimport WalletConnect from './WalletConnect';\nimport { SwapOutlined } from '@ant-design/icons';\nimport { CustomMarketInfo } from '../utils/types';\n// import Wallet from '@project-serum/sol-wallet-adapter';\nimport { WalletAdapter } from '../wallet-adapters';\n\nconst { Option } = Select;\nconst { Title } = Typography;\n\nconst ActionButton = styled(Button)`\n  color: #2abdd2;\n  background-color: #212734;\n  border-width: 0px;\n`;\n\nconst ConvertButton = styled(Button)`\n  background: #02bf76;\n  border-color: #02bf76;\n`;\n\nexport default function ConvertForm() {\n  const { connected, wallet } = useWallet(); \n  const { customMarkets } = useCustomMarkets();\n  const marketInfos = getMarketInfos(customMarkets);\n  const [marketAddress, setMarketAddress] = useState<string | null>(null);\n\n  const [fromToken, setFromToken] = useState<string | undefined>(undefined);\n  const [toToken, setToToken] = useState<string | undefined>(undefined);\n  const [size, setSize] = useState<number | undefined>(undefined);\n\n  const marketInfosbyName = Object.fromEntries(\n    marketInfos.map((market) => [market.name, market]),\n  );\n\n  const tokenConvertMap: Map<string, Set<string>> = new Map();\n  Object.keys(marketInfosbyName).forEach((market) => {\n    let [base, quote] = market.split('/');\n    !tokenConvertMap.has(base)\n      ? tokenConvertMap.set(base, new Set([quote]))\n      : tokenConvertMap.set(\n          base,\n          new Set([...(tokenConvertMap.get(base) || []), quote]),\n        );\n    !tokenConvertMap.has(quote)\n      ? tokenConvertMap.set(quote, new Set([base]))\n      : tokenConvertMap.set(\n          quote,\n          new Set([...(tokenConvertMap.get(quote) || []), base]),\n        );\n  });\n\n  const setMarket = (toToken) => {\n    const marketInfo = marketInfos\n      .filter((marketInfo) => !marketInfo.deprecated)\n      .find(\n        (marketInfo) =>\n          marketInfo.name === `${fromToken}/${toToken}` ||\n          marketInfo.name === `${toToken}/${fromToken}`,\n      );\n    if (!marketInfo) {\n      console.warn(\n        `Could not find market info for market names ${fromToken}/${toToken} or ${toToken}/${fromToken}`,\n      );\n      notify({\n        message: 'Invalid market',\n        type: 'error',\n      });\n      return;\n    }\n    setMarketAddress(marketInfo.address.toBase58());\n    setToToken(toToken);\n  };\n\n  return (\n    <FloatingElement style={{ maxWidth: 500 }}>\n      <Title level={3}>Convert</Title>\n      {!connected && (\n        <Row justify=\"center\">\n          <Col>\n            <WalletConnect />\n          </Col>\n        </Row>\n      )}\n      {tokenConvertMap && connected && (\n        <>\n          <Row style={{ marginBottom: 8 }}>\n            <Col>\n              <Select\n                style={{ minWidth: 300 }}\n                placeholder=\"Select a token\"\n                value={fromToken}\n                onChange={(token) => {\n                  setFromToken(token);\n                  setToToken(undefined);\n                }}\n              >\n                {Array.from(tokenConvertMap.keys()).map((token) => (\n                  <Option value={token} key={token}>\n                    {token}\n                  </Option>\n                ))}\n              </Select>\n            </Col>\n          </Row>\n          {fromToken && (\n            <Row style={{ marginBottom: 8 }}>\n              <Col>\n                <Select\n                  style={{ minWidth: 300 }}\n                  value={toToken}\n                  onChange={setMarket}\n                >\n                  {[...(tokenConvertMap.get(fromToken) || [])].map((token) => (\n                    <Option value={token} key={token}>\n                      {token}\n                    </Option>\n                  ))}\n                </Select>\n              </Col>\n            </Row>\n          )}\n          {fromToken && toToken && (\n            <MarketProvider\n              marketAddress={marketAddress}\n              setMarketAddress={setMarketAddress}\n            >\n              <ConvertFormSubmit\n                size={size}\n                setSize={setSize}\n                fromToken={fromToken}\n                toToken={toToken}\n                wallet={wallet}\n                customMarkets={customMarkets}\n              />\n            </MarketProvider>\n          )}\n        </>\n      )}\n    </FloatingElement>\n  );\n}\n\nfunction ConvertFormSubmit({\n  size,\n  setSize,\n  fromToken,\n  toToken,\n  wallet,\n  customMarkets,\n}: {\n  size: number | null | undefined;\n  setSize: (newSize: number | undefined) => void;\n  fromToken: string;\n  toToken: string;\n  wallet?: WalletAdapter;\n  customMarkets: CustomMarketInfo[];\n}) {\n  const { market } = useMarket();\n  const [accounts] = useTokenAccounts();\n  const balances = useBalances();\n  const [fromAmount, setFromAmount] = useState<number | undefined>();\n  const [toAmount, setToAmount] = useState<number | undefined>();\n  const { storedFeeDiscountKey: feeDiscountKey } = useLocallyStoredFeeDiscountKey();\n\n  const connection = useConnection();\n  const sendConnection = useSendConnection();\n\n  const [isConverting, setIsConverting] = useState(false);\n\n  const isFromTokenBaseOfMarket = (market) => {\n    const { marketName } = getMarketDetails(market, customMarkets);\n    if (!marketName) {\n      throw Error(\n        'Cannot determine if coin is quote or base because marketName is missing',\n      );\n    }\n    const [base] = marketName.split('/');\n    return fromToken === base;\n  };\n\n  const onConvert = async () => {\n    if (!market) {\n      console.warn('Market is null when attempting convert.');\n      notify({\n        message: 'Invalid market',\n        type: 'error',\n      });\n      return;\n    }\n    // get accounts\n    const baseCurrencyAccount = getSelectedTokenAccountForMint(\n      accounts,\n      market?.baseMintAddress,\n    );\n    const quoteCurrencyAccount = getSelectedTokenAccountForMint(\n      accounts,\n      market?.quoteMintAddress,\n    );\n\n    // get approximate price\n    let side;\n    try {\n      side = isFromTokenBaseOfMarket(market) ? 'sell' : 'buy';\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error placing order',\n        description: e.message,\n        type: 'error',\n      });\n      return;\n    }\n\n    const sidedOrderbookAccount =\n      // @ts-ignore\n      side === 'buy' ? market._decoded.asks : market._decoded.bids;\n    const orderbookData = await connection.getAccountInfo(\n      sidedOrderbookAccount,\n    );\n    if (!orderbookData?.data) {\n      notify({ message: 'Invalid orderbook data', type: 'error' });\n      return;\n    }\n    const decodedOrderbookData = Orderbook.decode(market, orderbookData.data);\n    const [bbo] =\n      decodedOrderbookData &&\n      decodedOrderbookData.getL2(1).map(([price]) => price);\n    if (!bbo) {\n      notify({ message: 'No best price found', type: 'error' });\n      return;\n    }\n    if (!size) {\n      notify({ message: 'Size not specified', type: 'error' });\n      return;\n    }\n\n    const tickSizeDecimals = getDecimalCount(market.tickSize);\n    const parsedPrice = getMarketOrderPrice(\n      decodedOrderbookData,\n      size,\n      tickSizeDecimals,\n    );\n\n    // round size\n    const sizeDecimalCount = getDecimalCount(market.minOrderSize);\n    const nativeSize = side === 'sell' ? size : size / parsedPrice;\n    const parsedSize = floorToDecimal(nativeSize, sizeDecimalCount);\n\n    setIsConverting(true);\n    try {\n      if (!wallet) {\n        return null;\n      }\n\n      await placeOrder({\n        side,\n        price: parsedPrice,\n        size: parsedSize,\n        orderType: 'ioc',\n        market,\n        connection: sendConnection,\n        wallet,\n        baseCurrencyAccount: baseCurrencyAccount?.pubkey,\n        quoteCurrencyAccount: quoteCurrencyAccount?.pubkey,\n        feeDiscountPubkey: feeDiscountKey,\n      });\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error placing order',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setIsConverting(false);\n    }\n  };\n\n  const getPrice = async () => {\n    try {\n      const side = isFromTokenBaseOfMarket(market) ? 'sell' : 'buy';\n      const sidedOrderbookAccount =\n        // @ts-ignore\n        side === 'buy' ? market._decoded.asks : market._decoded.bids;\n      const orderbookData = await connection.getAccountInfo(\n        sidedOrderbookAccount,\n      );\n      if (!orderbookData?.data || !market) {\n        return [null, null];\n      }\n      const decodedOrderbookData = Orderbook.decode(market, orderbookData.data);\n      const [bbo] =\n        decodedOrderbookData &&\n        decodedOrderbookData.getL2(1).map(([price]) => price);\n      if (!bbo || !size) {\n        return [null, null];\n      }\n      const tickSizeDecimals = getDecimalCount(market.tickSize);\n      const expectedPrice = getExpectedFillPrice(\n        decodedOrderbookData,\n        size,\n        tickSizeDecimals,\n      );\n      if (side === 'buy') {\n        return [expectedPrice.toFixed(6), 1];\n      } else {\n        return [1, expectedPrice.toFixed(6)];\n      }\n    } catch (e) {\n      console.log(`Got error ${e}`);\n      return [null, null];\n    }\n  };\n\n  useEffect(\n    () => {\n      getPrice().then(([fromAmount, toAmount]) => {\n        setFromAmount(fromAmount || undefined);\n        setToAmount(toAmount || undefined);\n      });\n    },\n    // eslint-disable-next-line\n    [market?.address.toBase58(), size],\n  );\n\n  const canConvert = market && size && size > 0;\n  const balance = balances.find(\n    (coinBalance) => coinBalance.coin === fromToken,\n  );\n  const availableBalance =\n    ((balance?.unsettled || 0) + (balance?.wallet || 0)) * 0.99;\n\n  return (\n    <React.Fragment>\n      <Row style={{ marginBottom: 8 }}>\n        <Col>\n          <Input\n            style={{ minWidth: 300 }}\n            addonBefore={`Size (${fromToken})`}\n            placeholder=\"Size\"\n            value={size === null ? undefined : size}\n            type=\"number\"\n            onChange={(e) => setSize(parseFloat(e.target.value) || undefined)}\n          />\n        </Col>\n      </Row>\n      <Row gutter={12} style={{ marginBottom: 8 }}>\n        <Col span={12}>\n          <ActionButton\n            block\n            size=\"large\"\n            onClick={() => setSize(floorToDecimal(availableBalance, 4))}\n          >\n            Max: {availableBalance.toFixed(4)}\n          </ActionButton>\n        </Col>\n        <Col span={12}>\n          <ConvertButton\n            block\n            type=\"primary\"\n            size=\"large\"\n            loading={isConverting}\n            onClick={onConvert}\n            disabled={!canConvert}\n          >\n            Convert\n          </ConvertButton>\n        </Col>\n      </Row>\n      {canConvert && (\n        <Row align=\"middle\" justify=\"center\">\n          <Col>\n            {fromAmount} {fromToken}\n          </Col>\n          <Col offset={1}>\n            <SwapOutlined />\n          </Col>\n          <Col offset={1}>\n            {toAmount} {toToken}\n          </Col>\n        </Row>\n      )}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport ConvertForm from '../components/ConvertForm';\nimport { Row, Col } from 'antd';\nimport { DEFAULT_MARKET, MarketProvider } from '../utils/markets';\nimport { useLocalStorageState } from '../utils/utils';\n\nconst Wrapper = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 16px 16px;\n  .borderNone .ant-select-selector {\n    border: none !important;\n  }\n`;\n\nexport default function ConvertPage() {\n  const [marketAddress, setMarketAddress] = useLocalStorageState(\n    'marketAddress',\n    DEFAULT_MARKET?.address.toBase58(),\n  );\n  return (\n    <Wrapper style={{ flex: 1, paddingTop: 10 }}>\n      <Row justify=\"center\">\n        <Col>\n          <MarketProvider\n            marketAddress={marketAddress}\n            setMarketAddress={setMarketAddress}\n          >\n            <ConvertForm />\n          </MarketProvider>\n        </Col>\n      </Row>\n    </Wrapper>\n  );\n}\n","import React, { useState } from 'react';\nimport { Col, Input, Modal, Row } from 'antd';\nimport { EndpointInfo } from '../utils/types';\n\nexport default function CustomClusterEndpointDialog({\n  visible,\n  testingConnection,\n  onAddCustomEndpoint,\n  onClose,\n}: {\n  visible: boolean;\n  testingConnection: boolean;\n  onAddCustomEndpoint: (info: EndpointInfo) => void;\n  onClose?: () => void;\n}) {\n  const [customEndpoint, setCustomEndpoint] = useState('');\n  const [customEndpointName, setCustomEndpointName] = useState('');\n\n  const onSubmit = () => {\n    const fullEndpoint = 'https://' + customEndpoint;\n    const params = {\n      name: customEndpointName,\n      endpoint: fullEndpoint,\n      custom: true,\n    };\n    onAddCustomEndpoint(params);\n    onDoClose();\n  };\n  const onDoClose = () => {\n    setCustomEndpoint('');\n    setCustomEndpointName('');\n    onClose && onClose();\n  };\n  const canSubmit = customEndpoint !== '' && customEndpointName !== '';\n\n  return (\n    <Modal\n      title={'Add custom endpoint'}\n      visible={visible}\n      onOk={onSubmit}\n      okText={'Add'}\n      onCancel={onDoClose}\n      okButtonProps={{ disabled: !canSubmit, loading: testingConnection }}\n    >\n      <Row style={{ marginBottom: 8 }}>\n        <Col span={24}>\n          <Input\n            placeholder=\"Cluster Name\"\n            value={customEndpointName}\n            onChange={(e) => setCustomEndpointName(e.target.value)}\n          />\n        </Col>\n      </Row>\n      <Row style={{ marginBottom: 8 }}>\n        <Col span={24}>\n          <Input\n            placeholder=\"Cluster Endpoint\"\n            value={customEndpoint}\n            addonBefore={'https://'}\n            onChange={(e) => setCustomEndpoint(e.target.value)}\n          />\n        </Col>\n      </Row>\n    </Modal>\n  );\n}\n","import { Col, Row, Menu } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport logo from '../assets/logo.svg';\nimport styled from 'styled-components';\nimport { ENDPOINTS, useConnectionConfig } from '../utils/connection';\nimport CustomClusterEndpointDialog from './CustomClusterEndpointDialog';\nimport { EndpointInfo } from '../utils/types';\nimport { notify } from '../utils/notifications';\nimport { Connection } from '@solana/web3.js';\nimport WalletConnect from './WalletConnect';\nimport { getTradePageUrl } from '../utils/markets';\n\nconst Wrapper = styled.div`\n  // flex-direction: row;\n  // justify-content: flex-end;\n  // flex-wrap: wrap;\n`;\nconst LogoWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  color: #2abdd2;\n  font-weight: bold;\n  cursor: pointer;\n  img {\n    height: 30px;\n    margin-right: 8px;\n  }\n`;\n\nconst MENU = [\n  {\n    title: 'Trading',\n    link: '/',\n    child: undefined,\n  },\n];\n\nexport default function TopBar() {\n  const { endpointInfo, setEndpoint, availableEndpoints, setCustomEndpoints } =\n    useConnectionConfig();\n  const [addEndpointVisible, setAddEndpointVisible] = useState(false);\n  const [testingConnection, setTestingConnection] = useState(false);\n  const location = useLocation();\n  const history = useHistory();\n\n  const onAddCustomEndpoint = (info: EndpointInfo) => {\n    const existingEndpoint = availableEndpoints.some(\n      (e) => e.endpoint === info.endpoint,\n    );\n    if (existingEndpoint) {\n      notify({\n        message: `An endpoint with the given url already exists`,\n        type: 'error',\n      });\n      return;\n    }\n\n    const handleError = (e) => {\n      console.log(`Connection to ${info.endpoint} failed: ${e}`);\n      notify({\n        message: `Failed to connect to ${info.endpoint}`,\n        type: 'error',\n      });\n    };\n\n    try {\n      const connection = new Connection(info.endpoint, 'recent');\n      connection\n        .getEpochInfo()\n        .then((result) => {\n          setTestingConnection(true);\n          console.log(`testing connection to ${info.endpoint}`);\n          const newCustomEndpoints = [\n            ...availableEndpoints.filter((e) => e.custom),\n            info,\n          ];\n          setEndpoint(info.endpoint);\n          setCustomEndpoints(newCustomEndpoints);\n        })\n        .catch(handleError);\n    } catch (e) {\n      handleError(e);\n    } finally {\n      setTestingConnection(false);\n    }\n  };\n\n  const endpointInfoCustom = endpointInfo && endpointInfo.custom;\n  useEffect(() => {\n    const handler = () => {\n      if (endpointInfoCustom) {\n        setEndpoint(ENDPOINTS[0].endpoint);\n      }\n    };\n    window.addEventListener('beforeunload', handler);\n    return () => window.removeEventListener('beforeunload', handler);\n  }, [endpointInfoCustom, setEndpoint]);\n\n  const tradePageUrl = location.pathname.startsWith('/market/')\n    ? location.pathname\n    : getTradePageUrl();\n\n  const { SubMenu } = Menu;\n\n  const menuDiv = (\n    <Menu\n      mode=\"horizontal\"\n      defaultSelectedKeys={['Trading']}\n      style={{\n        fontSize: '16px',\n        display: 'flex',\n        justifyContent: 'center',\n        background: '#0F1429',\n      }}\n      selectable={false}\n    >\n      {MENU.map((item) => {\n        if (item.child === undefined) {\n          return (\n            <Menu.Item key={item.title}>\n              <a\n                href={item.link}\n                target={item.link.startsWith('/') ? '_self' : '_blank'}\n                rel=\"noopener noreferrer\"\n              >\n                {item.title}\n              </a>\n            </Menu.Item>\n          );\n        } else {\n        }\n      })}\n    </Menu>\n  );\n\n  return (\n    <>\n      <CustomClusterEndpointDialog\n        visible={addEndpointVisible}\n        testingConnection={testingConnection}\n        onAddCustomEndpoint={onAddCustomEndpoint}\n        onClose={() => setAddEndpointVisible(false)}\n      />\n      <Wrapper style={{ background: '#0F1429' }}>\n        <Row wrap={false} style={{ paddingTop: 25, height: 70 }}>\n          <Col flex=\"none\">\n            <LogoWrapper\n              onClick={() => history.push(tradePageUrl)}\n              style={{ paddingLeft: 40 }}\n            >\n              <img src={logo} alt=\"\" style={{ width: 145, height: 40 }} />\n            </LogoWrapper>\n          </Col>\n          <Col flex=\"auto\" style={{ textAlign: 'center' }}>\n            {menuDiv}\n          </Col>\n          <Col flex=\"none\" style={{ paddingRight: 20 }}>\n            <WalletConnect />\n          </Col>\n        </Row>\n      </Wrapper>\n    </>\n  );\n}\n","import React from 'react';\nimport { Layout, Row, Col, Grid } from 'antd';\nimport Link from './Link';\nconst { Footer } = Layout;\nconst { useBreakpoint } = Grid;\n\nconst footerElements = [\n  {\n    description: '',\n    link: '',\n  },\n];\n\nexport const CustomFooter = () => {\n  const smallScreen = !useBreakpoint().lg;\n\n  return (\n    <Footer\n      style={{\n        height: '45px',\n        paddingBottom: 10,\n        paddingTop: 10,\n      }}\n    >\n      <Row align=\"middle\" gutter={[16, 4]}>\n        {!smallScreen && (\n          <>\n            <Col flex=\"auto\" />\n            {footerElements.map((elem, index) => {\n              return (\n                <Col key={index + ''}>\n                  <Link external to={elem.link}>\n                    {elem.description}\n                  </Link>\n                </Col>\n              );\n            })}\n          </>\n        )}\n        <Col flex=\"auto\">{/*  <DexProgramSelector />*/}</Col>\n      </Row>\n    </Footer>\n  );\n};\n","import { Layout } from 'antd';\nimport React from 'react';\nimport TopBa1r from './TopBar';\nimport { CustomFooter as Footer } from './Footer';\nconst { Header, Content } = Layout;\n\nexport default function BasicLayout({ children }) {\n  return (\n    <React.Fragment>\n      <Layout\n        style={{ display: 'flex', minHeight: '100vh', flexDirection: 'column' }}\n      >\n        <Header style={{ padding: 0, minHeight: 64, height: 'unset' }}>\n          <TopBa1r />\n        </Header>\n        <Content style={{ flex: 1 }}>{children}</Content>\n        <Footer />\n      </Layout>\n    </React.Fragment>\n  );\n}\n","import { PublicKey } from '@solana/web3.js';\nimport React, { ReactElement, useMemo, useState } from 'react';\nimport { useAccountInfo } from '../utils/connection';\nimport { isValidPublicKey } from '../utils/utils';\nimport { ValidateStatus } from 'antd/lib/form/FormItem';\nimport { TokenInstructions } from '@project-serum/serum';\nimport { parseTokenMintData, useMintToTickers } from '../utils/tokens';\nimport { AutoComplete, Form, Tooltip } from 'antd';\nimport Link from './Link';\n\nexport interface MintInfo {\n  address: PublicKey;\n  decimals: number;\n}\n\nexport function useMintInput(\n  name,\n  label: string | ReactElement,\n  tooltip?: string | ReactElement,\n): [ReactElement, MintInfo | null] {\n  const [address, setAddress] = useState('');\n  const [accountInfo, loaded] = useAccountInfo(\n    isValidPublicKey(address) ? new PublicKey(address) : null,\n  );\n\n  const mintToTickers = useMintToTickers();\n  const options = useMemo(() => {\n    return Object.entries(mintToTickers)\n      .filter(\n        ([mintAddress, ticker]) =>\n          mintAddress.includes(address) ||\n          ticker.toLowerCase().includes(address.toLowerCase()),\n      )\n      .map(([mintAddress, ticker]) => ({\n        value: mintAddress,\n        label: (\n          <>\n            {ticker} ({mintAddress})\n          </>\n        ),\n      }));\n  }, [mintToTickers, address]);\n\n  const { validateStatus, hasFeedback, help, mintInfo } = useMemo(() => {\n    let validateStatus: ValidateStatus = '';\n    let hasFeedback = false;\n    let help: string | null = null;\n    let mintInfo: MintInfo | null = null;\n    if (address) {\n      hasFeedback = true;\n      if (accountInfo) {\n        if (\n          accountInfo.owner.equals(TokenInstructions.TOKEN_PROGRAM_ID) &&\n          accountInfo.data.length === 82\n        ) {\n          let parsed = parseTokenMintData(accountInfo.data);\n          if (parsed.initialized) {\n            validateStatus = 'success';\n            mintInfo = {\n              address: new PublicKey(address),\n              decimals: parsed.decimals,\n            };\n          } else {\n            validateStatus = 'error';\n            help = 'Invalid SPL mint';\n          }\n        } else {\n          validateStatus = 'error';\n          help = 'Invalid SPL mint address';\n        }\n      } else if (isValidPublicKey(address) && !loaded) {\n        validateStatus = 'validating';\n      } else {\n        validateStatus = 'error';\n        help = 'Invalid Solana address';\n      }\n    }\n    return { validateStatus, hasFeedback, help, mintInfo };\n  }, [address, accountInfo, loaded]);\n\n  const input = (\n    <Form.Item\n      label={\n        <Tooltip\n          title={\n            <>\n              {tooltip} You can look up token mint addresses on{' '}\n              <Link external to=\"https://sollet.io\">\n                sollet.io\n              </Link>\n              .\n            </>\n          }\n        >\n          {label}\n        </Tooltip>\n      }\n      name={name}\n      validateStatus={validateStatus}\n      hasFeedback={hasFeedback}\n      help={help}\n    >\n      <AutoComplete\n        options={options}\n        value={address}\n        onChange={(value) => setAddress(value)}\n      />\n    </Form.Item>\n  );\n\n  return [input, mintInfo];\n}\n","import React, { useState } from 'react';\nimport { Button, Form, Input, Tooltip, Typography } from 'antd';\nimport { notify } from '../utils/notifications';\nimport { MARKETS } from '@project-serum/serum';\nimport { useConnection } from '../utils/connection';\nimport FloatingElement from '../components/layout/FloatingElement';\nimport styled from 'styled-components';\nimport { useWallet } from '../utils/wallet';\nimport { listMarket } from '../utils/send';\nimport { useMintInput } from '../components/useMintInput';\n\nconst { Text, Title } = Typography;\n\nconst Wrapper = styled.div`\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 24px;\n  margin-bottom: 24px;\n`;\n\nexport default function ListNewMarketPage() {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [baseMintInput, baseMintInfo] = useMintInput(\n    'baseMint',\n    <Text>\n      Base Token Mint Address{' '}\n      <Text type=\"secondary\">\n        (e.g. BTC solana address:{' '}\n        {\n          <Text type=\"secondary\" code>\n            9n4nbM75f5Ui33ZbPYXn59EwSgE8CGsHtAeTH5YFeJ9E\n          </Text>\n        }\n        )\n      </Text>\n    </Text>,\n    'The base token is the token being traded. For example, the base token of a BTC/USDT market is BTC.',\n  );\n  const [quoteMintInput, quoteMintInfo] = useMintInput(\n    'quoteMint',\n    <Text>\n      Quote Token Mint Address{' '}\n      <Text type=\"secondary\">\n        (e.g. USDT solana address:{' '}\n        {\n          <Text type=\"secondary\" code>\n            BQcdHdAQW1hczDbBi9hiegXAR7A98Q9jx3X3iBBBDiq4\n          </Text>\n        }\n        )\n      </Text>\n    </Text>,\n    'The quote token is the token used to price trades. For example, the quote token of a BTC/USDT market is USDT.',\n  );\n  const [lotSize, setLotSize] = useState('1');\n  const [tickSize, setTickSize] = useState('0.01');\n  const dexProgramId = MARKETS.find(({ deprecated }) => !deprecated).programId;\n  const [submitting, setSubmitting] = useState(false);\n\n  const [listedMarket, setListedMarket] = useState(null);\n\n  let baseLotSize;\n  let quoteLotSize;\n  if (baseMintInfo && parseFloat(lotSize) > 0) {\n    baseLotSize = Math.round(10 ** baseMintInfo.decimals * parseFloat(lotSize));\n    if (quoteMintInfo && parseFloat(tickSize) > 0) {\n      quoteLotSize = Math.round(\n        parseFloat(lotSize) *\n          10 ** quoteMintInfo.decimals *\n          parseFloat(tickSize),\n      );\n    }\n  }\n\n  const canSubmit =\n    connected &&\n    !!baseMintInfo &&\n    !!quoteMintInfo &&\n    !!baseLotSize &&\n    !!quoteLotSize;\n\n  async function onSubmit() {\n    if (!canSubmit) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const marketAddress = await listMarket({\n        connection,\n        wallet,\n        baseMint: baseMintInfo.address,\n        quoteMint: quoteMintInfo.address,\n        baseLotSize,\n        quoteLotSize,\n        dexProgramId,\n      });\n      setListedMarket(marketAddress);\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error listing new market',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <Wrapper>\n      <FloatingElement>\n        <Title level={4}>List New Market</Title>\n        <Form\n          labelCol={{ span: 24 }}\n          wrapperCol={{ span: 24 }}\n          layout={'vertical'}\n          onFinish={onSubmit}\n        >\n          {baseMintInput}\n          {quoteMintInput}\n          <Form.Item\n            label={\n              <Tooltip title=\"Smallest allowed order size. For a BTC/USDT market, this would be in units of BTC.\">\n                Minimum Order Size{' '}\n                <Text type=\"secondary\">(Lot size in e.g. BTC)</Text>\n              </Tooltip>\n            }\n            name=\"lotSize\"\n            initialValue=\"1\"\n            validateStatus={\n              baseMintInfo && quoteMintInfo\n                ? baseLotSize\n                  ? 'success'\n                  : 'error'\n                : null\n            }\n            hasFeedback={baseMintInfo && quoteMintInfo}\n          >\n            <Input\n              value={lotSize}\n              onChange={(e) => setLotSize(e.target.value.trim())}\n              type=\"number\"\n              min=\"0\"\n              step=\"any\"\n            />\n          </Form.Item>\n          <Form.Item\n            label={\n              <Tooltip title=\"Smallest amount by which prices can move. For a BTC/USDT market, this would be in units of USDT.\">\n                Tick Size{' '}\n                <Text type=\"secondary\">(Price increment in e.g. USDT)</Text>\n              </Tooltip>\n            }\n            name=\"tickSize\"\n            initialValue=\"0.01\"\n            validateStatus={\n              baseMintInfo && quoteMintInfo\n                ? quoteLotSize\n                  ? 'success'\n                  : 'error'\n                : null\n            }\n            hasFeedback={baseMintInfo && quoteMintInfo}\n          >\n            <Input\n              value={tickSize}\n              onChange={(e) => setTickSize(e.target.value.trim())}\n              type=\"number\"\n              min=\"0\"\n              step=\"any\"\n            />\n          </Form.Item>\n          <Form.Item label=\" \" colon={false}>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              disabled={!canSubmit}\n              loading={submitting}\n            >\n              {connected ? 'Submit' : 'Not connected to wallet'}\n            </Button>\n          </Form.Item>\n        </Form>\n      </FloatingElement>\n      {listedMarket ? (\n        <FloatingElement>\n          <Text>New market address: {listedMarket.toBase58()}</Text>\n        </FloatingElement>\n      ) : null}\n    </Wrapper>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n  AutoComplete,\n  Button,\n  Form,\n  Input,\n  Switch,\n  Tooltip,\n  Typography,\n} from 'antd';\nimport { PublicKey } from '@solana/web3.js';\nimport { useConnection } from '../../utils/connection';\nimport FloatingElement from '../../components/layout/FloatingElement';\nimport styled from 'styled-components';\nimport { useWallet } from '../../utils/wallet';\nimport { sendSignedTransaction, signTransactions } from '../../utils/send';\nimport { useMintInput } from '../../components/useMintInput';\nimport { PoolTransactions } from '@project-serum/pool';\nimport { useTokenAccounts } from '../../utils/markets';\nimport BN from 'bn.js';\nimport { notify } from '../../utils/notifications';\nimport Link from '../../components/Link';\n\nconst { Text, Title } = Typography;\n\nconst Wrapper = styled.div`\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 24px;\n  margin-bottom: 24px;\n`;\n\nconst AddRemoveTokenButtons = styled.div`\n  margin-top: 16px;\n  margin-bottom: 16px;\n`;\n\nconst SIMPLE_POOL_PROGRAM_ID = '71JS8f7y7ASMbuuSMCVG7a3qDdcVco2qYD6bMJeZqUCm';\nconst ADMIN_CONTROLLED_POOL_PROGRAM_ID =\n  'WvmTNLpGMVbwJVYztYL4Hnsy82cJhQorxjnnXcRm3b6';\nconst DEFAULT_PROGRAM_ID = ADMIN_CONTROLLED_POOL_PROGRAM_ID;\nconst PROGRAM_ID_OPTIONS = [\n  {\n    label: `Simple Pool (${SIMPLE_POOL_PROGRAM_ID})`,\n    value: SIMPLE_POOL_PROGRAM_ID,\n  },\n  {\n    label: `Admin-Controlled Pool (${ADMIN_CONTROLLED_POOL_PROGRAM_ID})`,\n    value: ADMIN_CONTROLLED_POOL_PROGRAM_ID,\n  },\n];\n\nexport default function NewPoolPage() {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [poolName, setPoolName] = useState('');\n  const [programId, setProgramId] = useState(DEFAULT_PROGRAM_ID);\n  const [initialSupply, setInitialSupply] = useState('1');\n  const [initialAssets, setInitialAssets] = useState<InitialAsset[]>([\n    { valid: false },\n    { valid: false },\n  ]);\n  const [adminControlled, setAdminControlled] = useState(false);\n  const [adminAddress, setAdminAddress] = useState('');\n  const [tokenAccounts] = useTokenAccounts();\n  const [submitting, setSubmitting] = useState(false);\n  const [newPoolAddress, setNewPoolAddress] = useState<PublicKey | null>(null);\n\n  useEffect(() => {\n    if (programId === SIMPLE_POOL_PROGRAM_ID) {\n      setAdminControlled(false);\n    } else if (programId === ADMIN_CONTROLLED_POOL_PROGRAM_ID) {\n      setAdminControlled(true);\n    }\n  }, [programId]);\n\n  useEffect(() => {\n    if (connected && wallet) {\n      setAdminAddress(wallet.publicKey.toBase58());\n    }\n  }, [wallet, connected]);\n\n  const canSubmit =\n    connected &&\n    poolName.trim() &&\n    programId &&\n    parseFloat(initialSupply) > 0 &&\n    initialAssets.every((asset) => asset.valid) &&\n    tokenAccounts &&\n    (adminAddress || !adminControlled);\n\n  async function onSubmit() {\n    if (!canSubmit || !wallet) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const assets = initialAssets as ValidInitialAsset[];\n      const [\n        poolAddress,\n        transactionsAndSigners,\n      ] = await PoolTransactions.initializeSimplePool({\n        connection,\n        programId: new PublicKey(programId),\n        poolName,\n        poolStateSpace: 1024,\n        poolMintDecimals: 6,\n        initialPoolMintSupply: new BN(\n          Math.round(10 ** 6 * parseFloat(initialSupply)),\n        ),\n        assetMints: assets.map((asset) => asset.mint),\n        initialAssetQuantities: assets.map((asset) => new BN(asset.quantity)),\n        creator: wallet.publicKey,\n        creatorAssets: assets.map((asset) => {\n          const found = tokenAccounts?.find((tokenAccount) =>\n            tokenAccount.effectiveMint.equals(asset.mint),\n          );\n          if (!found) {\n            throw new Error('No token account for ' + asset.mint.toBase58());\n          }\n          return found.pubkey;\n        }),\n        additionalAccounts: adminControlled\n          ? [\n              {\n                pubkey: new PublicKey(adminAddress),\n                isSigner: false,\n                isWritable: false,\n              },\n            ]\n          : [],\n      });\n      const signed = await signTransactions({\n        transactionsAndSigners,\n        wallet,\n        connection,\n      });\n      for (let signedTransaction of signed) {\n        await sendSignedTransaction({ signedTransaction, connection });\n      }\n      setNewPoolAddress(poolAddress);\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error creating new pool',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <Wrapper>\n      <FloatingElement>\n        <Title level={4}>Create new pool</Title>\n        <Form layout=\"vertical\" onFinish={onSubmit}>\n          <Form.Item\n            label={\n              <Tooltip title=\"Public name of the pool.\">Pool Name</Tooltip>\n            }\n            name=\"name\"\n          >\n            <Input\n              value={poolName}\n              onChange={(e) => setPoolName(e.target.value)}\n            />\n          </Form.Item>\n          <Form.Item\n            label={\n              <Tooltip title=\"Address of the pool program.\">\n                Program ID{' '}\n                <Text type=\"secondary\">(e.g. {DEFAULT_PROGRAM_ID})</Text>\n              </Tooltip>\n            }\n            name=\"programId\"\n            initialValue={DEFAULT_PROGRAM_ID}\n          >\n            <AutoComplete\n              value={programId}\n              onChange={(value) => setProgramId(value)}\n              options={PROGRAM_ID_OPTIONS}\n            />\n          </Form.Item>\n          <Form.Item\n            label={\n              <Tooltip title=\"Initial number of pool tokens to mint to your account.\">\n                Initial Pool Token Supply\n              </Tooltip>\n            }\n            name=\"initialSupply\"\n            initialValue=\"1\"\n          >\n            <Input\n              value={initialSupply}\n              onChange={(e) => setInitialSupply(e.target.value.trim())}\n              type=\"number\"\n              min=\"0\"\n              step=\"any\"\n            />\n          </Form.Item>\n          <AddRemoveTokenButtons>\n            <Button\n              onClick={() =>\n                setInitialAssets((assets) => assets.concat({ valid: false }))\n              }\n            >\n              Add token\n            </Button>{' '}\n            <Button\n              onClick={() =>\n                setInitialAssets((assets) => assets.slice(0, assets.length - 1))\n              }\n              disabled={initialAssets.length <= 1}\n            >\n              Remove token\n            </Button>\n          </AddRemoveTokenButtons>\n          {initialAssets.map((asset, i) => (\n            <AssetInput setInitialAssets={setInitialAssets} index={i} key={i} />\n          ))}\n          <Form.Item\n            label={\n              <Tooltip title=\"Whether the assets in the pool can be controlled by the pool admin.\">\n                Admin Controlled\n              </Tooltip>\n            }\n            name=\"adminControlled\"\n          >\n            <Switch\n              checked={adminControlled}\n              onChange={(checked) => setAdminControlled(checked)}\n              disabled={\n                programId === SIMPLE_POOL_PROGRAM_ID ||\n                programId === ADMIN_CONTROLLED_POOL_PROGRAM_ID\n              }\n            />\n          </Form.Item>\n          {adminControlled ? (\n            <Form.Item\n              label={\n                <Tooltip title=\"Address of the pool admin account.\">\n                  Admin Address\n                </Tooltip>\n              }\n            >\n              <Input\n                value={adminAddress}\n                onChange={(e) => setAdminAddress(e.target.value.trim())}\n              />\n            </Form.Item>\n          ) : null}\n          <Form.Item label=\" \" colon={false}>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              disabled={!canSubmit}\n              loading={submitting}\n            >\n              {connected ? 'Submit' : 'Not connected to wallet'}\n            </Button>\n          </Form.Item>\n        </Form>\n      </FloatingElement>\n      {newPoolAddress ? (\n        <FloatingElement>\n          <Text>\n            New pool address:{' '}\n            <Link to={`/pools/${newPoolAddress.toBase58()}`}>\n              {newPoolAddress.toBase58()}\n            </Link>\n          </Text>\n        </FloatingElement>\n      ) : null}\n    </Wrapper>\n  );\n}\n\ntype InitialAsset = { valid: false } | ValidInitialAsset;\ninterface ValidInitialAsset {\n  valid: true;\n  mint: PublicKey;\n  quantity: number;\n}\n\nfunction AssetInput({ setInitialAssets, index }) {\n  const [mintInput, mintInfo] = useMintInput(\n    `mint${index}`,\n    <Text>Token {index + 1} Mint Address</Text>,\n    <>Token mint address for token {index + 1}.</>,\n  );\n  const [quantity, setQuantity] = useState('');\n\n  useEffect(() => {\n    let change: InitialAsset;\n    if (mintInfo && parseFloat(quantity) >= 0) {\n      let parsedQuantity = Math.round(\n        10 ** mintInfo.decimals * parseFloat(quantity),\n      );\n      change = {\n        mint: mintInfo.address,\n        quantity: parsedQuantity,\n        valid: true,\n      };\n    } else {\n      change = { valid: false };\n    }\n    setInitialAssets((assets: InitialAsset[]) =>\n      assets.map((old, i) => (i === index ? change : old)),\n    );\n  }, [setInitialAssets, index, mintInfo, quantity]);\n\n  return (\n    <>\n      {mintInput}\n      <Form.Item\n        label={\n          <Tooltip\n            title={\n              <>\n                Initial quantity of token {index + 1} to deposit into the pool.\n              </>\n            }\n          >\n            Token {index + 1} Initial Quantity\n          </Tooltip>\n        }\n        name={`quantity${index}`}\n        validateStatus={'success'}\n      >\n        <Input\n          value={quantity}\n          onChange={(e) => setQuantity(e.target.value.trim())}\n          type=\"number\"\n          min=\"0\"\n          step=\"any\"\n        />\n      </Form.Item>\n    </>\n  );\n}\n","import React from 'react';\nimport { PublicKey } from '@solana/web3.js';\nimport { abbreviateAddress } from '../utils/utils';\nimport { useMintToTickers } from '../utils/tokens';\nimport { Popover } from 'antd';\nimport LinkAddress from './LinkAddress';\nimport { InfoCircleOutlined } from '@ant-design/icons';\n\nexport function MintName({\n  mint,\n  showAddress = false,\n}: {\n  mint: string | PublicKey | null | undefined;\n  showAddress?: boolean;\n}) {\n  const mintToTickers = useMintToTickers();\n  if (!mint) {\n    return null;\n  }\n  const mintKey = typeof mint === 'string' ? new PublicKey(mint) : mint;\n  const mintAddress = typeof mint === 'string' ? mint : mint.toBase58();\n  const ticker = mintToTickers[mintAddress] ?? abbreviateAddress(mintKey);\n\n  return (\n    <>\n      {ticker}\n      {showAddress ? (\n        <>\n          {' '}\n          <Popover\n            content={<LinkAddress address={mintAddress} />}\n            placement=\"bottomRight\"\n            title=\"Token mint\"\n            trigger=\"hover\"\n          >\n            <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n          </Popover>\n        </>\n      ) : null}\n    </>\n  );\n}\n","import { Basket, PoolInfo } from '@project-serum/pool';\nimport React from 'react';\nimport BN from 'bn.js';\nimport { PublicKey } from '@solana/web3.js';\nimport { useAccountInfo } from '../../../utils/connection';\nimport { parseTokenMintData } from '../../../utils/tokens';\nimport { Spin } from 'antd';\nimport { MintName } from '../../../components/MintName';\n\ninterface BasketDisplayProps {\n  poolInfo: PoolInfo;\n  basket?: Basket | null | undefined;\n}\n\nexport default function PoolBasketDisplay({\n  poolInfo,\n  basket,\n}: BasketDisplayProps) {\n  return (\n    <ul>\n      {poolInfo.state.assets.map((asset, index) => (\n        <BasketItem\n          key={index}\n          mint={asset.mint}\n          quantity={basket?.quantities[index]}\n        />\n      ))}\n    </ul>\n  );\n}\n\ninterface BasketItemProps {\n  mint: PublicKey;\n  quantity?: BN;\n}\n\nfunction BasketItem({ mint, quantity }: BasketItemProps) {\n  const [mintAccountInfo] = useAccountInfo(mint);\n  let quantityDisplay = <Spin size=\"small\" />;\n  if (mintAccountInfo && quantity) {\n    const mintInfo = parseTokenMintData(mintAccountInfo.data);\n    quantityDisplay = <>{quantity.toNumber() / 10 ** mintInfo.decimals}</>;\n  }\n\n  return (\n    <li>\n      {quantityDisplay} <MintName mint={mint} showAddress />\n    </li>\n  );\n}\n","import { getPoolBasket, PoolInfo } from '@project-serum/pool';\nimport React from 'react';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport { Typography } from 'antd';\nimport { MintInfo } from '../../../utils/tokens';\nimport { useAsyncData } from '../../../utils/fetch-loop';\nimport { useConnection } from '../../../utils/connection';\nimport tuple from 'immutable-tuple';\nimport PoolBasketDisplay from './PoolBasketDisplay';\n\nconst { Text, Paragraph } = Typography;\n\ninterface PoolInfoProps {\n  poolInfo: PoolInfo;\n  mintInfo: MintInfo;\n}\n\nconst feeFormat = new Intl.NumberFormat(undefined, {\n  style: 'percent',\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 6,\n});\n\nexport default function PoolInfoPanel({ poolInfo, mintInfo }: PoolInfoProps) {\n  const connection = useConnection();\n\n  const [totalBasket] = useAsyncData(\n    () => getPoolBasket(connection, poolInfo, { redeem: mintInfo.supply }),\n    tuple(getPoolBasket, connection, poolInfo, 'total', mintInfo),\n  );\n\n  return (\n    <FloatingElement stretchVertical>\n      <Paragraph>Name: {poolInfo.state.name}</Paragraph>\n      <Paragraph>\n        Address: <Text copyable>{poolInfo.address.toBase58()}</Text>\n      </Paragraph>\n      <Paragraph>\n        Pool token mint address:{' '}\n        <Text copyable>{poolInfo.state.poolTokenMint.toBase58()}</Text>\n      </Paragraph>\n      {poolInfo.state.adminKey ? (\n        <Paragraph>\n          Pool admin: <Text copyable>{poolInfo.state.adminKey.toBase58()}</Text>\n        </Paragraph>\n      ) : null}\n      <Paragraph>\n        Fee rate: {feeFormat.format(poolInfo.state.feeRate / 1_000_000)}\n      </Paragraph>\n      <Paragraph>\n        Total supply: {mintInfo.supply.toNumber() / 10 ** mintInfo.decimals}\n      </Paragraph>\n      <Text>Total assets:</Text>\n      <div>\n        <PoolBasketDisplay poolInfo={poolInfo} basket={totalBasket} />\n      </div>\n    </FloatingElement>\n  );\n}\n","import { getPoolBasket, PoolInfo, PoolTransactions } from '@project-serum/pool';\nimport React, { useMemo, useState } from 'react';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport { Button, Input, Spin, Tabs, Typography } from 'antd';\nimport { MintInfo } from '../../../utils/tokens';\nimport { useAsyncData } from '../../../utils/fetch-loop';\nimport { useConnection } from '../../../utils/connection';\nimport { PublicKey } from '@solana/web3.js';\nimport tuple from 'immutable-tuple';\nimport PoolBasketDisplay from './PoolBasketDisplay';\nimport BN from 'bn.js';\nimport { notify } from '../../../utils/notifications';\nimport { useWallet } from '../../../utils/wallet';\nimport { useTokenAccounts } from '../../../utils/markets';\nimport { sendTransaction } from '../../../utils/send';\n\nconst { Text } = Typography;\nconst { TabPane } = Tabs;\n\ninterface PoolCreateRedeemPanel {\n  poolInfo: PoolInfo;\n  mintInfo: MintInfo;\n}\n\nexport default function PoolCreateRedeemPanel({\n  poolInfo,\n  mintInfo,\n}: PoolCreateRedeemPanel) {\n  return (\n    <FloatingElement stretchVertical>\n      <Tabs>\n        <TabPane tab=\"Create\" key=\"create\">\n          <CreateRedeemTab\n            poolInfo={poolInfo}\n            mintInfo={mintInfo}\n            tab=\"create\"\n          />\n        </TabPane>\n        <TabPane tab=\"Redeem\" key=\"redeem\">\n          <CreateRedeemTab\n            poolInfo={poolInfo}\n            mintInfo={mintInfo}\n            tab=\"redeem\"\n          />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n\ninterface CreateRedeemInnerPanel {\n  poolInfo: PoolInfo;\n  mintInfo: MintInfo;\n  tab: string;\n}\n\nfunction CreateRedeemTab({ poolInfo, mintInfo, tab }: CreateRedeemInnerPanel) {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [quantity, setQuantity] = useState('');\n  const [tokenAccounts] = useTokenAccounts();\n  const [submitting, setSubmitting] = useState(false);\n\n  const action = useMemo(() => {\n    const parsedQuantity = Math.round(\n      parseFloat(quantity) * 10 ** mintInfo.decimals,\n    );\n    if (parsedQuantity > 0) {\n      if (tab === 'create') {\n        return { create: new BN(parsedQuantity) };\n      } else {\n        return { redeem: new BN(parsedQuantity) };\n      }\n    }\n    return null;\n  }, [mintInfo.decimals, quantity, tab]);\n\n  const [basket, basketLoaded] = useAsyncData(\n    async () =>\n      action ? await getPoolBasket(connection, poolInfo, action) : null,\n    tuple(getPoolBasket, connection, poolInfo.address.toBase58(), action),\n  );\n\n  function findTokenAccount(mint: PublicKey): PublicKey {\n    const account = tokenAccounts?.find((account) =>\n      account.effectiveMint.equals(mint),\n    );\n    if (account) {\n      return account.pubkey;\n    }\n    throw new Error('No token account for ' + mint.toBase58());\n  }\n\n  const canSubmit = connected && action && basket;\n\n  async function onSubmit(e) {\n    e.preventDefault();\n    if (!action || !basket || !connected || !canSubmit || !wallet) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const { transaction, signers } = PoolTransactions.execute(\n        poolInfo,\n        action,\n        {\n          owner: wallet.publicKey,\n          poolTokenAccount: findTokenAccount(poolInfo.state.poolTokenMint),\n          assetAccounts: poolInfo.state.assets.map((asset) =>\n            findTokenAccount(asset.mint),\n          ),\n        },\n        basket,\n      );\n      await sendTransaction({ connection, wallet, transaction, signers });\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message:\n          'Error ' +\n          (tab === 'create' ? 'creating' : 'redeeming') +\n          ' pool tokens',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <form onSubmit={onSubmit}>\n      <Input\n        addonBefore={<>Quantity</>}\n        value={quantity}\n        onChange={(e) => setQuantity(e.target.value.trim())}\n        style={{ marginBottom: 24 }}\n      />\n      <div>\n        {!basket ? (\n          basketLoaded ? null : (\n            <Spin />\n          )\n        ) : (\n          <>\n            <Text>{tab === 'create' ? 'Cost' : 'Proceeds'}: </Text>\n            <Text type=\"secondary\">(indicative only)</Text>\n            <PoolBasketDisplay poolInfo={poolInfo} basket={basket} />\n          </>\n        )}\n      </div>\n      <Button\n        htmlType=\"submit\"\n        type=\"primary\"\n        disabled={!canSubmit || submitting}\n      >\n        {!connected ? 'Wallet not connected' : 'Submit'}\n      </Button>\n    </form>\n  );\n}\n","import { PoolInfo } from '@project-serum/pool';\nimport React from 'react';\nimport { PublicKey } from '@solana/web3.js';\nimport { useAccountInfo } from '../../../utils/connection';\nimport {\n  parseTokenAccountData,\n  parseTokenMintData,\n} from '../../../utils/tokens';\nimport { Button, Spin, Tabs } from 'antd';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport { useTokenAccounts } from '../../../utils/markets';\nimport { MintName } from '../../../components/MintName';\nimport { LinkOutlined } from '@ant-design/icons';\nimport { WRAPPED_SOL_MINT } from '@project-serum/serum/lib/token-instructions';\n\nconst { TabPane } = Tabs;\n\nexport default function PoolBalancesPanel({\n  poolInfo,\n}: {\n  poolInfo: PoolInfo;\n}) {\n  return (\n    <FloatingElement>\n      <Tabs>\n        <TabPane tab=\"Wallet Balances\" key=\"wallet\">\n          <WalletBalancesTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Pool Balances\" key=\"pool\">\n          <PoolBalancesTab poolInfo={poolInfo} />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n\nfunction WalletBalancesTab({ poolInfo }: { poolInfo: PoolInfo }) {\n  const [tokenAccounts] = useTokenAccounts();\n  return (\n    <ul>\n      {[\n        poolInfo.state.poolTokenMint,\n        ...poolInfo.state.assets.map((asset) => asset.mint),\n      ].map((mint, index) => {\n        const tokenAccount = tokenAccounts?.find((account) =>\n          account.effectiveMint.equals(mint),\n        );\n        if (!tokenAccount) {\n          return null;\n        }\n        return (\n          <BalanceItem\n            key={index}\n            mint={mint}\n            publicKey={tokenAccount.pubkey}\n            isPoolToken={mint.equals(poolInfo.state.poolTokenMint)}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nfunction PoolBalancesTab({ poolInfo }: { poolInfo: PoolInfo }) {\n  return (\n    <ul>\n      {poolInfo.state.assets.map((asset, index) => {\n        return (\n          <BalanceItem\n            key={index}\n            mint={asset.mint}\n            publicKey={asset.vaultAddress}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\ninterface BalanceItemProps {\n  mint: PublicKey;\n  publicKey: PublicKey;\n  isPoolToken?: boolean;\n}\n\nfunction BalanceItem({ mint, publicKey, isPoolToken }: BalanceItemProps) {\n  const [mintAccountInfo] = useAccountInfo(mint);\n  const [balanceAccountInfo] = useAccountInfo(publicKey);\n  let quantityDisplay = <Spin size=\"small\" />;\n  if (mintAccountInfo && balanceAccountInfo) {\n    const mintInfo = parseTokenMintData(mintAccountInfo.data);\n    if (mint.equals(WRAPPED_SOL_MINT)) {\n      quantityDisplay = (\n        <>{balanceAccountInfo.lamports / 10 ** mintInfo.decimals}</>\n      );\n    } else {\n      const accountInfo = parseTokenAccountData(balanceAccountInfo.data);\n      quantityDisplay = <>{accountInfo.amount / 10 ** mintInfo.decimals}</>;\n    }\n  }\n\n  return (\n    <li>\n      {quantityDisplay}{' '}\n      {isPoolToken ? (\n        <>\n          Pool Token (<MintName mint={mint} />)\n        </>\n      ) : (\n        <MintName mint={mint} />\n      )}{' '}\n      <Button\n        type=\"link\"\n        icon={<LinkOutlined />}\n        href={'https://solscan.io/address/' + publicKey.toBase58()}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      />\n    </li>\n  );\n}\n","import React, { FormEvent, useMemo, useState } from 'react';\nimport { AdminControlledPoolInstructions, PoolInfo } from '@project-serum/pool';\nimport { TokenInstructions } from '@project-serum/serum';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport { useConnection } from '../../../utils/connection';\nimport { useWallet } from '../../../utils/wallet';\nimport {\n  getSelectedTokenAccountForMint,\n  useTokenAccounts,\n} from '../../../utils/markets';\nimport { sendTransaction } from '../../../utils/send';\nimport { notify } from '../../../utils/notifications';\nimport {\n  Account,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n} from '@solana/web3.js';\nimport { AutoComplete, Button, Input, Select, Tabs } from 'antd';\nimport {\n  createAssociatedTokenAccount,\n  getAssociatedTokenAddress,\n} from '@project-serum/associated-token';\nimport { parseTokenMintData, useMintToTickers } from '../../../utils/tokens';\nimport BN from 'bn.js';\nimport { refreshAllCaches } from '../../../utils/fetch-loop';\n\nconst { TabPane } = Tabs;\nconst { Option } = Select;\n\nexport function PoolAdminPanel({ poolInfo }: { poolInfo: PoolInfo }) {\n  return (\n    <FloatingElement>\n      <Tabs>\n        <TabPane tab=\"Pause/Unpause\" key=\"pause\">\n          <PauseUnpauseTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Add Token\" key=\"addAsset\">\n          <AddAssetTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Remove Token\" key=\"removeAsset\">\n          <RemoveAssetTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Deposit\" key=\"deposit\">\n          <DepositTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Withdraw\" key=\"withdraw\">\n          <WithdrawTab poolInfo={poolInfo} />\n        </TabPane>\n        <TabPane tab=\"Modify Fee\" key=\"updateFee\">\n          <UpdateFeeTab poolInfo={poolInfo} />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n\ninterface TabParams {\n  poolInfo: PoolInfo;\n}\n\nfunction PauseUnpauseTab({ poolInfo }: TabParams) {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [submitting, setSubmitting] = useState(false);\n\n  async function sendPause() {\n    if (!connected || !wallet) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const transaction = new Transaction();\n      transaction.add(AdminControlledPoolInstructions.pause(poolInfo));\n      await sendTransaction({ connection, wallet, transaction });\n    } catch (e) {\n      notify({\n        message: 'Error pausing pool',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  async function sendUnpause() {\n    if (!connected || !wallet) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const transaction = new Transaction();\n      transaction.add(AdminControlledPoolInstructions.unpause(poolInfo));\n      await sendTransaction({ connection, wallet, transaction });\n    } catch (e) {\n      notify({\n        message: 'Error unpausing pool',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <>\n      <Button onClick={sendPause} disabled={submitting}>\n        Pause\n      </Button>{' '}\n      <Button onClick={sendUnpause} disabled={submitting}>\n        Unpause\n      </Button>\n    </>\n  );\n}\n\nfunction AddAssetTab({ poolInfo }: TabParams) {\n  const connection = useConnection();\n  const [address, setAddress] = useState('');\n  const { wallet, connected } = useWallet();\n  const canSubmit = connected && address;\n  const [onSubmit, submitting] = useOnSubmitHandler(\n    'adding asset to pool',\n    async () => {\n      const mintAddress = new PublicKey(address);\n      const vaultAddress = await getAssociatedTokenAddress(\n        poolInfo.state.vaultSigner,\n        mintAddress,\n      );\n      const transaction = new Transaction();\n      if (!(await connection.getAccountInfo(vaultAddress)) && wallet) {\n        transaction.add(\n          await createAssociatedTokenAccount(\n            wallet.publicKey,\n            poolInfo.state.vaultSigner,\n            mintAddress,\n          ),\n        );\n      }\n      transaction.add(\n        AdminControlledPoolInstructions.addAsset(poolInfo, vaultAddress),\n      );\n      return [transaction, []];\n    },\n  );\n\n  return (\n    <form onSubmit={onSubmit}>\n      <MintSelector\n        label=\"Token Mint Address\"\n        value={address}\n        onChange={(value) => setAddress(value)}\n        style={{ marginBottom: 24 }}\n      />\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\n    </form>\n  );\n}\n\nfunction RemoveAssetTab({ poolInfo }: TabParams) {\n  const [address, setAddress] = useState('');\n  const { connected } = useWallet();\n  const canSubmit = connected && address;\n  const [onSubmit, submitting] = useOnSubmitHandler(\n    'removing asset from pool',\n    async () => {\n      const mintAddress = new PublicKey(address);\n      const vaultAddress = poolInfo.state.assets.find((asset) =>\n        asset.mint.equals(mintAddress),\n      )?.vaultAddress;\n      if (!vaultAddress) {\n        throw new Error('Asset not in pool');\n      }\n      const transaction = new Transaction();\n      transaction.add(\n        AdminControlledPoolInstructions.removeAsset(poolInfo, vaultAddress),\n      );\n      return [transaction, []];\n    },\n  );\n\n  return (\n    <form onSubmit={onSubmit}>\n      <MintInPoolSelector\n        poolInfo={poolInfo}\n        label=\"Token Mint Address\"\n        value={address}\n        onChange={(value) => setAddress(value)}\n        style={{ marginBottom: 24 }}\n      />\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\n    </form>\n  );\n}\n\nfunction DepositTab({ poolInfo }: TabParams) {\n  const [address, setAddress] = useState('');\n  const [quantity, setQuantity] = useState('');\n\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [tokenAccounts] = useTokenAccounts();\n  const canSubmit =\n    connected && address && tokenAccounts && parseFloat(quantity);\n\n  const [onSubmit, submitting] = useOnSubmitHandler(\n    'depositing to pool',\n    async () => {\n      if (!wallet) {\n        throw new Error('Wallet is not connected');\n      }\n\n      const mintAddress = new PublicKey(address);\n      const vaultAddress = poolInfo.state.assets.find((asset) =>\n        asset.mint.equals(mintAddress),\n      )?.vaultAddress;\n      if (!vaultAddress) {\n        throw new Error('Asset not in pool');\n      }\n\n      const walletTokenAccount = getSelectedTokenAccountForMint(\n        tokenAccounts,\n        mintAddress,\n      );\n      if (!walletTokenAccount) {\n        throw new Error('Asset not in wallet');\n      }\n\n      const mintAccountInfo = await connection.getAccountInfo(mintAddress);\n      if (!mintAccountInfo) {\n        throw new Error('Mint not found');\n      }\n      const mintDecimals = parseTokenMintData(mintAccountInfo.data).decimals;\n      const parsedQuantity = Math.round(\n        parseFloat(quantity) * 10 ** mintDecimals,\n      );\n\n      const wrappedSolAccount =\n        mintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT) &&\n        walletTokenAccount.pubkey.equals(wallet.publicKey)\n          ? new Account()\n          : null;\n\n      const transaction = new Transaction();\n      const signers: Account[] = [];\n      if (wrappedSolAccount) {\n        transaction.add(\n          SystemProgram.createAccount({\n            fromPubkey: wallet.publicKey,\n            lamports: parsedQuantity + 2.04e6,\n            newAccountPubkey: wrappedSolAccount.publicKey,\n            programId: TokenInstructions.TOKEN_PROGRAM_ID,\n            space: 165,\n          }),\n          TokenInstructions.initializeAccount({\n            account: wrappedSolAccount.publicKey,\n            mint: TokenInstructions.WRAPPED_SOL_MINT,\n            owner: wallet.publicKey,\n          }),\n          TokenInstructions.transfer({\n            source: wrappedSolAccount.publicKey,\n            destination: vaultAddress,\n            amount: parsedQuantity,\n            owner: wallet.publicKey,\n          }),\n          TokenInstructions.closeAccount({\n            source: wrappedSolAccount.publicKey,\n            destination: walletTokenAccount.pubkey,\n            owner: wallet.publicKey,\n          }),\n        );\n        signers.push(wrappedSolAccount);\n      } else {\n        transaction.add(\n          TokenInstructions.transfer({\n            source: walletTokenAccount.pubkey,\n            destination: vaultAddress,\n            amount: parsedQuantity,\n            owner: wallet.publicKey,\n          }),\n        );\n      }\n      return [transaction, signers];\n    },\n    true,\n  );\n\n  return (\n    <form onSubmit={onSubmit}>\n      <MintInPoolSelector\n        poolInfo={poolInfo}\n        label=\"Token Mint Address\"\n        value={address}\n        onChange={(value) => setAddress(value)}\n        style={{ marginBottom: 24 }}\n      />\n      <Input\n        addonBefore={<>Quantity</>}\n        value={quantity}\n        onChange={(e) => setQuantity(e.target.value.trim())}\n        style={{ marginBottom: 24 }}\n      />\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\n    </form>\n  );\n}\n\nfunction WithdrawTab({ poolInfo }: TabParams) {\n  const [address, setAddress] = useState('');\n  const [quantity, setQuantity] = useState('');\n\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [tokenAccounts] = useTokenAccounts();\n  const canSubmit =\n    connected && address && tokenAccounts && parseFloat(quantity);\n\n  const [onSubmit, submitting] = useOnSubmitHandler(\n    'withdrawing from pool',\n    async () => {\n      if (!wallet) {\n        throw new Error('Wallet is not connected');\n      }\n\n      const mintAddress = new PublicKey(address);\n      const vaultAddress = poolInfo.state.assets.find((asset) =>\n        asset.mint.equals(mintAddress),\n      )?.vaultAddress;\n      if (!vaultAddress) {\n        throw new Error('Asset not in pool');\n      }\n\n      const walletTokenAccount = getSelectedTokenAccountForMint(\n        tokenAccounts,\n        mintAddress,\n      );\n      if (!walletTokenAccount) {\n        throw new Error('Asset not in wallet');\n      }\n\n      const mintAccountInfo = await connection.getAccountInfo(mintAddress);\n      if (!mintAccountInfo) {\n        throw new Error('Mint not found');\n      }\n      const mintDecimals = parseTokenMintData(mintAccountInfo.data).decimals;\n      const parsedQuantity = Math.round(\n        parseFloat(quantity) * 10 ** mintDecimals,\n      );\n\n      const wrappedSolAccount =\n        mintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT) &&\n        walletTokenAccount.pubkey.equals(wallet.publicKey)\n          ? new Account()\n          : null;\n\n      const transaction = new Transaction();\n      const signers: Account[] = [];\n      if (wrappedSolAccount) {\n        transaction.add(\n          SystemProgram.createAccount({\n            fromPubkey: wallet.publicKey,\n            lamports: 2.04e6,\n            newAccountPubkey: wrappedSolAccount.publicKey,\n            programId: TokenInstructions.TOKEN_PROGRAM_ID,\n            space: 165,\n          }),\n          TokenInstructions.initializeAccount({\n            account: wrappedSolAccount.publicKey,\n            mint: TokenInstructions.WRAPPED_SOL_MINT,\n            owner: wallet.publicKey,\n          }),\n        );\n        signers.push(wrappedSolAccount);\n      }\n      transaction.add(\n        AdminControlledPoolInstructions.approveDelegate(\n          poolInfo,\n          vaultAddress,\n          wallet.publicKey,\n          new BN(parsedQuantity),\n        ),\n      );\n      if (wrappedSolAccount) {\n        transaction.add(\n          TokenInstructions.transfer({\n            source: vaultAddress,\n            destination: wrappedSolAccount.publicKey,\n            amount: parsedQuantity,\n            owner: wallet.publicKey,\n          }),\n          TokenInstructions.closeAccount({\n            source: wrappedSolAccount.publicKey,\n            destination: walletTokenAccount.pubkey,\n            owner: wallet.publicKey,\n          }),\n        );\n      } else {\n        transaction.add(\n          TokenInstructions.transfer({\n            source: vaultAddress,\n            destination: walletTokenAccount.pubkey,\n            amount: parsedQuantity,\n            owner: wallet.publicKey,\n          }),\n        );\n      }\n      return [transaction, signers];\n    },\n  );\n\n  return (\n    <form onSubmit={onSubmit}>\n      <MintInPoolSelector\n        poolInfo={poolInfo}\n        label=\"Token Mint Address\"\n        value={address}\n        onChange={(value) => setAddress(value)}\n        style={{ marginBottom: 24 }}\n      />\n      <Input\n        addonBefore={<>Quantity</>}\n        value={quantity}\n        onChange={(e) => setQuantity(e.target.value.trim())}\n        style={{ marginBottom: 24 }}\n      />\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\n    </form>\n  );\n}\n\nfunction UpdateFeeTab({ poolInfo }: TabParams) {\n  const [feeRate, setFeeRate] = useState('');\n\n  const { connected } = useWallet();\n  const [tokenAccounts] = useTokenAccounts();\n  const canSubmit = connected && tokenAccounts && parseFloat(feeRate);\n\n  const [onSubmit, submitting] = useOnSubmitHandler(\n    'changing pool fee',\n    async () => {\n      const transaction = new Transaction();\n      transaction.add(\n        AdminControlledPoolInstructions.updateFee(\n          poolInfo,\n          Math.round(parseFloat(feeRate) * 1_000_000),\n        ),\n      );\n      return [transaction, []];\n    },\n  );\n\n  return (\n    <form onSubmit={onSubmit}>\n      <Input\n        addonBefore={<>Fee Rate</>}\n        value={feeRate}\n        onChange={(e) => setFeeRate(e.target.value.trim())}\n        style={{ marginBottom: 24 }}\n      />\n      <SubmitButton canSubmit={canSubmit} submitting={submitting} />\n    </form>\n  );\n}\n\nfunction useOnSubmitHandler(\n  description: string,\n  makeTransaction: () => Promise<[Transaction, Account[]]>,\n  refresh = false,\n): [(FormEvent) => void, boolean] {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [submitting, setSubmitting] = useState(false);\n\n  async function onSubmit(e: FormEvent) {\n    e.preventDefault();\n    if (submitting) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      if (!connected || !wallet) {\n        throw new Error('Wallet not connected');\n      }\n      const [transaction, signers] = await makeTransaction();\n      await sendTransaction({ connection, wallet, transaction, signers });\n      if (refresh) {\n        refreshAllCaches();\n      }\n    } catch (e) {\n      notify({\n        message: `Error ${description}`,\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return [onSubmit, submitting];\n}\n\nfunction SubmitButton({ canSubmit, submitting }) {\n  const { connected } = useWallet();\n  return (\n    <Button\n      htmlType=\"submit\"\n      type=\"primary\"\n      disabled={!canSubmit || submitting}\n    >\n      {!connected ? 'Wallet not connected' : 'Submit'}\n    </Button>\n  );\n}\n\nfunction MintInPoolSelector({\n  poolInfo,\n  label,\n  value,\n  onChange,\n  style,\n}: {\n  poolInfo: PoolInfo;\n  label: string;\n  value: string;\n  onChange: (string) => void;\n  style: any;\n}) {\n  const mintToTickers = useMintToTickers();\n  return (\n    <Input.Group style={style}>\n      <span className=\"ant-input-group-addon\">{label}</span>\n      <Select onChange={onChange} value={value} style={{ width: '100%' }}>\n        {poolInfo.state.assets.map((asset) => (\n          <Option value={asset.mint.toBase58()} key={asset.mint.toBase58()}>\n            {mintToTickers[asset.mint.toBase58()] ? (\n              <>\n                {mintToTickers[asset.mint.toBase58()]} ({asset.mint.toBase58()})\n              </>\n            ) : (\n              asset.mint.toBase58()\n            )}\n          </Option>\n        ))}\n      </Select>\n    </Input.Group>\n  );\n}\n\nfunction MintSelector({ label, style, value, onChange }) {\n  const mintToTickers = useMintToTickers();\n  const options = useMemo(() => {\n    return Object.entries(mintToTickers)\n      .filter(\n        ([mintAddress, ticker]) =>\n          mintAddress.includes(value) ||\n          ticker.toLowerCase().includes(value.toLowerCase()),\n      )\n      .map(([mintAddress, ticker]) => ({\n        value: mintAddress,\n        label: (\n          <>\n            {ticker} ({mintAddress})\n          </>\n        ),\n      }));\n  }, [mintToTickers, value]);\n  return (\n    <Input.Group style={style}>\n      <span className=\"ant-input-group-addon\">{label}</span>\n      <AutoComplete\n        options={options}\n        value={value}\n        onChange={(e) => onChange(e)}\n        style={{ width: '100%' }}\n      />\n    </Input.Group>\n  );\n}\n","import React, { useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Col, PageHeader, Row, Spin, Typography } from 'antd';\nimport { PublicKey } from '@solana/web3.js';\nimport { useAccountInfo } from '../../../utils/connection';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport {\n  decodePoolState,\n  isAdminControlledPool,\n  PoolInfo,\n} from '@project-serum/pool';\nimport PoolInfoPanel from './PoolInfoPanel';\nimport { parseTokenMintData } from '../../../utils/tokens';\nimport PoolCreateRedeemPanel from './PoolCreateRedeemPanel';\nimport PoolBalancesPanel from './PoolBalancesPanel';\nimport { useHistory } from 'react-router-dom';\nimport { PoolAdminPanel } from './PoolAdminPanel';\nimport { useWallet } from '../../../utils/wallet';\n\nconst { Text } = Typography;\n\nexport default function PoolPage() {\n  const { poolAddress } = useParams();\n  const [poolAccountInfo, poolAccountLoaded] = useAccountInfo(\n    isPublicKey(poolAddress) ? new PublicKey(poolAddress) : null,\n  );\n  const history = useHistory();\n\n  const poolInfo: PoolInfo | null = useMemo(() => {\n    if (!poolAccountInfo) {\n      return null;\n    }\n    try {\n      return {\n        address: new PublicKey(poolAddress),\n        state: decodePoolState(poolAccountInfo.data),\n        program: poolAccountInfo.owner,\n      };\n    } catch (e) {\n      return null;\n    }\n  }, [poolAddress, poolAccountInfo]);\n  const [mintAccountInfo, mintAccountInfoLoaded] = useAccountInfo(\n    poolInfo?.state.poolTokenMint,\n  );\n  const mintInfo = useMemo(\n    () => (mintAccountInfo ? parseTokenMintData(mintAccountInfo.data) : null),\n    [mintAccountInfo],\n  );\n  const { wallet } = useWallet();\n\n  if (poolInfo && mintInfo && wallet) {\n    return (\n      <>\n        <PageHeader\n          title={<>Pool {poolInfo.address.toBase58()}</>}\n          onBack={() => history.push('/pools')}\n          subTitle={poolInfo.state.name}\n        />\n        <Row>\n          <Col xs={24} lg={12}>\n            <PoolInfoPanel poolInfo={poolInfo} mintInfo={mintInfo} />\n          </Col>\n          <Col xs={24} lg={12}>\n            <PoolCreateRedeemPanel poolInfo={poolInfo} mintInfo={mintInfo} />\n          </Col>\n          <Col xs={24}>\n            <PoolBalancesPanel poolInfo={poolInfo} />\n          </Col>\n          {wallet.connected &&\n          poolInfo.state.adminKey?.equals(wallet.publicKey) &&\n          isAdminControlledPool(poolInfo) ? (\n            <Col xs={24}>\n              <PoolAdminPanel poolInfo={poolInfo} />\n            </Col>\n          ) : null}\n        </Row>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <PageHeader\n        title={<>Pool {poolAddress}</>}\n        onBack={() => history.push('/pools')}\n      />\n      <FloatingElement>\n        {!poolAccountLoaded || !mintAccountInfoLoaded ? (\n          <Spin />\n        ) : (\n          <Text>Invalid pool</Text>\n        )}\n      </FloatingElement>\n    </>\n  );\n}\n\nfunction isPublicKey(address) {\n  try {\n    new PublicKey(address);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n","import styled from 'styled-components';\nimport FloatingElement from '../../components/layout/FloatingElement';\nimport React, { useState } from 'react';\nimport { Button, Input, Typography } from 'antd';\nimport { useHistory } from 'react-router-dom';\nimport Link from '../../components/Link';\n\nconst { Title } = Typography;\n\nconst Wrapper = styled.div`\n  max-width: 700px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 24px;\n  margin-bottom: 24px;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  margin-top: 16px;\n  margin-bottom: 48px;\n`;\n\nexport default function PoolListPage() {\n  const [poolAddress, setPoolAddress] = useState('');\n  const history = useHistory();\n\n  function onSubmit(e) {\n    e.preventDefault();\n    history.push(`/pools/${poolAddress}`);\n  }\n  return (\n    <Wrapper>\n      <FloatingElement>\n        <Title level={3}>Pools</Title>\n        <Form onSubmit={onSubmit}>\n          <Input\n            value={poolAddress}\n            onChange={(e) => setPoolAddress(e.target.value.trim())}\n            placeholder=\"Pool address\"\n          />\n          <Button type=\"primary\" htmlType=\"submit\">\n            Go\n          </Button>\n        </Form>\n        <Link to=\"/pools/new\">Create new pool</Link>\n      </FloatingElement>\n    </Wrapper>\n  );\n}\n","import { HashRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport TradePage from './pages/TradePage';\nimport OpenOrdersPage from './pages/OpenOrdersPage';\nimport React from 'react';\nimport BalancesPage from './pages/BalancesPage';\nimport ConvertPage from './pages/ConvertPage';\nimport BasicLayout from './components/BasicLayout';\nimport ListNewMarketPage from './pages/ListNewMarketPage';\nimport NewPoolPage from './pages/pools/NewPoolPage';\nimport PoolPage from './pages/pools/PoolPage';\nimport PoolListPage from './pages/pools/PoolListPage';\nimport { getTradePageUrl } from './utils/markets';\n\nexport function Routes() {\n  return (\n    <>\n      <HashRouter basename={'/'}>\n        <BasicLayout>\n          <Switch>\n            <Route exact path=\"/\">\n              <Redirect to={getTradePageUrl()} />\n            </Route>\n            <Route exact path=\"/market/:marketAddress\">\n              <TradePage />\n            </Route>\n            <Route exact path=\"/orders\" component={OpenOrdersPage} />\n            <Route exact path=\"/balances\" component={BalancesPage} />\n            <Route exact path=\"/convert\" component={ConvertPage} />\n            <Route\n              exact\n              path=\"/list-new-market\"\n              component={ListNewMarketPage}\n            />\n            <Route exact path=\"/pools\">\n              <PoolListPage />\n            </Route>\n            <Route exact path=\"/pools/new\">\n              <NewPoolPage />\n            </Route>\n            <Route exact path=\"/pools/:poolAddress\">\n              <PoolPage />\n            </Route>\n          </Switch>\n        </BasicLayout>\n      </HashRouter>\n    </>\n  );\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useConnection } from './connection';\nimport { PublicKey } from '@solana/web3.js';\nimport {\n  NameRegistryState,\n  getHashedName,\n  getNameAccountKey,\n  getTwitterRegistry,\n} from '@solana/spl-name-service';\nimport { TOKEN_PROGRAM_ID } from '@solana/spl-token';\nimport { useLocalStorageState } from './utils';\n\ninterface ReferrerContextValues {\n  usdcRef: PublicKey | undefined;\n  usdtRef: PublicKey | undefined;\n  setRefCode: (arg: any) => void;\n  refCode: string | undefined;\n  allowRefLink: boolean;\n}\n\nconst ReferrerContext: React.Context<null | ReferrerContextValues> = React.createContext<null | ReferrerContextValues>(\n  null,\n);\n\nexport const ASSOCIATED_TOKEN_PROGRAM_ID: PublicKey = new PublicKey(\n  'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL',\n);\n\nconst USDC_MINT = new PublicKey('EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v');\nconst USDT_MINT = new PublicKey('Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB');\n\nexport async function findAssociatedTokenAddress(\n  walletAddress: PublicKey,\n  tokenMintAddress: PublicKey,\n): Promise<PublicKey> {\n  return (\n    await PublicKey.findProgramAddress(\n      [\n        walletAddress.toBuffer(),\n        TOKEN_PROGRAM_ID.toBuffer(),\n        tokenMintAddress.toBuffer(),\n      ],\n      ASSOCIATED_TOKEN_PROGRAM_ID,\n    )\n  )[0];\n}\n\n// Address of the SOL TLD\nexport const SOL_TLD_AUTHORITY = new PublicKey(\n  '58PwtjSDuFHuUkYjH9BYnnQKHfwo9reZhC2zMJv9JPkx',\n);\n\nexport const getInputKey = async (input: string) => {\n  let hashed_input_name = await getHashedName(input);\n  let inputDomainKey = await getNameAccountKey(\n    hashed_input_name,\n    undefined,\n    SOL_TLD_AUTHORITY,\n  );\n  return { inputDomainKey: inputDomainKey, hashedInputName: hashed_input_name };\n};\n\nexport const useFeesAccountsFromRefCode = (refCode: string | undefined) => {\n  const connection = useConnection();\n  const [usdc, setUsdc] = useState<PublicKey | undefined>(undefined);\n  const [usdt, setUsdt] = useState<PublicKey | undefined>(undefined);\n\n  useEffect(() => {\n    const fn = async () => {\n      let usdcAddress: undefined | PublicKey = undefined;\n      let usdtAddress: undefined | PublicKey = undefined;\n      if (!refCode) {\n        setUsdc(\n          process.env.REACT_APP_USDC_REFERRAL_FEES_ADDRESS\n            ? new PublicKey(process.env.REACT_APP_USDC_REFERRAL_FEES_ADDRESS)\n            : undefined,\n        );\n        setUsdt(\n          process.env.REACT_APP_USDT_REFERRAL_FEES_ADDRESS\n            ? new PublicKey(process.env.REACT_APP_USDT_REFERRAL_FEES_ADDRESS)\n            : undefined,\n        );\n        return;\n      }\n      try {\n        let nameRegistryState: NameRegistryState;\n        if (refCode.includes('.sol')) {\n          const { inputDomainKey } = await getInputKey(\n            refCode.replace('.sol', ''),\n          );\n          nameRegistryState = await NameRegistryState.retrieve(\n            connection,\n            inputDomainKey,\n          );\n        } else {\n          nameRegistryState = await getTwitterRegistry(connection, refCode);\n        }\n        usdcAddress = await findAssociatedTokenAddress(\n          nameRegistryState.owner,\n          USDC_MINT,\n        );\n        usdtAddress = await findAssociatedTokenAddress(\n          nameRegistryState.owner,\n          USDT_MINT,\n        );\n        const usdcAccountInfo = await connection.getAccountInfo(usdcAddress);\n        const usdtAccountInfo = await connection.getAccountInfo(usdtAddress);\n        if (!!usdcAccountInfo?.data) setUsdc(usdcAddress);\n        if (!!usdtAccountInfo?.data) setUsdt(usdtAddress);\n      } catch (err) {\n        console.warn(`Error getting refcode ${err}`);\n      }\n    };\n    fn();\n  }, [connection, refCode]);\n  return { usdcRef: usdc, usdtRef: usdt };\n};\n\nexport const ReferrerProvider = ({ children }) => {\n  const allowRefLink = process.env.REACT_APP_ALLOW_REF_LINK === 'true';\n  const [refCode, setRefCode] = useLocalStorageState('refCode');\n  const { usdcRef, usdtRef } = useFeesAccountsFromRefCode(\n    allowRefLink ? refCode : undefined,\n  );\n  useEffect(() => {\n    if (!allowRefLink) setRefCode(null);\n  }, [allowRefLink, setRefCode]);\n  return (\n    <ReferrerContext.Provider\n      value={{ usdcRef, usdtRef, setRefCode, refCode, allowRefLink }}\n    >\n      {children}\n    </ReferrerContext.Provider>\n  );\n};\n\nexport const useReferrer = () => {\n  const context = useContext(ReferrerContext);\n  if (!context) throw new Error('Missing referrer context');\n  return {\n    usdcRef: context.usdcRef,\n    usdtRef: context.usdtRef,\n    setRefCode: context.setRefCode,\n    refCode: context.refCode,\n    allowRefLink: context.allowRefLink,\n  };\n};\n","import React, { Suspense } from 'react';\nimport './App.less';\nimport { ConnectionProvider } from './utils/connection';\nimport { WalletProvider } from './utils/wallet';\nimport { GlobalStyle } from './global_style';\nimport { Spin } from 'antd';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport { Routes } from './routes';\nimport { ReferrerProvider } from './utils/referrer';\n\nexport default function App() {\n  return (\n    <Suspense fallback={() => <Spin size=\"large\" />}>\n      <GlobalStyle />\n      <ErrorBoundary>\n        <ConnectionProvider>\n          <ReferrerProvider>\n            <WalletProvider>\n              <Suspense fallback={() => <Spin size=\"large\" />}>\n                <Routes />\n              </Suspense>\n            </WalletProvider>\n          </ReferrerProvider>\n        </ConnectionProvider>\n      </ErrorBoundary>\n    </Suspense>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}